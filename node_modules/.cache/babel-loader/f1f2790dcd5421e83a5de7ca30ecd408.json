{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, ref, computed, nextTick, onMounted, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, createElementVNode, normalizeClass, normalizeStyle, createVNode, createElementBlock, Fragment, renderList, renderSlot, createTextVNode, toDisplayString, withDirectives, mergeProps, withKeys, withModifiers, createSlots } from 'vue';\nimport { NOOP, isArray } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar COMPONENT_NAME = \"ElAutocomplete\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip: ElTooltip,\n    ElInput: ElInput,\n    ElScrollbar: ElScrollbar,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  directives: {\n    clickoutside: ClickOutside\n  },\n  inheritAttrs: false,\n  props: {\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    placement: {\n      type: String,\n      validator: function validator(val) {\n        return [\"top\", \"top-start\", \"top-end\", \"bottom\", \"bottom-start\", \"bottom-end\"].includes(val);\n      },\n      default: \"bottom-start\"\n    },\n    fetchSuggestions: {\n      type: Function,\n      default: NOOP\n    },\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    triggerOnFocus: {\n      type: Boolean,\n      default: true\n    },\n    selectWhenUnmatched: {\n      type: Boolean,\n      default: false\n    },\n    hideLoading: {\n      type: Boolean,\n      default: false\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    highlightFirstItem: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, \"input\", \"change\", \"focus\", \"blur\", \"clear\", \"select\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"autocomplete\");\n\n    var _useDeprecateAppendTo = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\"),\n        compatTeleported = _useDeprecateAppendTo.compatTeleported;\n\n    var attrs = useAttrs();\n    var suggestions = ref([]);\n    var highlightedIndex = ref(-1);\n    var dropdownWidth = ref(\"\");\n    var activated = ref(false);\n    var suggestionDisabled = ref(false);\n    var loading = ref(false);\n    var inputRef = ref(null);\n    var regionRef = ref(null);\n    var popper = ref(null);\n    var id = computed(function () {\n      return ns.b(String(generateId()));\n    });\n    var suggestionVisible = computed(function () {\n      var isValidData = isArray(suggestions.value) && suggestions.value.length > 0;\n      return (isValidData || loading.value) && activated.value;\n    });\n    var suggestionLoading = computed(function () {\n      return !props.hideLoading && loading.value;\n    });\n\n    var onSuggestionShow = function onSuggestionShow() {\n      nextTick(function () {\n        if (suggestionVisible.value) {\n          dropdownWidth.value = \"\".concat(inputRef.value.$el.offsetWidth, \"px\");\n        }\n      });\n    };\n\n    onMounted(function () {\n      inputRef.value.inputOrTextarea.setAttribute(\"role\", \"textbox\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-autocomplete\", \"list\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-controls\", \"id\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-activedescendant\", \"\".concat(id.value, \"-item-\").concat(highlightedIndex.value));\n    });\n\n    var getData = function getData(queryString) {\n      if (suggestionDisabled.value) {\n        return;\n      }\n\n      loading.value = true;\n      props.fetchSuggestions(queryString, function (suggestionsArg) {\n        loading.value = false;\n\n        if (suggestionDisabled.value) {\n          return;\n        }\n\n        if (isArray(suggestionsArg)) {\n          suggestions.value = suggestionsArg;\n          highlightedIndex.value = props.highlightFirstItem ? 0 : -1;\n        } else {\n          throwError(\"ElAutocomplete\", \"autocomplete suggestions must be an array\");\n        }\n      });\n    };\n\n    var debouncedGetData = debounce(getData, props.debounce);\n\n    var handleInput = function handleInput(value) {\n      ctx.emit(\"input\", value);\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      suggestionDisabled.value = false;\n\n      if (!props.triggerOnFocus && !value) {\n        suggestionDisabled.value = true;\n        suggestions.value = [];\n        return;\n      }\n\n      debouncedGetData(value);\n    };\n\n    var handleChange = function handleChange(value) {\n      ctx.emit(\"change\", value);\n    };\n\n    var handleFocus = function handleFocus(e) {\n      activated.value = true;\n      ctx.emit(\"focus\", e);\n\n      if (props.triggerOnFocus) {\n        debouncedGetData(String(props.modelValue));\n      }\n    };\n\n    var handleBlur = function handleBlur(e) {\n      ctx.emit(\"blur\", e);\n    };\n\n    var handleClear = function handleClear() {\n      activated.value = false;\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n      ctx.emit(\"clear\");\n    };\n\n    var handleKeyEnter = function handleKeyEnter() {\n      if (suggestionVisible.value && highlightedIndex.value >= 0 && highlightedIndex.value < suggestions.value.length) {\n        select(suggestions.value[highlightedIndex.value]);\n      } else if (props.selectWhenUnmatched) {\n        ctx.emit(\"select\", {\n          value: props.modelValue\n        });\n        nextTick(function () {\n          suggestions.value = [];\n          highlightedIndex.value = -1;\n        });\n      }\n    };\n\n    var close = function close() {\n      activated.value = false;\n    };\n\n    var focus = function focus() {\n      var _a;\n\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n\n    var select = function select(item) {\n      ctx.emit(\"input\", item[props.valueKey]);\n      ctx.emit(UPDATE_MODEL_EVENT, item[props.valueKey]);\n      ctx.emit(\"select\", item);\n      nextTick(function () {\n        suggestions.value = [];\n        highlightedIndex.value = -1;\n      });\n    };\n\n    var highlight = function highlight(index) {\n      if (!suggestionVisible.value || loading.value) {\n        return;\n      }\n\n      if (index < 0) {\n        highlightedIndex.value = -1;\n        return;\n      }\n\n      if (index >= suggestions.value.length) {\n        index = suggestions.value.length - 1;\n      }\n\n      var suggestion = regionRef.value.querySelector(\".\".concat(ns.be(\"suggestion\", \"wrap\")));\n      var suggestionList = suggestion.querySelectorAll(\".\".concat(ns.be(\"suggestion\", \"list\"), \" li\"));\n      var highlightItem = suggestionList[index];\n      var scrollTop = suggestion.scrollTop;\n      var offsetTop = highlightItem.offsetTop,\n          scrollHeight = highlightItem.scrollHeight;\n\n      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n        suggestion.scrollTop += scrollHeight;\n      }\n\n      if (offsetTop < scrollTop) {\n        suggestion.scrollTop -= scrollHeight;\n      }\n\n      highlightedIndex.value = index;\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-activedescendant\", \"\".concat(id.value, \"-item-\").concat(highlightedIndex.value));\n    };\n\n    return {\n      attrs: attrs,\n      suggestions: suggestions,\n      highlightedIndex: highlightedIndex,\n      dropdownWidth: dropdownWidth,\n      activated: activated,\n      suggestionDisabled: suggestionDisabled,\n      loading: loading,\n      inputRef: inputRef,\n      regionRef: regionRef,\n      popper: popper,\n      id: id,\n      suggestionVisible: suggestionVisible,\n      suggestionLoading: suggestionLoading,\n      compatTeleported: compatTeleported,\n      getData: getData,\n      handleInput: handleInput,\n      handleChange: handleChange,\n      handleFocus: handleFocus,\n      handleBlur: handleBlur,\n      handleClear: handleClear,\n      handleKeyEnter: handleKeyEnter,\n      close: close,\n      focus: focus,\n      select: select,\n      highlight: highlight,\n      onSuggestionShow: onSuggestionShow,\n      ns: ns\n    };\n  }\n});\n\nvar _hoisted_1 = [\"aria-expanded\", \"aria-owns\"];\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = [\"id\", \"aria-selected\", \"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_loading = resolveComponent(\"loading\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.suggestionVisible,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.suggestionVisible = $event;\n    }),\n    placement: _ctx.placement,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\"],\n    \"popper-class\": \"\".concat(_ctx.ns.e(\"popper\"), \" \").concat(_ctx.popperClass),\n    teleported: _ctx.compatTeleported,\n    \"gpu-acceleration\": false,\n    pure: \"\",\n    \"manual-mode\": \"\",\n    effect: \"light\",\n    trigger: \"click\",\n    transition: \"\".concat(_ctx.ns.namespace.value, \"-zoom-in-top\"),\n    persistent: \"\",\n    onShow: _ctx.onSuggestionShow\n  }, {\n    content: withCtx(function () {\n      return [createElementVNode(\"div\", {\n        ref: \"regionRef\",\n        class: normalizeClass([_ctx.ns.b(\"suggestion\"), _ctx.ns.is(\"loading\", _ctx.suggestionLoading)]),\n        style: normalizeStyle({\n          minWidth: _ctx.dropdownWidth,\n          outline: \"none\"\n        }),\n        role: \"region\"\n      }, [createVNode(_component_el_scrollbar, {\n        id: _ctx.id,\n        tag: \"ul\",\n        \"wrap-class\": _ctx.ns.be(\"suggestion\", \"wrap\"),\n        \"view-class\": _ctx.ns.be(\"suggestion\", \"list\"),\n        role: \"listbox\"\n      }, {\n        default: withCtx(function () {\n          return [_ctx.suggestionLoading ? (openBlock(), createElementBlock(\"li\", _hoisted_2, [createVNode(_component_el_icon, {\n            class: \"is-loading\"\n          }, {\n            default: withCtx(function () {\n              return [createVNode(_component_loading)];\n            }),\n            _: 1\n          })])) : (openBlock(true), createElementBlock(Fragment, {\n            key: 1\n          }, renderList(_ctx.suggestions, function (item, index) {\n            return openBlock(), createElementBlock(\"li\", {\n              id: \"\".concat(_ctx.id, \"-item-\").concat(index),\n              key: index,\n              class: normalizeClass({\n                highlighted: _ctx.highlightedIndex === index\n              }),\n              role: \"option\",\n              \"aria-selected\": _ctx.highlightedIndex === index,\n              onClick: function onClick($event) {\n                return _ctx.select(item);\n              }\n            }, [renderSlot(_ctx.$slots, \"default\", {\n              item: item\n            }, function () {\n              return [createTextVNode(toDisplayString(item[_ctx.valueKey]), 1)];\n            })], 10, _hoisted_3);\n          }), 128))];\n        }),\n        _: 3\n      }, 8, [\"id\", \"wrap-class\", \"view-class\"])], 6)];\n    }),\n    default: withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([_ctx.ns.b(), _ctx.$attrs.class]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        role: \"combobox\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": _ctx.suggestionVisible,\n        \"aria-owns\": _ctx.id\n      }, [createVNode(_component_el_input, mergeProps({\n        ref: \"inputRef\"\n      }, _ctx.attrs, {\n        \"model-value\": _ctx.modelValue,\n        onInput: _ctx.handleInput,\n        onChange: _ctx.handleChange,\n        onFocus: _ctx.handleFocus,\n        onBlur: _ctx.handleBlur,\n        onClear: _ctx.handleClear,\n        onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers(function ($event) {\n          return _ctx.highlight(_ctx.highlightedIndex - 1);\n        }, [\"prevent\"]), [\"up\"])), _cache[1] || (_cache[1] = withKeys(withModifiers(function ($event) {\n          return _ctx.highlight(_ctx.highlightedIndex + 1);\n        }, [\"prevent\"]), [\"down\"])), withKeys(_ctx.handleKeyEnter, [\"enter\"]), withKeys(_ctx.close, [\"tab\"])]\n      }), createSlots({\n        _: 2\n      }, [_ctx.$slots.prepend ? {\n        name: \"prepend\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"prepend\")];\n        })\n      } : void 0, _ctx.$slots.append ? {\n        name: \"append\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"append\")];\n        })\n      } : void 0, _ctx.$slots.prefix ? {\n        name: \"prefix\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"prefix\")];\n        })\n      } : void 0, _ctx.$slots.suffix ? {\n        name: \"suffix\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"suffix\")];\n        })\n      } : void 0]), 1040, [\"model-value\", \"onInput\", \"onChange\", \"onFocus\", \"onBlur\", \"onClear\", \"onKeydown\"])], 14, _hoisted_1)), [[_directive_clickoutside, _ctx.close]])];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"placement\", \"popper-class\", \"teleported\", \"transition\", \"onShow\"]);\n}\n\nvar Autocomplete = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Autocomplete as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElTooltip","ElInput","ElScrollbar","ElIcon","Loading","directives","clickoutside","ClickOutside","inheritAttrs","props","valueKey","type","String","default","modelValue","Number","debounce","placement","validator","val","includes","fetchSuggestions","Function","NOOP","popperClass","triggerOnFocus","Boolean","selectWhenUnmatched","hideLoading","popperAppendToBody","teleported","useTooltipContentProps","highlightFirstItem","emits","UPDATE_MODEL_EVENT","setup","ctx","ns","useNamespace","useDeprecateAppendToBody","compatTeleported","attrs","useAttrs","suggestions","ref","highlightedIndex","dropdownWidth","activated","suggestionDisabled","loading","inputRef","regionRef","popper","id","computed","b","generateId","suggestionVisible","isValidData","isArray","value","length","suggestionLoading","onSuggestionShow","nextTick","$el","offsetWidth","onMounted","inputOrTextarea","setAttribute","getData","queryString","suggestionsArg","throwError","debouncedGetData","handleInput","emit","handleChange","handleFocus","e","handleBlur","handleClear","handleKeyEnter","select","close","focus","item","highlight","index","suggestion","querySelector","suggestionList","highlightItem","scrollTop","_openBlock","visible","pure","effect","trigger","transition","persistent","onShow","content","class","_normalizeClass","style","minWidth","outline","role","createVNode","tag","_ctx","be","_hoisted_2","createElementBlock","key","highlighted","onClick","renderSlot","createTextVNode","onInput","onChange","onFocus","onBlur","onClear","onKeydown","_cache","withKeys","createSlots","_","fn"],"sources":["../../../../../../packages/components/autocomplete/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popper\"\n    v-model:visible=\"suggestionVisible\"\n    :placement=\"placement\"\n    :fallback-placements=\"['bottom-start', 'top-start']\"\n    :popper-class=\"`${ns.e('popper')} ${popperClass}`\"\n    :teleported=\"compatTeleported\"\n    :gpu-acceleration=\"false\"\n    pure\n    manual-mode\n    effect=\"light\"\n    trigger=\"click\"\n    :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n    persistent\n    @show=\"onSuggestionShow\"\n  >\n    <div\n      v-clickoutside=\"close\"\n      :class=\"[ns.b(), $attrs.class]\"\n      :style=\"$attrs.style\"\n      role=\"combobox\"\n      aria-haspopup=\"listbox\"\n      :aria-expanded=\"suggestionVisible\"\n      :aria-owns=\"id\"\n    >\n      <el-input\n        ref=\"inputRef\"\n        v-bind=\"attrs\"\n        :model-value=\"modelValue\"\n        @input=\"handleInput\"\n        @change=\"handleChange\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @clear=\"handleClear\"\n        @keydown.up.prevent=\"highlight(highlightedIndex - 1)\"\n        @keydown.down.prevent=\"highlight(highlightedIndex + 1)\"\n        @keydown.enter=\"handleKeyEnter\"\n        @keydown.tab=\"close\"\n      >\n        <template v-if=\"$slots.prepend\" #prepend>\n          <slot name=\"prepend\"></slot>\n        </template>\n        <template v-if=\"$slots.append\" #append>\n          <slot name=\"append\"></slot>\n        </template>\n        <template v-if=\"$slots.prefix\" #prefix>\n          <slot name=\"prefix\"></slot>\n        </template>\n        <template v-if=\"$slots.suffix\" #suffix>\n          <slot name=\"suffix\"></slot>\n        </template>\n      </el-input>\n    </div>\n    <template #content>\n      <div\n        ref=\"regionRef\"\n        :class=\"[ns.b('suggestion'), ns.is('loading', suggestionLoading)]\"\n        :style=\"{ minWidth: dropdownWidth, outline: 'none' }\"\n        role=\"region\"\n      >\n        <el-scrollbar\n          :id=\"id\"\n          tag=\"ul\"\n          :wrap-class=\"ns.be('suggestion', 'wrap')\"\n          :view-class=\"ns.be('suggestion', 'list')\"\n          role=\"listbox\"\n        >\n          <li v-if=\"suggestionLoading\">\n            <el-icon class=\"is-loading\"><loading /></el-icon>\n          </li>\n          <template v-else>\n            <li\n              v-for=\"(item, index) in suggestions\"\n              :id=\"`${id}-item-${index}`\"\n              :key=\"index\"\n              :class=\"{ highlighted: highlightedIndex === index }\"\n              role=\"option\"\n              :aria-selected=\"highlightedIndex === index\"\n              @click=\"select(item)\"\n            >\n              <slot :item=\"item\">{{ item[valueKey] }}</slot>\n            </li>\n          </template>\n        </el-scrollbar>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, nextTick } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\nimport { useAttrs, useNamespace } from '@element-plus/hooks'\nimport { ClickOutside } from '@element-plus/directives'\nimport { generateId, isArray, throwError } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElInput from '@element-plus/components/input'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\n\nimport type { Placement } from '@element-plus/components/popper'\nimport type { PropType } from 'vue'\n\nconst COMPONENT_NAME = 'ElAutocomplete'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip,\n    ElInput,\n    ElScrollbar,\n    ElIcon,\n    Loading,\n  },\n  directives: {\n    clickoutside: ClickOutside,\n  },\n  inheritAttrs: false,\n  props: {\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    modelValue: {\n      type: [String, Number],\n      default: '',\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    placement: {\n      type: String as PropType<Placement>,\n      validator: (val: string): boolean => {\n        return [\n          'top',\n          'top-start',\n          'top-end',\n          'bottom',\n          'bottom-start',\n          'bottom-end',\n        ].includes(val)\n      },\n      default: 'bottom-start',\n    },\n    fetchSuggestions: {\n      type: Function as PropType<\n        (queryString: string, cb: (data: any[]) => void) => void\n      >,\n      default: NOOP,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    triggerOnFocus: {\n      type: Boolean,\n      default: true,\n    },\n    selectWhenUnmatched: {\n      type: Boolean,\n      default: false,\n    },\n    hideLoading: {\n      type: Boolean,\n      default: false,\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    highlightFirstItem: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    'input',\n    'change',\n    'focus',\n    'blur',\n    'clear',\n    'select',\n  ],\n  setup(props, ctx) {\n    const ns = useNamespace('autocomplete')\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n    const attrs = useAttrs()\n    const suggestions = ref<any[]>([])\n    const highlightedIndex = ref(-1)\n    const dropdownWidth = ref('')\n    const activated = ref(false)\n    const suggestionDisabled = ref(false)\n    const loading = ref(false)\n    const inputRef = ref<{\n      inputOrTextarea: HTMLInputElement | HTMLTextAreaElement\n      focus: () => void\n      $el: HTMLElement\n    } | null>(null)\n    const regionRef = ref<HTMLElement | null>(null)\n    const popper = ref(null)\n\n    const id = computed(() => {\n      return ns.b(String(generateId()))\n    })\n    const suggestionVisible = computed(() => {\n      const isValidData =\n        isArray(suggestions.value) && suggestions.value.length > 0\n      return (isValidData || loading.value) && activated.value\n    })\n    const suggestionLoading = computed(() => {\n      return !props.hideLoading && loading.value\n    })\n\n    const onSuggestionShow = () => {\n      nextTick(() => {\n        if (suggestionVisible.value) {\n          dropdownWidth.value = `${inputRef.value!.$el.offsetWidth}px`\n        }\n      })\n    }\n\n    onMounted(() => {\n      inputRef.value!.inputOrTextarea.setAttribute('role', 'textbox')\n      inputRef.value!.inputOrTextarea.setAttribute('aria-autocomplete', 'list')\n      inputRef.value!.inputOrTextarea.setAttribute('aria-controls', 'id')\n      inputRef.value!.inputOrTextarea.setAttribute(\n        'aria-activedescendant',\n        `${id.value}-item-${highlightedIndex.value}`\n      )\n    })\n\n    const getData = (queryString: string) => {\n      if (suggestionDisabled.value) {\n        return\n      }\n      loading.value = true\n      props.fetchSuggestions(queryString, (suggestionsArg) => {\n        loading.value = false\n        if (suggestionDisabled.value) {\n          return\n        }\n        if (isArray(suggestionsArg)) {\n          suggestions.value = suggestionsArg\n          highlightedIndex.value = props.highlightFirstItem ? 0 : -1\n        } else {\n          throwError(\n            'ElAutocomplete',\n            'autocomplete suggestions must be an array'\n          )\n        }\n      })\n    }\n    const debouncedGetData = debounce(getData, props.debounce)\n    const handleInput = (value: string) => {\n      ctx.emit('input', value)\n      ctx.emit(UPDATE_MODEL_EVENT, value)\n      suggestionDisabled.value = false\n      if (!props.triggerOnFocus && !value) {\n        suggestionDisabled.value = true\n        suggestions.value = []\n        return\n      }\n      debouncedGetData(value)\n    }\n    const handleChange = (value) => {\n      ctx.emit('change', value)\n    }\n    const handleFocus = (e) => {\n      activated.value = true\n      ctx.emit('focus', e)\n      if (props.triggerOnFocus) {\n        debouncedGetData(String(props.modelValue))\n      }\n    }\n    const handleBlur = (e) => {\n      ctx.emit('blur', e)\n    }\n    const handleClear = () => {\n      activated.value = false\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n      ctx.emit('clear')\n    }\n    const handleKeyEnter = () => {\n      if (\n        suggestionVisible.value &&\n        highlightedIndex.value >= 0 &&\n        highlightedIndex.value < suggestions.value.length\n      ) {\n        select(suggestions.value[highlightedIndex.value])\n      } else if (props.selectWhenUnmatched) {\n        ctx.emit('select', { value: props.modelValue })\n        nextTick(() => {\n          suggestions.value = []\n          highlightedIndex.value = -1\n        })\n      }\n    }\n    const close = () => {\n      activated.value = false\n    }\n    const focus = () => {\n      inputRef.value?.focus()\n    }\n    const select = (item) => {\n      ctx.emit('input', item[props.valueKey])\n      ctx.emit(UPDATE_MODEL_EVENT, item[props.valueKey])\n      ctx.emit('select', item)\n      nextTick(() => {\n        suggestions.value = []\n        highlightedIndex.value = -1\n      })\n    }\n    const highlight = (index: number) => {\n      if (!suggestionVisible.value || loading.value) {\n        return\n      }\n      if (index < 0) {\n        highlightedIndex.value = -1\n        return\n      }\n      if (index >= suggestions.value.length) {\n        index = suggestions.value.length - 1\n      }\n      const suggestion = regionRef.value!.querySelector(\n        `.${ns.be('suggestion', 'wrap')}`\n      )!\n      const suggestionList = suggestion.querySelectorAll(\n        `.${ns.be('suggestion', 'list')} li`\n      )!\n      const highlightItem = suggestionList[index]\n      const scrollTop = suggestion.scrollTop\n      const { offsetTop, scrollHeight } = highlightItem as HTMLElement\n\n      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n        suggestion.scrollTop += scrollHeight\n      }\n      if (offsetTop < scrollTop) {\n        suggestion.scrollTop -= scrollHeight\n      }\n      highlightedIndex.value = index\n      inputRef.value!.inputOrTextarea.setAttribute(\n        'aria-activedescendant',\n        `${id.value}-item-${highlightedIndex.value}`\n      )\n    }\n\n    return {\n      attrs,\n      suggestions,\n      highlightedIndex,\n      dropdownWidth,\n      activated,\n      suggestionDisabled,\n      loading,\n      inputRef,\n      regionRef,\n      popper,\n\n      id,\n      suggestionVisible,\n      suggestionLoading,\n\n      // deprecation in 2.1.0\n      compatTeleported,\n\n      getData,\n      handleInput,\n      handleChange,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleKeyEnter,\n      close,\n      focus,\n      select,\n      highlight,\n      onSuggestionShow,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}