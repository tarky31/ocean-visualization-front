{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { getCurrentInstance, ref } from 'vue';\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util.mjs';\n\nfunction useExpand(watcherData) {\n  var instance = getCurrentInstance();\n  var defaultExpandAll = ref(false);\n  var expandRows = ref([]);\n\n  var updateExpandRows = function updateExpandRows() {\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice();\n    } else if (rowKey) {\n      var expandRowsMap = getKeysMap(expandRows.value, rowKey);\n      expandRows.value = data.reduce(function (prev, row) {\n        var rowId = getRowIdentity(row, rowKey);\n        var rowInfo = expandRowsMap[rowId];\n\n        if (rowInfo) {\n          prev.push(row);\n        }\n\n        return prev;\n      }, []);\n    } else {\n      expandRows.value = [];\n    }\n  };\n\n  var toggleRowExpansion = function toggleRowExpansion(row, expanded) {\n    var changed = toggleRowStatus(expandRows.value, row, expanded);\n\n    if (changed) {\n      instance.emit(\"expand-change\", row, expandRows.value.slice());\n      instance.store.scheduleLayout();\n    }\n  };\n\n  var setExpandRowKeys = function setExpandRowKeys(rowKeys) {\n    instance.store.assertRowKey();\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n    var keysMap = getKeysMap(data, rowKey);\n    expandRows.value = rowKeys.reduce(function (prev, cur) {\n      var info = keysMap[cur];\n\n      if (info) {\n        prev.push(info.row);\n      }\n\n      return prev;\n    }, []);\n  };\n\n  var isRowExpanded = function isRowExpanded(row) {\n    var rowKey = watcherData.rowKey.value;\n\n    if (rowKey) {\n      var expandMap = getKeysMap(expandRows.value, rowKey);\n      return !!expandMap[getRowIdentity(row, rowKey)];\n    }\n\n    return expandRows.value.indexOf(row) !== -1;\n  };\n\n  return {\n    updateExpandRows: updateExpandRows,\n    toggleRowExpansion: toggleRowExpansion,\n    setExpandRowKeys: setExpandRowKeys,\n    isRowExpanded: isRowExpanded,\n    states: {\n      expandRows: expandRows,\n      defaultExpandAll: defaultExpandAll\n    }\n  };\n}\n\nexport { useExpand as default };","map":{"version":3,"mappings":"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","names":["useExpand","watcherData","instance","getCurrentInstance","defaultExpandAll","ref","expandRows","updateExpandRows","data","value","rowKey","slice","expandRowsMap","getKeysMap","reduce","prev","row","rowId","getRowIdentity","rowInfo","push","toggleRowExpansion","expanded","changed","toggleRowStatus","emit","store","scheduleLayout","setExpandRowKeys","rowKeys","assertRowKey","keysMap","cur","info","isRowExpanded","expandMap","indexOf","states"],"sources":["../../../../../../../packages/components/table/src/store/expand.ts"],"sourcesContent":["import { ref, getCurrentInstance } from 'vue'\nimport { toggleRowStatus, getKeysMap, getRowIdentity } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { WatcherPropsData } from './index'\nimport type { Table } from '../table/defaults'\n\nfunction useExpand<T>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const defaultExpandAll = ref(false)\n  const expandRows: Ref<T[]> = ref([])\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice()\n    } else if (rowKey) {\n      // TODO：这里的代码可以优化\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey)\n      expandRows.value = data.reduce((prev: T[], row: T) => {\n        const rowId = getRowIdentity(row, rowKey)\n        const rowInfo = expandRowsMap[rowId]\n        if (rowInfo) {\n          prev.push(row)\n        }\n        return prev\n      }, [])\n    } else {\n      expandRows.value = []\n    }\n  }\n\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded)\n    if (changed) {\n      instance.emit('expand-change', row, expandRows.value.slice())\n      instance.store.scheduleLayout()\n    }\n  }\n\n  const setExpandRowKeys = (rowKeys: string[]) => {\n    instance.store.assertRowKey()\n    // TODO：这里的代码可以优化\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    const keysMap = getKeysMap(data, rowKey)\n    expandRows.value = rowKeys.reduce((prev: T[], cur: string) => {\n      const info = keysMap[cur]\n      if (info) {\n        prev.push(info.row)\n      }\n      return prev\n    }, [])\n  }\n\n  const isRowExpanded = (row: T): boolean => {\n    const rowKey = watcherData.rowKey.value\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey)\n      return !!expandMap[getRowIdentity(row, rowKey)]\n    }\n    return expandRows.value.indexOf(row) !== -1\n  }\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll,\n    },\n  }\n}\n\nexport default useExpand\n"]},"metadata":{},"sourceType":"module"}