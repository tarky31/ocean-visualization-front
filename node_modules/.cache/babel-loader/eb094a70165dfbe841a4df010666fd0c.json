{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, inject, ref, computed, watch, reactive, markRaw, withDirectives, openBlock, createElementBlock, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { eagerComputed } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport { tabPaneProps } from './tab-pane.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar COMPONENT_NAME = \"ElTabPane\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n  setup: function setup(props) {\n    var instance = getCurrentInstance();\n    var tabsRoot = inject(tabsRootContextKey);\n    if (!tabsRoot) throwError(COMPONENT_NAME, \"must use with ElTabs\");\n    var index = ref();\n    var loaded = ref(false);\n    var isClosable = computed(function () {\n      return props.closable || tabsRoot.props.closable;\n    });\n    var active = eagerComputed(function () {\n      return tabsRoot.currentName.value === (props.name || index.value);\n    });\n    var paneName = computed(function () {\n      return props.name || index.value;\n    });\n    var shouldBeRender = eagerComputed(function () {\n      return !props.lazy || loaded.value || active.value;\n    });\n    watch(active, function (val) {\n      if (val) loaded.value = true;\n    });\n    tabsRoot.updatePaneState(reactive({\n      uid: instance.uid,\n      instance: markRaw(instance),\n      props: props,\n      paneName: paneName,\n      active: active,\n      index: index,\n      isClosable: isClosable\n    }));\n    return {\n      active: active,\n      paneName: paneName,\n      shouldBeRender: shouldBeRender\n    };\n  }\n});\n\nvar _hoisted_1 = [\"id\", \"aria-hidden\", \"aria-labelledby\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    id: \"pane-\".concat(_ctx.paneName),\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": \"tab-\".concat(_ctx.paneName)\n  }, [renderSlot(_ctx.$slots, \"default\")], 8, _hoisted_1)), [[vShow, _ctx.active]]) : createCommentVNode(\"v-if\", true);\n}\n\nvar TabPane = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TabPane as default };","map":{"version":3,"mappings":";;;;;;;;;AA6BA,IAAMA,iBAAiB,WAAvB;;AAEA,IAAKC,YAAaC,gBAAa;AAC7BC,QAAMH,cADuB;AAE7BI,SAAOC,YAFsB;AAG7BC,OAH6B,iBAGvBF,KAHuB,EAGhB;AACX,QAAMG,WAAWC,oBAAjB;AACA,QAAMC,WAAWC,OAAOC,kBAAP,CAAjB;AACA,QAAI,CAACF,QAAL,EAAeG,WAAWZ,cAAX;AAEf,QAAMa,QAAQC,KAAd;AACA,QAAMC,SAASD,IAAI,KAAJ,CAAf;AACA,QAAME,aAAaC,SAAS;AAAA,aAAMb,MAAMc,QAAN,IAAkBT,SAASL,KAAT,CAAec,QAAvC;AAAA,KAAT,CAAnB;AACA,QAAMC,SAASC,cACb;AAAA,aAAMX,SAASY,WAAT,CAAqBC,KAArB,MAAqBlB,MAAiBD,IAAjB,IAAyBU,MAAMS,KAApD,CAAN;AAAA,KADa,CAAf;AAGA,QAAMC,WAAWN,SAAS;AAAA,aAAMb,MAAMD,IAAN,IAAcU,MAAMS,KAA1B;AAAA,KAAT,CAAjB;AACA,QAAME,iBAAiBJ,cACrB;AAAA,aAAM,CAAChB,MAAMqB,IAAP,IAAeV,OAAOO,KAAtB,IAA+BH,OAAOG,KAA5C;AAAA,KADqB,CAAvB;AAIAI,UAAMP,MAAN,EAAc,UAACQ,GAAD,EAAS;AACrB,UAAIA,GAAJ,EAASZ,OAAOO,KAAP,GAAe,IAAf;AAAe,KAD1B;AAIAb,aAASmB,eAAT,CACEC,SAAS;AACPC,WAAKvB,SAASuB,GADP;AAEPvB,gBAAUwB,QAAQxB,QAAR,CAFH;AAGPH,kBAHO;AAIPmB,wBAJO;AAKPJ,oBALO;AAMPN,kBANO;AAOPG;AAPO,KAAT,CADF;AAYA,WAAO;AACLG,oBADK;AAELI,wBAFK;AAGLC;AAHK,KAAP;AAGE;AAtCyB,CAAb,CAAlB;;;;;SA7BUQ,mDADRC,mBAUM,KAVNA,EAUM;AAAAC;AAPHC,uBAAYH,aAAZ,CAOG;AANJI,WAAM,aAMF;AALJC,UAAK,UAKD;AAJH,mBAAW,CAAGL,WAIX;AAHH,qCAAwBA,aAAxB;AAGG,GAVNC,EAO2B,CAEzBK,WAAaN,WAAbM,EAAa,SAAbA,CAFyB,CAP3BL,EASe,CATfA,EASeM,UATfN,CACQ,GAQO,SAPLD,YAOK,CARP,IACEQ","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","tabPaneProps","setup","instance","getCurrentInstance","tabsRoot","inject","tabsRootContextKey","throwError","index","ref","loaded","isClosable","computed","closable","active","eagerComputed","currentName","value","paneName","shouldBeRender","lazy","watch","val","updatePaneState","reactive","uid","markRaw","_ctx","_createElementBlock","key","id","class","role","_renderSlot","_hoisted_1","createCommentVNode"],"sources":["../../../../../../packages/components/tabs/src/tab-pane.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    class=\"el-tab-pane\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  computed,\n  inject,\n  getCurrentInstance,\n  watch,\n  markRaw,\n  reactive,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'ElTabPane'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const tabsRoot = inject(tabsRootContextKey)\n    if (!tabsRoot) throwError(COMPONENT_NAME, `must use with ElTabs`)\n\n    const index = ref<string>()\n    const loaded = ref(false)\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable)\n    const active = eagerComputed(\n      () => tabsRoot.currentName.value === (props.name || index.value)\n    )\n    const paneName = computed(() => props.name || index.value)\n    const shouldBeRender = eagerComputed(\n      () => !props.lazy || loaded.value || active.value\n    )\n\n    watch(active, (val) => {\n      if (val) loaded.value = true\n    })\n\n    tabsRoot.updatePaneState(\n      reactive({\n        uid: instance.uid,\n        instance: markRaw(instance),\n        props,\n        paneName,\n        active,\n        index,\n        isClosable,\n      })\n    )\n\n    return {\n      active,\n      paneName,\n      shouldBeRender,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}