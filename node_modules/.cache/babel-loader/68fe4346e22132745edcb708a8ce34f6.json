{"ast":null,"code":"import _defineProperty from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _inputEmits;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport { isString } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType(void 0),\n    default: \"\"\n  },\n  type: {\n    type: String,\n    default: \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    default: false\n  },\n  autocomplete: {\n    type: String,\n    default: \"off\"\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String,\n    default: \"\"\n  },\n  readonly: {\n    type: Boolean,\n    default: false\n  },\n  clearable: {\n    type: Boolean,\n    default: false\n  },\n  showPassword: {\n    type: Boolean,\n    default: false\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false\n  },\n  suffixIcon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  prefixIcon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  label: {\n    type: String\n  },\n  tabindex: {\n    type: [Number, String]\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    default: function _default() {\n      return mutable({});\n    }\n  }\n});\nvar inputEmits = (_inputEmits = {}, _defineProperty(_inputEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"input\", function input(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"change\", function change(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"clear\", function clear() {\n  return true;\n}), _defineProperty(_inputEmits, \"mouseleave\", function mouseleave(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"mouseenter\", function mouseenter(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"keydown\", function keydown(evt) {\n  return evt instanceof KeyboardEvent;\n}), _defineProperty(_inputEmits, \"compositionstart\", function compositionstart(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionupdate\", function compositionupdate(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionend\", function compositionend(evt) {\n  return evt instanceof CompositionEvent;\n}), _inputEmits);\nexport { inputEmits, inputProps };","map":{"version":3,"mappings":"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","names":["inputProps","buildProps","size","useSizeProp","disabled","Boolean","modelValue","type","definePropType","default","String","resize","values","autosize","Object","autocomplete","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","iconPropType","prefixIcon","label","tabindex","Number","validateEvent","inputStyle","Array","mutable","inputEmits","UPDATE_MODEL_EVENT","value","isString","evt","FocusEvent","MouseEvent","KeyboardEvent","CompositionEvent"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type { StyleValue, ExtractPropTypes } from 'vue'\n\ntype AutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType<string | number | null | undefined>(undefined),\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'text',\n  },\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  autosize: {\n    type: definePropType<AutoSize>([Boolean, Object]),\n    default: false,\n  },\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  placeholder: {\n    type: String,\n  },\n  form: {\n    type: String,\n    default: '',\n  },\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  suffixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  prefixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  label: {\n    type: String,\n  },\n  tabindex: {\n    type: [Number, String],\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  keydown: (evt: KeyboardEvent) => evt instanceof KeyboardEvent,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n"]},"metadata":{},"sourceType":"module"}