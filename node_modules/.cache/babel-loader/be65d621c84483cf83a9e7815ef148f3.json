{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index.mjs';\nimport { usePopperContentProps, usePopperTriggerProps } from '../../popper/src/popper.mjs';\nimport { POPPER_CONTAINER_SELECTOR } from '../../../hooks/use-popper-container/index.mjs';\nvar triggers = [\"hover\", \"focus\", \"click\", \"contextmenu\"];\nvar useTooltipContentProps = buildProps(_objectSpread(_objectSpread(_objectSpread({}, useDelayedToggleProps), usePopperContentProps), {}, {\n  appendTo: {\n    type: definePropType([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR\n  },\n  content: {\n    type: String,\n    default: \"\"\n  },\n  rawContent: {\n    type: Boolean,\n    default: false\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  visible: {\n    type: definePropType(Boolean),\n    default: null\n  },\n  transition: {\n    type: String,\n    default: \"el-fade-in-linear\"\n  },\n  teleported: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean\n  }\n}));\nvar useTooltipTriggerProps = buildProps(_objectSpread(_objectSpread({}, usePopperTriggerProps), {}, {\n  disabled: Boolean,\n  trigger: {\n    type: definePropType([String, Array]),\n    default: \"hover\"\n  }\n}));\nvar useTooltipProps = buildProps({\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: void 0\n  },\n  hideAfter: {\n    type: Number,\n    default: 200\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n});\nexport { useTooltipContentProps, useTooltipProps, useTooltipTriggerProps };","map":{"version":3,"mappings":";;;;;;;;;AASA,IAAMA,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,aAA5B,CAAjB;AACY,IAACC,sBAAsB,GAAGC,UAAU,+CAC3CC,qBAD2C,GAE3CC,qBAF2C;AAG9CC,UAAQ,EAAE;AACRC,QAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CADZ;AAERC,WAAO,EAAEC;AAFD,GAHoC;AAO9CC,SAAO,EAAE;AACPN,QAAI,EAAEE,MADC;AAEPE,WAAO,EAAE;AAFF,GAPqC;AAW9CG,YAAU,EAAE;AACVP,QAAI,EAAEQ,OADI;AAEVJ,WAAO,EAAE;AAFC,GAXkC;AAe9CK,YAAU,EAAED,OAfkC;AAgB9CE,WAAS,EAAER,MAhBmC;AAiB9CS,SAAO,EAAE;AACPX,QAAI,EAAEC,cAAc,CAACO,OAAD,CADb;AAEPJ,WAAO,EAAE;AAFF,GAjBqC;AAqB9CQ,YAAU,EAAE;AACVZ,QAAI,EAAEE,MADI;AAEVE,WAAO,EAAE;AAFC,GArBkC;AAyB9CS,YAAU,EAAE;AACVb,QAAI,EAAEQ,OADI;AAEVJ,WAAO,EAAE;AAFC,GAzBkC;AA6B9CU,UAAQ,EAAE;AACRd,QAAI,EAAEQ;AADE;AA7BoC,GAApC;AAiCA,IAACO,sBAAsB,GAAGnB,UAAU,iCAC3CoB,qBAD2C;AAE9CF,UAAQ,EAAEN,OAFoC;AAG9CS,SAAO,EAAE;AACPjB,QAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASgB,KAAT,CAAD,CADb;AAEPd,WAAO,EAAE;AAFF;AAHqC,GAApC;AAQA,IAACe,eAAe,GAAGvB,UAAU,CAAC;AACxCwB,WAAS,EAAE;AACTpB,QAAI,EAAEqB;AADG,GAD6B;AAIxCC,cAAY,EAAE;AACZtB,QAAI,EAAEQ,OADM;AAEZJ,WAAO,EAAE,KAAK;AAFF,GAJ0B;AAQxCmB,WAAS,EAAE;AACTvB,QAAI,EAAEqB,MADG;AAETjB,WAAO,EAAE;AAFA,GAR6B;AAYxCoB,WAAS,EAAE;AACTxB,QAAI,EAAEQ,OADG;AAETJ,WAAO,EAAE;AAFA;AAZ6B,CAAD,CAA7B","names":["triggers","useTooltipContentProps","buildProps","useDelayedToggleProps","usePopperContentProps","appendTo","type","definePropType","String","Object","default","POPPER_CONTAINER_SELECTOR","content","rawContent","Boolean","persistent","ariaLabel","visible","transition","teleported","disabled","useTooltipTriggerProps","usePopperTriggerProps","trigger","Array","useTooltipProps","openDelay","Number","visibleArrow","hideAfter","showArrow"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  usePopperTriggerProps,\n  usePopperContentProps,\n} from '@element-plus/components/popper'\nimport {\n  useDelayedToggleProps,\n  POPPER_CONTAINER_SELECTOR,\n} from '@element-plus/hooks'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  rawContent: {\n    type: Boolean,\n    default: false,\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  transition: {\n    type: String,\n    default: 'el-fade-in-linear',\n  },\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  disabled: {\n    type: Boolean,\n  },\n} as const)\n\nexport const useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType<Trigger | Trigger[]>([String, Array]),\n    default: 'hover',\n  },\n} as const)\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n"]},"metadata":{},"sourceType":"module"}