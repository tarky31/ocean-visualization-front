{"ast":null,"code":"import _defineProperty from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, computed, onMounted, watch, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow } from 'vue';\nimport { useTimeoutFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElBadge } from '../../badge/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageProps, messageEmits } from './message.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElMessage\",\n  components: _objectSpread({\n    ElBadge: ElBadge,\n    ElIcon: ElIcon\n  }, TypeComponents),\n  props: messageProps,\n  emits: messageEmits,\n  setup: function setup(props) {\n    var ns = useNamespace(\"message\");\n    var visible = ref(false);\n    var badgeType = ref(props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    var stopTimer = void 0;\n    var typeClass = computed(function () {\n      var type = props.type;\n      return _defineProperty({}, ns.bm(\"icon\", type), type && TypeComponentsMap[type]);\n    });\n    var iconComponent = computed(function () {\n      return props.icon || TypeComponentsMap[props.type] || \"\";\n    });\n    var customStyle = computed(function () {\n      return {\n        top: \"\".concat(props.offset, \"px\"),\n        zIndex: props.zIndex\n      };\n    });\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n\n        var _useTimeoutFn = useTimeoutFn(function () {\n          if (visible.value) close();\n        }, props.duration);\n\n        stopTimer = _useTimeoutFn.stop;\n      }\n    }\n\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n\n    function close() {\n      visible.value = false;\n    }\n\n    function keydown(_ref2) {\n      var code = _ref2.code;\n\n      if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n\n    onMounted(function () {\n      startTimer();\n      visible.value = true;\n    });\n    watch(function () {\n      return props.repeatNum;\n    }, function () {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    return {\n      ns: ns,\n      typeClass: typeClass,\n      iconComponent: iconComponent,\n      customStyle: customStyle,\n      visible: visible,\n      badgeType: badgeType,\n      close: close,\n      clearTimer: clearTimer,\n      startTimer: startTimer\n    };\n  }\n});\n\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"innerHTML\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_badge = resolveComponent(\"el-badge\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_close = resolveComponent(\"close\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onBeforeLeave: _ctx.onClose,\n    onAfterLeave: _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.$emit(\"destroy\");\n    })\n  }, {\n    default: withCtx(function () {\n      return [withDirectives(createElementVNode(\"div\", {\n        id: _ctx.id,\n        class: normalizeClass([_ctx.ns.b(), _defineProperty({}, _ctx.ns.m(_ctx.type), _ctx.type && !_ctx.icon), _ctx.ns.is(\"center\", _ctx.center), _ctx.ns.is(\"closable\", _ctx.showClose), _ctx.customClass]),\n        style: normalizeStyle(_ctx.customStyle),\n        role: \"alert\",\n        onMouseenter: _cache[0] || (_cache[0] = function () {\n          return _ctx.clearTimer && _ctx.clearTimer.apply(_ctx, arguments);\n        }),\n        onMouseleave: _cache[1] || (_cache[1] = function () {\n          return _ctx.startTimer && _ctx.startTimer.apply(_ctx, arguments);\n        })\n      }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(_component_el_badge, {\n        key: 0,\n        value: _ctx.repeatNum,\n        type: _ctx.badgeType,\n        class: normalizeClass(_ctx.ns.e(\"badge\"))\n      }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), _ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.typeClass])\n      }, {\n        default: withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n          key: 0,\n          class: normalizeClass(_ctx.ns.e(\"content\"))\n        }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n          key: 1\n        }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n          class: normalizeClass(_ctx.ns.e(\"content\")),\n          innerHTML: _ctx.message\n        }, null, 10, _hoisted_2)], 2112))];\n      }), _ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass(_ctx.ns.e(\"closeBtn\")),\n        onClick: withModifiers(_ctx.close, [\"stop\"])\n      }, {\n        default: withCtx(function () {\n          return [createVNode(_component_close)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, _hoisted_1), [[vShow, _ctx.visible]])];\n    }),\n    _: 3\n  }, 8, [\"name\", \"onBeforeLeave\"]);\n}\n\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { MessageConstructor as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElBadge","ElIcon","TypeComponents","props","messageProps","emits","messageEmits","setup","ns","useNamespace","visible","ref","badgeType","type","stopTimer","typeClass","computed","bm","TypeComponentsMap","iconComponent","icon","customStyle","top","offset","zIndex","duration","useTimeoutFn","value","close","stop","code","EVENT_CODE","esc","startTimer","onMounted","watch","repeatNum","clearTimer","useEventListener","document","keydown","_createBlock","_Transition","_ctx","b","onBeforeLeave","onAfterLeave","_cache","_createElementVNode","id","class","_normalizeClass","m","is","style","_normalizeStyle","role","onMouseenter","onMouseleave","openBlock","_component_el_badge","key","e","createCommentVNode","_component_el_icon","_resolveDynamicComponent","_","_renderSlot","_createElementBlock","toDisplayString","_Fragment","_createCommentVNode","innerHTML","_hoisted_2","onClick","_withModifiers","_createVNode","_component_close"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      >\n      </el-badge>\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\"></p>\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { ElIcon } from '@element-plus/components/icon'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport { messageEmits, messageProps } from './message'\nimport type { BadgeProps } from '@element-plus/components/badge'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMessage',\n\n  components: {\n    ElBadge,\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace('message')\n    const visible = ref(false)\n    const badgeType = ref<BadgeProps['type']>(\n      props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n    )\n    let stopTimer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || ''\n    })\n\n    const customStyle = computed<CSSProperties>(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex,\n    }))\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: stopTimer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      stopTimer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function keydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.esc) {\n        // press esc to close the message\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    watch(\n      () => props.repeatNum,\n      () => {\n        clearTimer()\n        startTimer()\n      }\n    )\n\n    useEventListener(document, 'keydown', keydown)\n\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}