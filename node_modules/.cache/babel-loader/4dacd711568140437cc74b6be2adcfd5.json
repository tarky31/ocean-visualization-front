{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, withDirectives, createElementVNode, vModelRadio, normalizeStyle, renderSlot, createTextVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useRadio } from './radio.mjs';\nimport { radioButtonProps } from './radio-button.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElRadioButton\",\n  props: radioButtonProps,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var ns = useNamespace(\"radio\");\n\n    var _useRadio = useRadio(props, emit),\n        radioRef = _useRadio.radioRef,\n        isGroup = _useRadio.isGroup,\n        focus = _useRadio.focus,\n        size = _useRadio.size,\n        disabled = _useRadio.disabled,\n        tabIndex = _useRadio.tabIndex,\n        modelValue = _useRadio.modelValue,\n        radioGroup = _useRadio.radioGroup;\n\n    var activeStyle = computed(function () {\n      return {\n        backgroundColor: (radioGroup == null ? void 0 : radioGroup.fill) || \"\",\n        borderColor: (radioGroup == null ? void 0 : radioGroup.fill) || \"\",\n        boxShadow: (radioGroup == null ? void 0 : radioGroup.fill) ? \"-1px 0 0 0 \".concat(radioGroup.fill) : \"\",\n        color: (radioGroup == null ? void 0 : radioGroup.textColor) || \"\"\n      };\n    });\n    return {\n      ns: ns,\n      isGroup: isGroup,\n      size: size,\n      disabled: disabled,\n      tabIndex: tabIndex,\n      modelValue: modelValue,\n      focus: focus,\n      activeStyle: activeStyle,\n      radioRef: radioRef\n    };\n  }\n});\n\nvar _hoisted_1 = [\"aria-checked\", \"aria-disabled\", \"tabindex\"];\nvar _hoisted_2 = [\"value\", \"name\", \"disabled\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    class: normalizeClass([_ctx.ns.b(\"button\"), _ctx.ns.is(\"active\", _ctx.modelValue === _ctx.label), _ctx.ns.is(\"disabled\", _ctx.disabled), _ctx.ns.is(\"focus\", _ctx.focus), _ctx.ns.bm(\"button\", _ctx.size)]),\n    role: \"radio\",\n    \"aria-checked\": _ctx.modelValue === _ctx.label,\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.tabIndex,\n    onKeydown: _cache[4] || (_cache[4] = withKeys(withModifiers(function ($event) {\n      return _ctx.modelValue = _ctx.disabled ? _ctx.modelValue : _ctx.label;\n    }, [\"stop\", \"prevent\"]), [\"space\"]))\n  }, [withDirectives(createElementVNode(\"input\", {\n    ref: \"radioRef\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.modelValue = $event;\n    }),\n    class: normalizeClass(_ctx.ns.be(\"button\", \"original-radio\")),\n    value: _ctx.label,\n    type: \"radio\",\n    name: _ctx.name,\n    disabled: _ctx.disabled,\n    tabindex: \"-1\",\n    onFocus: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.focus = true;\n    }),\n    onBlur: _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.focus = false;\n    })\n  }, null, 42, _hoisted_2), [[vModelRadio, _ctx.modelValue]]), createElementVNode(\"span\", {\n    class: normalizeClass(_ctx.ns.be(\"button\", \"inner\")),\n    style: normalizeStyle(_ctx.modelValue === _ctx.label ? _ctx.activeStyle : {}),\n    onKeydown: _cache[3] || (_cache[3] = withModifiers(function () {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.label), 1)];\n  })], 38)], 42, _hoisted_1);\n}\n\nvar RadioButton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { RadioButton as default };","map":{"version":3,"mappings":";;;;;;;;;AA6CA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,eADuB;AAE7BC,SAAOC,gBAFsB;AAI7BC,OAJ6B,iBAIvBF,KAJuB,QAIN;AAAA,QAARG,IAAQ,QAARA,IAAQ;AACrB,QAAMC,KAAKC,aAAa,OAAb,CAAX;;AACA,oBASIC,SAASN,KAAT,EAAgBG,IAAhB,CATJ;AAAA,QACEI,QADF,aACEA,QADF;AAAA,QAEEC,OAFF,aAEEA,OAFF;AAAA,QAGEC,KAHF,aAGEA,KAHF;AAAA,QAIEC,IAJF,aAIEA,IAJF;AAAA,QAKEC,QALF,aAKEA,QALF;AAAA,QAMEC,QANF,aAMEA,QANF;AAAA,QAOEC,UAPF,aAOEA,UAPF;AAAA,QAQEC,UARF,aAQEA,UARF;;AAWA,QAAMC,cAAcC,SAAwB,YAAM;AAChD,aAAO;AACLC,yBAAiB,qDADZ;AAELC,qBAAa,qDAFR;AAGLC,mBAAW,sBAAmB,MAAnB,GAAmBL,eAAnB,yBAAmBA,eAAnB,IAAmB,EAHzB;AAILM,eAAO;AAJF,OAAP;AAIkC,KALhB,CAApB;AASA,WAAO;AACLhB,YADK;AAELI,sBAFK;AAGLE,gBAHK;AAILC,wBAJK;AAKLC,wBALK;AAMLC,4BANK;AAOLJ,kBAPK;AAQLM,8BARK;AASLR;AATK,KAAP;AASE;AAnCyB,CAAb,CAAlB;;;;;;sBA5CEc,mBAmCQ,OAnCRA,EAmCQ;AAlCLC,WAAKC,gBAAUC,QAAGC,CAAH,CAAI,QAAJ,CAAVF,EAAgCC,QAAGE,EAAH,CAAK,QAAL,EAAgBF,oBAAeA,UAA/B,CAAhCD,EAA6EC,QAAGE,EAAH,CAAK,UAAL,EAAkBF,aAAlB,CAA7ED,EAAgHC,QAAGE,EAAH,CAAK,OAAL,EAAeF,UAAf,CAAhHD,EAA6IC,QAAGG,EAAH,CAAK,QAAL,EAAgBH,SAAhB,CAA7ID,EAkCA;AA3BNK,UAAK,OA2BC;AA1BL,oBAAcJ,oBAAeA,UA0BxB;AAzBL,qBAAeA,aAyBV;AAxBLK,cAAUL,aAwBL;AAvBLM,eAAOC;AAAA,aAAqBP,kBAAaA,gBAAWA,eAAX,GAAwBA,UAA1D;AAAA,OAA+D,mBAA/D,GAA+D,SAA/D;AAuBF,GAnCRH,EAYyE,gBAEvEW,mBAWE,OAXFA,EAWE;AAVAC,SAAI,UAUJ;AAVI;AAAA,aACKT,kBAAUU,MADf;AAAA,MAUJ;AARCZ,WAAKC,eAAEC,QAAGW,EAAH,CAAK,QAAL,EAAK,gBAAL,CAAFZ,CAQN;AAPCa,WAAOZ,UAOR;AANAa,UAAK,OAML;AALCtC,UAAMyB,SAKP;AAJCb,cAAUa,aAIX;AAHAK,cAAS,IAGT;AAFCS,aAAKP;AAAA,aAAEP,aAAK,IAAP;AAAA,MAEN;AADCe,YAAIR;AAAA,aAAEP,aAAK,KAAP;AAAA;AACL,GAXFQ,EAUc,IAVdA,EAUc,EAVdA,EAUcQ,UAVdR,GAUc,eARHR,gBAQG,EAZyD,EAcvEQ,mBAQO,MARPA,EAQO;AAPJV,WAAKC,eAAEC,QAAGW,EAAH,CAAK,QAAL,EAAK,OAAL,CAAFZ,CAOD;AANJkB,WAAKC,eAAElB,oBAAeA,UAAf,GAAuBA,gBAAvB,GAAkC,EAApCkB,CAMD;AALJZ,eAAOC,wCAAR,cAAQ,EAAK,QAAL;AAKH,GARPC,EAGe,CAEbW,WAEOnB,WAFPmB,EAEO,SAFPA,EAEO,EAFPA;AAAA,WAEO,iCADFnB,UACE,GADG,CACH,EAFP;AAAA,IAFa,CAHfQ,EAMY,EANZA,CAduE,CAZzEX","names":["_sfc_main","defineComponent","name","props","radioButtonProps","setup","emit","ns","useNamespace","useRadio","radioRef","isGroup","focus","size","disabled","tabIndex","modelValue","radioGroup","activeStyle","computed","backgroundColor","borderColor","boxShadow","color","_createElementBlock","class","_normalizeClass","_ctx","b","is","bm","role","tabindex","onKeydown","_cache","_createElementVNode","ref","$event","be","value","type","onFocus","onBlur","_hoisted_2","style","_normalizeStyle","_renderSlot"],"sources":["../../../../../../packages/components/radio/src/radio-button.vue"],"sourcesContent":["<template>\n  <label\n    :class=\"[\n      ns.b('button'),\n      ns.is('active', modelValue === label),\n      ns.is('disabled', disabled),\n      ns.is('focus', focus),\n      ns.bm('button', size),\n    ]\"\n    role=\"radio\"\n    :aria-checked=\"modelValue === label\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"tabIndex\"\n    @keydown.space.stop.prevent=\"modelValue = disabled ? modelValue : label\"\n  >\n    <input\n      ref=\"radioRef\"\n      v-model=\"modelValue\"\n      :class=\"ns.be('button', 'original-radio')\"\n      :value=\"label\"\n      type=\"radio\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      tabindex=\"-1\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n    <span\n      :class=\"ns.be('button', 'inner')\"\n      :style=\"modelValue === label ? activeStyle : {}\"\n      @keydown.stop\n    >\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useRadio } from './radio'\nimport { radioButtonProps } from './radio-button'\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElRadioButton',\n  props: radioButtonProps,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('radio')\n    const {\n      radioRef,\n      isGroup,\n      focus,\n      size,\n      disabled,\n      tabIndex,\n      modelValue,\n      radioGroup,\n    } = useRadio(props, emit)\n\n    const activeStyle = computed<CSSProperties>(() => {\n      return {\n        backgroundColor: radioGroup?.fill || '',\n        borderColor: radioGroup?.fill || '',\n        boxShadow: radioGroup?.fill ? `-1px 0 0 0 ${radioGroup.fill}` : '',\n        color: radioGroup?.textColor || '',\n      }\n    })\n\n    return {\n      ns,\n      isGroup,\n      size,\n      disabled,\n      tabIndex,\n      modelValue,\n      focus,\n      activeStyle,\n      radioRef,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}