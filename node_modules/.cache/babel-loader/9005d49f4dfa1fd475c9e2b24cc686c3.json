{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, toRefs, computed, unref, provide, reactive, onMounted, nextTick, onBeforeUnmount, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, normalizeStyle, toDisplayString, createBlock, createCommentVNode, Transition, Fragment, renderList, withKeys, vModelText, createSlots, resolveDynamicComponent, vShow, renderSlot } from 'vue';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue';\nimport Option from './option.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport { useSelectStates, useSelect } from './useSelect.mjs';\nimport { selectKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useFocus } from '../../../hooks/use-focus/index.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nvar COMPONENT_NAME = \"ElSelect\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput: ElInput,\n    ElSelectMenu: ElSelectMenu,\n    ElOption: Option,\n    ElTag: ElTag,\n    ElScrollbar: ElScrollbar,\n    ElTooltip: ElTooltip,\n    ElIcon: ElIcon\n  },\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: void 0\n    },\n    autocomplete: {\n      type: String,\n      default: \"off\"\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    effect: {\n      type: String,\n      default: \"light\"\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: String\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true\n    },\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    collapseTags: Boolean,\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    clearIcon: {\n      type: [String, Object],\n      default: CircleClose\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false\n    },\n    suffixIcon: {\n      type: [String, Object],\n      default: ArrowUp\n    },\n    tagType: _objectSpread(_objectSpread({}, tagProps.type), {}, {\n      default: \"info\"\n    })\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n  setup: function setup(props, ctx) {\n    var nsSelect = useNamespace(\"select\");\n    var nsInput = useNamespace(\"input\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var states = useSelectStates(props);\n\n    var _useSelect = useSelect(props, states, ctx),\n        optionsArray = _useSelect.optionsArray,\n        selectSize = _useSelect.selectSize,\n        readonly = _useSelect.readonly,\n        handleResize = _useSelect.handleResize,\n        collapseTagSize = _useSelect.collapseTagSize,\n        debouncedOnInputChange = _useSelect.debouncedOnInputChange,\n        debouncedQueryChange = _useSelect.debouncedQueryChange,\n        deletePrevTag = _useSelect.deletePrevTag,\n        deleteTag = _useSelect.deleteTag,\n        deleteSelected = _useSelect.deleteSelected,\n        handleOptionSelect = _useSelect.handleOptionSelect,\n        scrollToOption = _useSelect.scrollToOption,\n        setSelected = _useSelect.setSelected,\n        resetInputHeight = _useSelect.resetInputHeight,\n        managePlaceholder = _useSelect.managePlaceholder,\n        showClose = _useSelect.showClose,\n        selectDisabled = _useSelect.selectDisabled,\n        iconComponent = _useSelect.iconComponent,\n        iconReverse = _useSelect.iconReverse,\n        showNewOption = _useSelect.showNewOption,\n        emptyText = _useSelect.emptyText,\n        toggleLastOptionHitState = _useSelect.toggleLastOptionHitState,\n        resetInputState = _useSelect.resetInputState,\n        handleComposition = _useSelect.handleComposition,\n        onOptionCreate = _useSelect.onOptionCreate,\n        onOptionDestroy = _useSelect.onOptionDestroy,\n        handleMenuEnter = _useSelect.handleMenuEnter,\n        handleFocus = _useSelect.handleFocus,\n        blur = _useSelect.blur,\n        handleBlur = _useSelect.handleBlur,\n        handleClearClick = _useSelect.handleClearClick,\n        handleClose = _useSelect.handleClose,\n        toggleMenu = _useSelect.toggleMenu,\n        selectOption = _useSelect.selectOption,\n        getValueKey = _useSelect.getValueKey,\n        navigateOptions = _useSelect.navigateOptions,\n        dropMenuVisible = _useSelect.dropMenuVisible,\n        reference = _useSelect.reference,\n        input = _useSelect.input,\n        tooltipRef = _useSelect.tooltipRef,\n        tags = _useSelect.tags,\n        selectWrapper = _useSelect.selectWrapper,\n        scrollbar = _useSelect.scrollbar,\n        queryChange = _useSelect.queryChange,\n        groupQueryChange = _useSelect.groupQueryChange;\n\n    var _useFocus = useFocus(reference),\n        focus = _useFocus.focus;\n\n    var _toRefs = toRefs(states),\n        inputWidth = _toRefs.inputWidth,\n        selected = _toRefs.selected,\n        inputLength = _toRefs.inputLength,\n        filteredOptionsCount = _toRefs.filteredOptionsCount,\n        visible = _toRefs.visible,\n        softFocus = _toRefs.softFocus,\n        selectedLabel = _toRefs.selectedLabel,\n        hoverIndex = _toRefs.hoverIndex,\n        query = _toRefs.query,\n        inputHovering = _toRefs.inputHovering,\n        currentPlaceholder = _toRefs.currentPlaceholder,\n        menuVisibleOnFocus = _toRefs.menuVisibleOnFocus,\n        isOnComposition = _toRefs.isOnComposition,\n        isSilentBlur = _toRefs.isSilentBlur,\n        options = _toRefs.options,\n        cachedOptions = _toRefs.cachedOptions,\n        optionsCount = _toRefs.optionsCount,\n        prefixWidth = _toRefs.prefixWidth,\n        tagInMultiLine = _toRefs.tagInMultiLine;\n\n    var wrapperKls = computed(function () {\n      var classList = [nsSelect.b()];\n\n      var _selectSize = unref(selectSize);\n\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize));\n      }\n\n      if (props.disabled) {\n        classList.push(nsSelect.m(\"disabled\"));\n      }\n\n      return classList;\n    });\n    var selectTagsStyle = computed(function () {\n      return {\n        maxWidth: \"\".concat(unref(inputWidth) - 32, \"px\"),\n        width: \"100%\"\n      };\n    });\n    provide(selectKey, reactive({\n      props: props,\n      options: options,\n      optionsArray: optionsArray,\n      cachedOptions: cachedOptions,\n      optionsCount: optionsCount,\n      filteredOptionsCount: filteredOptionsCount,\n      hoverIndex: hoverIndex,\n      handleOptionSelect: handleOptionSelect,\n      onOptionCreate: onOptionCreate,\n      onOptionDestroy: onOptionDestroy,\n      selectWrapper: selectWrapper,\n      selected: selected,\n      setSelected: setSelected,\n      queryChange: queryChange,\n      groupQueryChange: groupQueryChange\n    }));\n    onMounted(function () {\n      states.cachedPlaceHolder = currentPlaceholder.value = props.placeholder || t(\"el.select.placeholder\");\n\n      if (props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0) {\n        currentPlaceholder.value = \"\";\n      }\n\n      addResizeListener(selectWrapper.value, handleResize);\n\n      if (reference.value && reference.value.$el) {\n        var sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28\n        };\n        var input2 = reference.value.input;\n        states.initialInputHeight = input2.getBoundingClientRect().height || sizeMap[selectSize.value];\n      }\n\n      if (props.remote && props.multiple) {\n        resetInputHeight();\n      }\n\n      nextTick(function () {\n        if (!reference.value) return;\n\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width;\n        }\n\n        if (ctx.slots.prefix) {\n          var inputChildNodes = reference.value.$el.childNodes;\n          var _input = Array.from(inputChildNodes).filter(function (item) {\n            return item.tagName === \"INPUT\";\n          })[0];\n          var prefix = reference.value.$el.querySelector(\".\".concat(nsInput.e(\"prefix\")));\n          prefixWidth.value = Math.max(prefix.getBoundingClientRect().width + 5, 30);\n\n          if (states.prefixWidth) {\n            _input.style.paddingLeft = \"\".concat(Math.max(states.prefixWidth, 30), \"px\");\n          }\n        }\n      });\n      setSelected();\n    });\n    onBeforeUnmount(function () {\n      removeResizeListener(selectWrapper.value, handleResize);\n    });\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, []);\n    }\n\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n    }\n\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n\n    var _useDeprecateAppendTo = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\"),\n        compatTeleported = _useDeprecateAppendTo.compatTeleported;\n\n    return {\n      tagInMultiLine: tagInMultiLine,\n      prefixWidth: prefixWidth,\n      selectSize: selectSize,\n      readonly: readonly,\n      handleResize: handleResize,\n      collapseTagSize: collapseTagSize,\n      debouncedOnInputChange: debouncedOnInputChange,\n      debouncedQueryChange: debouncedQueryChange,\n      deletePrevTag: deletePrevTag,\n      deleteTag: deleteTag,\n      deleteSelected: deleteSelected,\n      handleOptionSelect: handleOptionSelect,\n      scrollToOption: scrollToOption,\n      inputWidth: inputWidth,\n      selected: selected,\n      inputLength: inputLength,\n      filteredOptionsCount: filteredOptionsCount,\n      visible: visible,\n      softFocus: softFocus,\n      selectedLabel: selectedLabel,\n      hoverIndex: hoverIndex,\n      query: query,\n      inputHovering: inputHovering,\n      currentPlaceholder: currentPlaceholder,\n      menuVisibleOnFocus: menuVisibleOnFocus,\n      isOnComposition: isOnComposition,\n      isSilentBlur: isSilentBlur,\n      options: options,\n      resetInputHeight: resetInputHeight,\n      managePlaceholder: managePlaceholder,\n      showClose: showClose,\n      selectDisabled: selectDisabled,\n      iconComponent: iconComponent,\n      iconReverse: iconReverse,\n      showNewOption: showNewOption,\n      emptyText: emptyText,\n      toggleLastOptionHitState: toggleLastOptionHitState,\n      resetInputState: resetInputState,\n      handleComposition: handleComposition,\n      handleMenuEnter: handleMenuEnter,\n      handleFocus: handleFocus,\n      blur: blur,\n      handleBlur: handleBlur,\n      handleClearClick: handleClearClick,\n      handleClose: handleClose,\n      toggleMenu: toggleMenu,\n      selectOption: selectOption,\n      getValueKey: getValueKey,\n      navigateOptions: navigateOptions,\n      dropMenuVisible: dropMenuVisible,\n      focus: focus,\n      reference: reference,\n      input: input,\n      tooltipRef: tooltipRef,\n      popperPaneRef: popperPaneRef,\n      tags: tags,\n      selectWrapper: selectWrapper,\n      scrollbar: scrollbar,\n      wrapperKls: wrapperKls,\n      selectTagsStyle: selectTagsStyle,\n      compatTeleported: compatTeleported,\n      nsSelect: nsSelect\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  class: \"select-trigger\"\n};\nvar _hoisted_2 = [\"disabled\", \"autocomplete\"];\nvar _hoisted_3 = {\n  style: {\n    \"height\": \"100%\",\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tag = resolveComponent(\"el-tag\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_option = resolveComponent(\"el-option\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectWrapper\",\n    class: normalizeClass(_ctx.wrapperKls),\n    onClick: _cache[24] || (_cache[24] = withModifiers(function () {\n      return _ctx.toggleMenu && _ctx.toggleMenu.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropMenuVisible,\n    \"onUpdate:visible\": _cache[23] || (_cache[23] = function ($event) {\n      return _ctx.dropMenuVisible = $event;\n    }),\n    placement: \"bottom-start\",\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    pure: \"\",\n    trigger: \"click\",\n    transition: \"\".concat(_ctx.nsSelect.namespace.value, \"-zoom-in-top\"),\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    persistent: \"\",\n    onShow: _ctx.handleMenuEnter\n  }, {\n    default: withCtx(function () {\n      return [createElementVNode(\"div\", _hoisted_1, [_ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"tags\",\n        class: normalizeClass(_ctx.nsSelect.e(\"tags\")),\n        style: normalizeStyle(_ctx.selectTagsStyle)\n      }, [_ctx.collapseTags && _ctx.selected.length ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        style: normalizeStyle({\n          marginLeft: _ctx.prefixWidth && _ctx.selected.length ? \"\".concat(_ctx.prefixWidth, \"px\") : \"\"\n        })\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !_ctx.selected[0].isDisabled,\n        size: _ctx.collapseTagSize,\n        hit: _ctx.selected[0].hitState,\n        type: _ctx.tagType,\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.deleteTag($event, _ctx.selected[0]);\n        })\n      }, {\n        default: withCtx(function () {\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: _ctx.inputWidth - 123 + \"px\"\n            })\n          }, toDisplayString(_ctx.selected[0].currentLabel), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\", \"hit\", \"type\"]), _ctx.selected.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: _ctx.tagType,\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(function () {\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, \"+ \" + toDisplayString(_ctx.selected.length - 1), 3)];\n        }),\n        _: 1\n      }, 8, [\"size\", \"type\"])) : createCommentVNode(\"v-if\", true)], 4)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" <div> \"), !_ctx.collapseTags ? (openBlock(), createBlock(Transition, {\n        key: 1,\n        onAfterLeave: _ctx.resetInputHeight\n      }, {\n        default: withCtx(function () {\n          return [createElementVNode(\"span\", {\n            style: normalizeStyle({\n              marginLeft: _ctx.prefixWidth && _ctx.selected.length ? \"\".concat(_ctx.prefixWidth, \"px\") : \"\"\n            })\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, function (item) {\n            return openBlock(), createBlock(_component_el_tag, {\n              key: _ctx.getValueKey(item),\n              closable: !_ctx.selectDisabled && !item.isDisabled,\n              size: _ctx.collapseTagSize,\n              hit: item.hitState,\n              type: _ctx.tagType,\n              \"disable-transitions\": \"\",\n              onClose: function onClose($event) {\n                return _ctx.deleteTag($event, item);\n              }\n            }, {\n              default: withCtx(function () {\n                return [createElementVNode(\"span\", {\n                  class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n                  style: normalizeStyle({\n                    maxWidth: _ctx.inputWidth - 75 + \"px\"\n                  })\n                }, toDisplayString(item.currentLabel), 7)];\n              }),\n              _: 2\n            }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n          }), 128))], 4)];\n        }),\n        _: 1\n      }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" </div> \"), _ctx.filterable ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 2,\n        ref: \"input\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.query = $event;\n        }),\n        type: \"text\",\n        class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n        disabled: _ctx.selectDisabled,\n        autocomplete: _ctx.autocomplete,\n        style: normalizeStyle({\n          marginLeft: _ctx.prefixWidth && !_ctx.selected.length || _ctx.tagInMultiLine ? \"\".concat(_ctx.prefixWidth, \"px\") : \"\",\n          flexGrow: 1,\n          width: \"\".concat(_ctx.inputLength / (_ctx.inputWidth - 32), \"%\"),\n          maxWidth: \"\".concat(_ctx.inputWidth - 42, \"px\")\n        }),\n        onFocus: _cache[2] || (_cache[2] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        }),\n        onBlur: _cache[3] || (_cache[3] = function () {\n          return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);\n        }),\n        onKeyup: _cache[4] || (_cache[4] = function () {\n          return _ctx.managePlaceholder && _ctx.managePlaceholder.apply(_ctx, arguments);\n        }),\n        onKeydown: [_cache[5] || (_cache[5] = function () {\n          return _ctx.resetInputState && _ctx.resetInputState.apply(_ctx, arguments);\n        }), _cache[6] || (_cache[6] = withKeys(withModifiers(function ($event) {\n          return _ctx.navigateOptions(\"next\");\n        }, [\"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers(function ($event) {\n          return _ctx.navigateOptions(\"prev\");\n        }, [\"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers(function ($event) {\n          return _ctx.visible = false;\n        }, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[9] || (_cache[9] = withKeys(withModifiers(function () {\n          return _ctx.selectOption && _ctx.selectOption.apply(_ctx, arguments);\n        }, [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(function () {\n          return _ctx.deletePrevTag && _ctx.deletePrevTag.apply(_ctx, arguments);\n        }, [\"delete\"])), _cache[11] || (_cache[11] = withKeys(function ($event) {\n          return _ctx.visible = false;\n        }, [\"tab\"]))],\n        onCompositionstart: _cache[12] || (_cache[12] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionupdate: _cache[13] || (_cache[13] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionend: _cache[14] || (_cache[14] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onInput: _cache[15] || (_cache[15] = function () {\n          return _ctx.debouncedQueryChange && _ctx.debouncedQueryChange.apply(_ctx, arguments);\n        })\n      }, null, 46, _hoisted_2)), [[vModelText, _ctx.query]]) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n        id: _ctx.id,\n        ref: \"reference\",\n        modelValue: _ctx.selectedLabel,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = function ($event) {\n          return _ctx.selectedLabel = $event;\n        }),\n        type: \"text\",\n        placeholder: _ctx.currentPlaceholder,\n        name: _ctx.name,\n        autocomplete: _ctx.autocomplete,\n        size: _ctx.selectSize,\n        disabled: _ctx.selectDisabled,\n        readonly: _ctx.readonly,\n        \"validate-event\": false,\n        class: normalizeClass([_ctx.nsSelect.is(\"focus\", _ctx.visible)]),\n        tabindex: _ctx.multiple && _ctx.filterable ? -1 : void 0,\n        onFocus: _ctx.handleFocus,\n        onBlur: _ctx.handleBlur,\n        onInput: _ctx.debouncedOnInputChange,\n        onPaste: _ctx.debouncedOnInputChange,\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers(function ($event) {\n          return _ctx.navigateOptions(\"next\");\n        }, [\"stop\", \"prevent\"]), [\"down\"])), _cache[18] || (_cache[18] = withKeys(withModifiers(function ($event) {\n          return _ctx.navigateOptions(\"prev\");\n        }, [\"stop\", \"prevent\"]), [\"up\"])), withKeys(withModifiers(_ctx.selectOption, [\"stop\", \"prevent\"]), [\"enter\"]), _cache[19] || (_cache[19] = withKeys(withModifiers(function ($event) {\n          return _ctx.visible = false;\n        }, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[20] || (_cache[20] = withKeys(function ($event) {\n          return _ctx.visible = false;\n        }, [\"tab\"]))],\n        onMouseenter: _cache[21] || (_cache[21] = function ($event) {\n          return _ctx.inputHovering = true;\n        }),\n        onMouseleave: _cache[22] || (_cache[22] = function ($event) {\n          return _ctx.inputHovering = false;\n        })\n      }, createSlots({\n        suffix: withCtx(function () {\n          return [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n            key: 0,\n            class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\"), _ctx.iconReverse])\n          }, {\n            default: withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))];\n            }),\n            _: 1\n          }, 8, [\"class\"])), [[vShow, !_ctx.showClose]]) : createCommentVNode(\"v-if\", true), _ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n            key: 1,\n            class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\")]),\n            onClick: _ctx.handleClearClick\n          }, {\n            default: withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 2\n      }, [_ctx.$slots.prefix ? {\n        name: \"prefix\",\n        fn: withCtx(function () {\n          return [createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"prefix\")])];\n        })\n      } : void 0]), 1032, [\"id\", \"modelValue\", \"placeholder\", \"name\", \"autocomplete\", \"size\", \"disabled\", \"readonly\", \"class\", \"tabindex\", \"onFocus\", \"onBlur\", \"onInput\", \"onPaste\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\"])])];\n    }),\n    content: withCtx(function () {\n      return [createVNode(_component_el_select_menu, null, {\n        default: withCtx(function () {\n          return [withDirectives(createVNode(_component_el_scrollbar, {\n            ref: \"scrollbar\",\n            tag: \"ul\",\n            \"wrap-class\": _ctx.nsSelect.be(\"dropdown\", \"wrap\"),\n            \"view-class\": _ctx.nsSelect.be(\"dropdown\", \"list\"),\n            class: normalizeClass([_ctx.nsSelect.is(\"empty\", !_ctx.allowCreate && _ctx.query && _ctx.filteredOptionsCount === 0)])\n          }, {\n            default: withCtx(function () {\n              return [_ctx.showNewOption ? (openBlock(), createBlock(_component_el_option, {\n                key: 0,\n                value: _ctx.query,\n                created: true\n              }, null, 8, [\"value\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")];\n            }),\n            _: 3\n          }, 8, [\"wrap-class\", \"view-class\", \"class\"]), [[vShow, _ctx.options.size > 0 && !_ctx.loading]]), _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [_ctx.$slots.empty ? renderSlot(_ctx.$slots, \"empty\", {\n            key: 0\n          }) : (openBlock(), createElementBlock(\"p\", {\n            key: 1,\n            class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n          }, toDisplayString(_ctx.emptyText), 3))], 2112)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      })];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"effect\", \"transition\", \"onShow\"])], 2)), [[_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Select as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiQA,IAAMA,iBAAiB,UAAvB;;AACA,IAAKC,YAAaC,gBAAa;AAC7BC,QAAMH,cADuB;AAE7BI,iBAAeJ,cAFc;AAG7BK,cAAY;AACVC,oBADU;AAEVC,8BAFU;AAEVC,cACAA,MAHU;AAIVC,gBAJU;AAKVC,4BALU;AAMVC,wBANU;AAOVC;AAPU,GAHiB;AAY7BC,cAAY;AAAEC;AAAF,GAZiB;AAa7BC,SAAO;AACLZ,UAAMa,MADD;AAELC,QAAID,MAFC;AAGLE,gBAAY;AACVC,YAAM,CAACC,KAAD,EAAQJ,MAAR,EAAgBK,MAAhB,EAAwBC,OAAxB,EAAiCC,MAAjC,CADI;AAEVC,eAAS;AAFC,KAHP;AAOLC,kBAAc;AACZN,YAAMH,MADM;AAEZQ,eAAS;AAFG,KAPT;AAWLE,uBAAmBJ,OAXd;AAYLK,UAAM;AACJR,YAAMH,MADF;AAEJY,iBAAWC;AAFP,KAZD;AAgBLC,YAAQ;AACNX,YAAMH,MADA;AAENQ,eAAS;AAFH,KAhBH;AAoBLO,cAAUT,OApBL;AAqBLU,eAAWV,OArBN;AAsBLW,gBAAYX,OAtBP;AAuBLY,iBAAaZ,OAvBR;AAwBLa,aAASb,OAxBJ;AAyBLc,iBAAa;AACXjB,YAAMH,MADK;AAEXQ,eAAS;AAFE,KAzBR;AA6BLa,YAAQf,OA7BH;AA8BLgB,iBAAatB,MA9BR;AA+BLuB,iBAAavB,MA/BR;AAgCLwB,gBAAYxB,MAhCP;AAiCLyB,kBAAcC,QAjCT;AAkCLC,kBAAcD,QAlCT;AAmCLE,cAAUtB,OAnCL;AAoCLuB,mBAAe;AACb1B,YAAME,MADO;AAEbG,eAAS;AAFI,KApCV;AAwCLsB,iBAAa;AACX3B,YAAMH;AADK,KAxCR;AA2CL+B,wBAAoBzB,OA3Cf;AA4CL0B,oBAAgB;AACd7B,YAAMG,OADQ;AAEdE,eAAS;AAFK,KA5CX;AAgDLyB,cAAU;AACR9B,YAAMH,MADE;AAERQ,eAAS;AAFD,KAhDL;AAoDL0B,kBAAc5B,OApDT;AAqDL6B,wBAAoB;AAClBhC,YAAMG,OADY;AAElBE,eAAS;AAFS,KArDf;AAyDL4B,gBAAYC,uBAAuBD,UAzD9B;AA0DLE,eAAW;AACTnC,YAAM,CAACH,MAAD,EAASO,MAAT,CADG;AAETC,eAAS+B;AAFA,KA1DN;AA8DLC,mBAAe;AACbrC,YAAMG,OADO;AAEbE,eAAS;AAFI,KA9DV;AAkELiC,gBAAY;AACVtC,YAAM,CAACH,MAAD,EAASO,MAAT,CADI;AAEVC,eAASkC;AAFC,KAlEP;AAuELC,6CAAcC,SAASzC,IAAvB;AAA6BK,eAAS;AAAtC;AAvEK,GAbsB;AAsF7BqC,SAAO,CACLC,kBADK,EAELC,YAFK,EAGL,YAHK,EAIL,OAJK,EAKL,gBALK,EAML,OANK,EAOL,MAPK,CAtFsB;AAgG7BC,OAhG6B,iBAgGvBjD,KAhGuB,EAgGhBkD,GAhGgB,EAgGX;AAChB,QAAMC,WAAWC,aAAa,QAAb,CAAjB;AACA,QAAMC,UAAUD,aAAa,OAAb,CAAhB;;AACA,qBAAcE,WAAd;AAAA,QAAQC,CAAR,cAAQA,CAAR;;AACA,QAAMC,SAASC,gBAAgBzD,KAAhB,CAAf;;AACA,qBA+CI0D,UAAU1D,KAAV,EAAiBwD,MAAjB,EAAyBN,GAAzB,CA/CJ;AAAA,QACES,YADF,cACEA,YADF;AAAA,QAEEC,UAFF,cAEEA,UAFF;AAAA,QAGEC,QAHF,cAGEA,QAHF;AAAA,QAIEC,YAJF,cAIEA,YAJF;AAAA,QAKEC,eALF,cAKEA,eALF;AAAA,QAMEC,sBANF,cAMEA,sBANF;AAAA,QAOEC,oBAPF,cAOEA,oBAPF;AAAA,QAQEC,aARF,cAQEA,aARF;AAAA,QASEC,SATF,cASEA,SATF;AAAA,QAUEC,cAVF,cAUEA,cAVF;AAAA,QAWEC,kBAXF,cAWEA,kBAXF;AAAA,QAYEC,cAZF,cAYEA,cAZF;AAAA,QAaEC,WAbF,cAaEA,WAbF;AAAA,QAcEC,gBAdF,cAcEA,gBAdF;AAAA,QAeEC,iBAfF,cAeEA,iBAfF;AAAA,QAgBEC,SAhBF,cAgBEA,SAhBF;AAAA,QAiBEC,cAjBF,cAiBEA,cAjBF;AAAA,QAkBEC,aAlBF,cAkBEA,aAlBF;AAAA,QAmBEC,WAnBF,cAmBEA,WAnBF;AAAA,QAoBEC,aApBF,cAoBEA,aApBF;AAAA,QAqBEC,SArBF,cAqBEA,SArBF;AAAA,QAsBEC,wBAtBF,cAsBEA,wBAtBF;AAAA,QAuBEC,eAvBF,cAuBEA,eAvBF;AAAA,QAwBEC,iBAxBF,cAwBEA,iBAxBF;AAAA,QAyBEC,cAzBF,cAyBEA,cAzBF;AAAA,QA0BEC,eA1BF,cA0BEA,eA1BF;AAAA,QA2BEC,eA3BF,cA2BEA,eA3BF;AAAA,QA4BEC,WA5BF,cA4BEA,WA5BF;AAAA,QA6BEC,IA7BF,cA6BEA,IA7BF;AAAA,QA8BEC,UA9BF,cA8BEA,UA9BF;AAAA,QA+BEC,gBA/BF,cA+BEA,gBA/BF;AAAA,QAgCEC,WAhCF,cAgCEA,WAhCF;AAAA,QAiCEC,UAjCF,cAiCEA,UAjCF;AAAA,QAkCEC,YAlCF,cAkCEA,YAlCF;AAAA,QAmCEC,WAnCF,cAmCEA,WAnCF;AAAA,QAoCEC,eApCF,cAoCEA,eApCF;AAAA,QAqCEC,eArCF,cAqCEA,eArCF;AAAA,QAuCEC,SAvCF,cAuCEA,SAvCF;AAAA,QAwCEC,KAxCF,cAwCEA,KAxCF;AAAA,QAyCEC,UAzCF,cAyCEA,UAzCF;AAAA,QA0CEC,IA1CF,cA0CEA,IA1CF;AAAA,QA2CEC,aA3CF,cA2CEA,aA3CF;AAAA,QA4CEC,SA5CF,cA4CEA,SA5CF;AAAA,QA6CEC,WA7CF,cA6CEA,WA7CF;AAAA,QA8CEC,gBA9CF,cA8CEA,gBA9CF;;AAiDA,oBAAkBC,SAASR,SAAT,CAAlB;AAAA,QAAQS,KAAR,aAAQA,KAAR;;AAEA,kBAoBIC,OAAOlD,MAAP,CApBJ;AAAA,QACEmD,UADF,WACEA,UADF;AAAA,QAEEC,QAFF,WAEEA,QAFF;AAAA,QAGEC,WAHF,WAGEA,WAHF;AAAA,QAIEC,oBAJF,WAIEA,oBAJF;AAAA,QAKEC,OALF,WAKEA,OALF;AAAA,QAMEC,SANF,WAMEA,SANF;AAAA,QAOEC,aAPF,WAOEA,aAPF;AAAA,QAQEC,UARF,WAQEA,UARF;AAAA,QASEC,KATF,WASEA,KATF;AAAA,QAUEC,aAVF,WAUEA,aAVF;AAAA,QAWEC,kBAXF,WAWEA,kBAXF;AAAA,QAYEC,kBAZF,WAYEA,kBAZF;AAAA,QAaEC,eAbF,WAaEA,eAbF;AAAA,QAcEC,YAdF,WAcEA,YAdF;AAAA,QAeEC,OAfF,WAeEA,OAfF;AAAA,QAgBEC,aAhBF,WAgBEA,aAhBF;AAAA,QAiBEC,YAjBF,WAiBEA,YAjBF;AAAA,QAkBEC,WAlBF,WAkBEA,WAlBF;AAAA,QAmBEC,cAnBF,WAmBEA,cAnBF;;AAsBA,QAAMC,aAAaC,SAAS,YAAM;AAChC,UAAMC,YAAY,CAAC7E,SAAS8E,CAAT,EAAD,CAAlB;;AACA,UAAMC,cAAcC,MAAMvE,UAAN,CAApB;;AACA,UAAIsE,WAAJ,EAAiB;AACfF,kBAAUI,IAAV,CAAejF,SAASkF,CAAT,CAAWH,WAAX,CAAf;AAA0B;;AAE5B,UAAIlI,MAAMgB,QAAV,EAAoB;AAClBgH,kBAAUI,IAAV,CAAejF,SAASkF,CAAT,CAAW,UAAX,CAAf;AAA0B;;AAE5B,aAAOL,SAAP;AAAO,KATU,CAAnB;AAYA,QAAMM,kBAAkBP,SAAS;AAAA;AAC/BQ,4BAAaJ,MAAMxB,UAAN,IAAoB,EAAjC,OAD+B;AAE/B6B,eAAO;AAFwB;AAAA,KAAT,CAAxB;AAKAC,YACEC,SADF,EAEEC,SAAS;AACP3I,kBADO;AAEPyH,sBAFO;AAGP9D,gCAHO;AAIP+D,kCAJO;AAKPC,gCALO;AAMPb,gDANO;AAOPI,4BAPO;AAQP7C,4CARO;AASPc,oCATO;AAUPC,sCAVO;AAWPgB,kCAXO;AAYPQ,wBAZO;AAaPrC,8BAbO;AAcP+B,8BAdO;AAePC;AAfO,KAAT,CAFF;AAqBAqC,cAAU,YAAM;AACdpF,aAAOqF,iBAAP,GAA2BxB,mBAAmByB,KAAnB,GACzB9I,MAAM+B,WAAN,IAAqBwB,EAAE,uBAAF,CADvB;;AAEA,UACEvD,MAAM6B,QAAN,IACAxB,MAAM0I,OAAN,CAAc/I,MAAMG,UAApB,CADA,IAEAH,MAAMG,UAAN,CAAiB6I,MAAjB,GAA0B,CAH5B,EAIE;AACA3B,2BAAmByB,KAAnB,GAA2B,EAA3B;AAA2B;;AAE7BG,wBAAkB7C,cAAc0C,KAAhC,EAA8ChF,YAA9C;;AACA,UAAIkC,UAAU8C,KAAV,IAAmB9C,UAAU8C,KAAV,CAAgBI,GAAvC,EAA4C;AAC1C,YAAMC,UAAU;AACdC,iBAAO,EADO;AAEd3I,mBAAS,EAFK;AAGd4I,iBAAO;AAHO,SAAhB;AAKA,YAAMC,SAAQtD,UAAU8C,KAAV,CAAgB7C,KAA9B;AACAzC,eAAO+F,kBAAP,GACED,OAAME,qBAAN,GAA8BC,MAA9B,IAAwCN,QAAQvF,WAAWkF,KAAnB,CAD1C;AAC6D;;AAE/D,UAAI9I,MAAMsB,MAAN,IAAgBtB,MAAM6B,QAA1B,EAAoC;AAClC2C;AAAA;;AAEFkF,eAAS,YAAM;AACb,YAAI,CAAC1D,UAAU8C,KAAf,EAAsB;;AACtB,YAAI9C,UAAU8C,KAAV,CAAgBI,GAApB,EAAyB;AACvBvC,qBAAWmC,KAAX,GAAmB9C,UAAU8C,KAAV,CAAgBI,GAAhB,CAAoBM,qBAApB,GAA4ChB,KAA/D;AAA+D;;AAEjE,YAAItF,IAAIyG,KAAJ,CAAUC,MAAd,EAAsB;AACpB,cAAMC,kBAAkB7D,UAAU8C,KAAV,CAAgBI,GAAhB,CAAoBY,UAA5C;AACA,cAAMR,SAASjJ,MAAM0J,IAAN,CAAWF,eAAX,EAA8CG,MAA9C,CACb,UAACC,IAAD;AAAA,mBAAUA,KAAKC,OAAL,KAAiB,OAA3B;AAAA,WADa,EAEb,CAFa,CAAf;AAGA,cAAMN,SAAS5D,UAAU8C,KAAV,CAAgBI,GAAhB,CAAoBiB,aAApB,YACT9G,QAAQ+G,CAAR,CAAU,QAAV,CADS,EAAf;AAGAxC,sBAAYkB,KAAZ,GAAoBuB,KAAKC,GAAL,CAClBV,OAAOJ,qBAAP,GAA+BhB,KAA/B,GAAuC,CADrB,EAElB,EAFkB,CAApB;;AAIA,cAAIhF,OAAOoE,WAAX,EAAwB;AACtB0B,mBAAMiB,KAAN,CAAYC,WAAZ,aAA6BH,KAAKC,GAAL,CAAS9G,OAAOoE,WAAhB,EAA6B,EAA7B,CAA7B;AAA0D;AAAA;AAAA,OAlBhE;AAsBArD;AAAA,KA9CF;AAiDAkG,oBAAgB,YAAM;AACpBC,2BAAqBtE,cAAc0C,KAAnC,EAAiDhF,YAAjD;AAAiD,KADnD;;AAIA,QAAI9D,MAAM6B,QAAN,IAAkB,CAACxB,MAAM0I,OAAN,CAAc/I,MAAMG,UAApB,CAAvB,EAAwD;AACtD+C,UAAIyH,IAAJ,CAAS5H,kBAAT,EAA6B,EAA7B;AAA6B;;AAE/B,QAAI,CAAC/C,MAAM6B,QAAP,IAAmBxB,MAAM0I,OAAN,CAAc/I,MAAMG,UAApB,CAAvB,EAAwD;AACtD+C,UAAIyH,IAAJ,CAAS5H,kBAAT,EAA6B,EAA7B;AAA6B;;AAG/B,QAAM6H,gBAAgB7C,SAAS,YAAM;AACnC;;AAAoC;AAGtC,KAJsB,CAAtB;;AASA;AAAA;;AAAO;AAELF,oCAFK;AAGLD,8BAHK;AAILhE,4BAJK;AAKLC,wBALK;AAMLC,gCANK;AAOLC,sCAPK;AAQLC,oDARK;AASLC,gDATK;AAULC,kCAVK;AAWLC,0BAXK;AAYLC,oCAZK;AAaLC,4CAbK;AAcLC,oCAdK;AAeLqC,4BAfK;AAgBLC,wBAhBK;AAiBLC,8BAjBK;AAkBLC,gDAlBK;AAmBLC,sBAnBK;AAoBLC,0BApBK;AAqBLC,kCArBK;AAsBLC,4BAtBK;AAuBLC,kBAvBK;AAwBLC,kCAxBK;AAyBLC,4CAzBK;AA0BLC,4CA1BK;AA2BLC,sCA3BK;AA4BLC,gCA5BK;AA6BLC,sBA7BK;AA8BLjD,wCA9BK;AA+BLC,0CA/BK;AAgCLC,0BAhCK;AAiCLC,oCAjCK;AAkCLC,kCAlCK;AAmCLC,8BAnCK;AAoCLC,kCApCK;AAqCLC,0BArCK;AAsCLC,wDAtCK;AAuCLC,sCAvCK;AAwCLC,0CAxCK;AAyCLG,sCAzCK;AA0CLC,8BA1CK;AA2CLC,gBA3CK;AA4CLC,4BA5CK;AA6CLC,wCA7CK;AA8CLC,8BA9CK;AA+CLC,4BA/CK;AAgDLC,gCAhDK;AAiDLC,8BAjDK;AAkDLC,sCAlDK;AAmDLC,sCAnDK;AAqDLU,kBArDK;AAsDLT,0BAtDK;AAuDLC,kBAvDK;AAwDLC,4BAxDK;AAyDL0E,kCAzDK;AA0DLzE,gBA1DK;AA2DLC,kCA3DK;AA6DLC,0BA7DK;AA8DLyB,4BA9DK;AA+DLQ,sCA/DK;AAgELuC,wCAhEK;AAgEL1H;AAhEK;AAgEL;AAzVyB,CAAb,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1CQ,SAtNA2H;AAEHC,wBAFGD;AAGHE,0CAHGF;AAGmBG;AAAA;AAAA;AAHnBH,MAqNSI;AA9MHH,qBA8MG;AA9MMhE,iCA8MN;AA7MX;AAAA;AAAA,MA6MW;AA5MVoE,6BA4MU;AA3MV9I,oBAAY,CAAGwI,gBA2ML;AA1MV,iEA0MU;AAzMV,yEAyMU;AAxMX9J,uBAwMW;AAvMXqK,YAuMW;AAtMVC,oBAsMU;AArMVC,wEAqMU;AApMV,oCAoMU;AAnMX,6BAmMW;AAlMVC,kBAkMU;AAlMJC;AAkMI;AAjCH/K;AAAA,qDA3DEgL;AAhGJC,aAAI,CAgGA;AA/FHX,mBA+FG;AA9FHC,eAAKW,eAAEF,uBAAFE,CA8FF;AA9FIpB;AA8FJ,UA5DGkB;AA9BJC,cA8BI;AA9BCnB;AAAiGqB;AAAjG;AA8BD,UAZIV,WAZE,CAAGW,iBAAH,EAAG;AACXC,sEADW;AAEXlL,kCAFW;AAGXmL,sCAHW;AAIZ3L,0BAJY;AAKX,iCALW;AAKsB4L;AAAA;AAAA;AALtB,OAAH;AAWRvL;AAAA;AAFEuK,mBAAKW,4CAEP;AAF+BpB;AAAAhC,wBACdkD,kBAAY,GAAZ,GAAY;AADE;AAE/B,aAD6BQ,8CAC7B,EAD6B,CAC7B;AAAA;;OAXQ,2CAuBFR;AARNC,cAQM;AAPNI,uBAOM;AANNlL,cAAM6K,oBAMA;AALPrL,0BAKO;AALP;AAKO;AADNK;AAAA;AAFuBuK,kDACP,WADO;AAEvB,aADsB,gDACtB,EADsB,CACtB;AAAA;;OACM,2DACJ,0CACPkB,+BAyBa;AAxBqBR,cAwBrB;AAxBkCS;AAwBlC;AADJ1L;AAAA;AArBC8J;AAAqGqB;AAArG;AAqBD;AADI,mBAbDQ;AACLV,wBAAQ7F,WAAR,CAAQoE,IAAR,CADKmC;AAELN,gEAFKM;AAGLxL,wBAAU,gBAHLwL;AAILL,gCAJKK;AAKNhM,gCALMgM;AAML,qCAAO,EANFA;AAMoBJ;AAAA;AAAA;AANpBI;AAYL3L;AAAA;AAFEuK,yBAAKW,4CAEP;AAF+BpB,wCACrB;AAAAhC;AAAA,mBADqB;AAE/B,mBADsB0D,kCACtB,EADsB,CACtB;AAAA;;aAZKG,uDAaC;oBACJ;AAAA;;OACI,4DAGLC,gCA8BNZ;AA7BAC,aAAI,CA6BJ;AA7BIX,oBA6BJ;AA3BA;AAAA;AAAA,UA2BA;AA1BC3K,oBA0BD;AAzBC4K,4FAyBD;AAxBChK,sBAAc,eAwBf;AAvBCN,uCAuBD;AAvBM6J;+HAAA;oBAAgO,CAAhO;AAAyP/B,0EAAzP;AAA2SD;AAA3S,UAuBN;AAbC+D;AAAA;AAAA,UAaD;AAZCC;AAAA;AAAA,UAYD;AAXCC;AAAA;AAAA,UAWD;AAXQC,oBAAEC;AAAA,yCACajB,2CADb;AAAA,UAAF,EAC8BiB;AAAA,iBACjBjB,qBAAe,MAAf,CADiB;AAAA,WACF,WADE,GACF,QADE,EAD9B,EAE4BiB;AAAA,iBACTjB,4BADS;AAAA,WACT,WADS,GACT,MADS,EAF5B,EAG0BiB;AAAA;AAAA,0CAH1B,EAIiCA,iDACxB;AAAA;AAAA,SADwB,EACX,mBADW,GACX,SADW,EAJjC,EAKsBA;AAAA;AAAA,uBALtB,EAMaA;AAAA;AAAA,oBANb,CAWR;AAHCC;AAAA;AAAA,UAGD;AAFCC;AAAA;AAAA,UAED;AADCC;AAAA,iBAAOpB,uEAAP;AAAA,UACD;AADQqB;AAAA;AAAA;AACR,kCA5BS,yBA4BT,qCACE,wCA2DF,EADO5B;AAvDThL,mBAuDS;AAvDL6K,wBAuDK;AAtDA5K,sCAsDA;AArDT;AAAA;AAAA,UAqDS;AApDRC,oBAoDQ;AAnDR2B,4CAmDQ;AAlDR3C,uBAkDQ;AAjDRsB,uCAiDQ;AAhDRE,kBAAU,WAgDF;AA/CRI,kBAAUyK,mBA+CF;AA9CR5H,+BA8CQ;AA7CR,+BA6CQ;AA5CRmH,yDAAwCS,YAAxC,GA4CQ;AA3CRsB,gEA2CQ;AA1CRT,iCA0CQ;AAzCRC,+BAyCQ;AAxCRO,iBAAOrB,2BAwCC;AAvCRuB,4CAuCQ;AAtCRL,kDAsCQ;AArCRC,mDAqCQ;AApCRC,gDAoCQ;AApCDJ,oBAAmCC;AAAA,iBACjBjB,qBAAe,MAAf,CADiB;AAAA,WACF,mBADE,GACF,QADE,EAAnC,EACiCiB,4BACZO;AAAA;AAAA,wCADY,CADjC,EAEiCA,0EAFjC,EAG0BP;AAAA,iBACbjB,oBADa;AAAA,WACb,mBADa,GACb,OADa,EAH1B,EAIaiB;AAAA;AAAA,oBAJb,CAoCC;AA9BRQ,sBAAUR;AAAA,iBAAEjB,qBAAa,IAAf;AAAA,UA8BF;AA9BiB0B;AAAA;AAAA;AA8BjB;AATGC;AAAA;AAHP1B,kBAGO;AAH0CV;AAG1C;AADyBvK,4BAAjC;AAAA,uBAAgB4M,qEAAhB;AAAA;;WACQ,mBAJC,yBAID,sCAOA5B;AAJPC,kBAIO;AAHPV,sFAGO;AAHAC;AAGA;AADqBxK,4BAA7B;AAAA,uBAAgB4M,iEAAhB;AAAA;;WACQ,8DAPA;AAAA;;;AAnBoBjO;AAUxBkO,UATN;AAAA,kBASMC,uCADuBC,iCACvB,EATN;AAAA;kBA2BO,kPACP;AAAA;AA+BWC;AAAA;AAZAhN,yBAff;AAAA,kBAeeiN;AAZb3C,iBAAI,WAYS;AAXZ4C,qBAWY;AAVZ,0BAAYlC,cAASmC,EAAT,CAAW,UAAX,EAAW,MAAX,CAUA;AATZ,8DASY;AATP5C,mCAAqHS,6FAArH;AASO;AAFoDhL;AAAA;AAAhCiL,sBAAgC;AAAjB5C,iCAAiB;AAAR+E;AAAQ,0BACpD,SADoD,KACpD3B,gCADoD,EACpDsB,kCADoD;AAAA;;WAEpD,8CAdgB,gDAchB,CAff,EA0BW/B,mBAJU,gFAIV,KAJU4B;AAAA3B;AAAA,cAGfD;AAAAC;AAAA;AAFOA,kBAEP;AAFyBV;AAEzB,aADUiB,+BACV,EADU,CACV,EAHe,QAIV,oCA1BX;AAAA,SAee,CAYA;;AAAA;AAAA;;GAER,kFArNTnB,QACY,iEADZA,CAsNA","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","componentName","components","ElInput","ElSelectMenu","ElOption","ElTag","ElScrollbar","ElTooltip","ElIcon","directives","ClickOutside","props","String","id","modelValue","type","Array","Number","Boolean","Object","default","autocomplete","automaticDropdown","size","validator","isValidComponentSize","effect","disabled","clearable","filterable","allowCreate","loading","popperClass","remote","loadingText","noMatchText","noDataText","remoteMethod","Function","filterMethod","multiple","multipleLimit","placeholder","defaultFirstOption","reserveKeyword","valueKey","collapseTags","popperAppendToBody","teleported","useTooltipContentProps","clearIcon","CircleClose","fitInputWidth","suffixIcon","ArrowUp","tagType","tagProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","ctx","nsSelect","useNamespace","nsInput","useLocale","t","states","useSelectStates","useSelect","optionsArray","selectSize","readonly","handleResize","collapseTagSize","debouncedOnInputChange","debouncedQueryChange","deletePrevTag","deleteTag","deleteSelected","handleOptionSelect","scrollToOption","setSelected","resetInputHeight","managePlaceholder","showClose","selectDisabled","iconComponent","iconReverse","showNewOption","emptyText","toggleLastOptionHitState","resetInputState","handleComposition","onOptionCreate","onOptionDestroy","handleMenuEnter","handleFocus","blur","handleBlur","handleClearClick","handleClose","toggleMenu","selectOption","getValueKey","navigateOptions","dropMenuVisible","reference","input","tooltipRef","tags","selectWrapper","scrollbar","queryChange","groupQueryChange","useFocus","focus","toRefs","inputWidth","selected","inputLength","filteredOptionsCount","visible","softFocus","selectedLabel","hoverIndex","query","inputHovering","currentPlaceholder","menuVisibleOnFocus","isOnComposition","isSilentBlur","options","cachedOptions","optionsCount","prefixWidth","tagInMultiLine","wrapperKls","computed","classList","b","_selectSize","unref","push","m","selectTagsStyle","maxWidth","width","provide","selectKey","reactive","onMounted","cachedPlaceHolder","value","isArray","length","addResizeListener","$el","sizeMap","large","small","input2","initialInputHeight","getBoundingClientRect","height","nextTick","slots","prefix","inputChildNodes","childNodes","from","filter","item","tagName","querySelector","e","Math","max","style","paddingLeft","onBeforeUnmount","removeResizeListener","emit","popperPaneRef","compatTeleported","_withDirectives","ref","class","onClick","createVNode","placement","pure","trigger","transition","persistent","onShow","_ctx","key","_normalizeClass","marginLeft","_component_el_tag","closable","hit","onClose","toDisplayString","createCommentVNode","onAfterLeave","_openBlock","_createCommentVNode","onFocus","onBlur","onKeyup","onKeydown","_cache","onCompositionstart","onCompositionupdate","onCompositionend","onInput","tabindex","onPaste","withKeys","onMouseenter","onMouseleave","suffix","openBlock","fn","createElementVNode","renderSlot","content","withDirectives","tag","be","created"],"sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectWrapper\"\n    v-click-outside:[popperPaneRef]=\"handleClose\"\n    :class=\"wrapperKls\"\n    @click.stop=\"toggleMenu\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      v-model:visible=\"dropMenuVisible\"\n      placement=\"bottom-start\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      persistent\n      @show=\"handleMenuEnter\"\n    >\n      <template #default>\n        <div class=\"select-trigger\">\n          <div\n            v-if=\"multiple\"\n            ref=\"tags\"\n            :class=\"nsSelect.e('tags')\"\n            :style=\"selectTagsStyle\"\n          >\n            <span\n              v-if=\"collapseTags && selected.length\"\n              :style=\"{\n                marginLeft:\n                  prefixWidth && selected.length ? `${prefixWidth}px` : '',\n              }\"\n            >\n              <el-tag\n                :closable=\"!selectDisabled && !selected[0].isDisabled\"\n                :size=\"collapseTagSize\"\n                :hit=\"selected[0].hitState\"\n                :type=\"tagType\"\n                disable-transitions\n                @close=\"deleteTag($event, selected[0])\"\n              >\n                <span\n                  :class=\"nsSelect.e('tags-text')\"\n                  :style=\"{ maxWidth: inputWidth - 123 + 'px' }\"\n                  >{{ selected[0].currentLabel }}</span\n                >\n              </el-tag>\n              <el-tag\n                v-if=\"selected.length > 1\"\n                :closable=\"false\"\n                :size=\"collapseTagSize\"\n                :type=\"tagType\"\n                disable-transitions\n              >\n                <span :class=\"nsSelect.e('tags-text')\"\n                  >+ {{ selected.length - 1 }}</span\n                >\n              </el-tag>\n            </span>\n            <!-- <div> -->\n            <transition v-if=\"!collapseTags\" @after-leave=\"resetInputHeight\">\n              <span\n                :style=\"{\n                  marginLeft:\n                    prefixWidth && selected.length ? `${prefixWidth}px` : '',\n                }\"\n              >\n                <el-tag\n                  v-for=\"item in selected\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span\n                    :class=\"nsSelect.e('tags-text')\"\n                    :style=\"{ maxWidth: inputWidth - 75 + 'px' }\"\n                    >{{ item.currentLabel }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <!-- </div> -->\n            <input\n              v-if=\"filterable\"\n              ref=\"input\"\n              v-model=\"query\"\n              type=\"text\"\n              :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n              :disabled=\"selectDisabled\"\n              :autocomplete=\"autocomplete\"\n              :style=\"{\n                marginLeft:\n                  (prefixWidth && !selected.length) || tagInMultiLine\n                    ? `${prefixWidth}px`\n                    : '',\n                flexGrow: 1,\n                width: `${inputLength / (inputWidth - 32)}%`,\n                maxWidth: `${inputWidth - 42}px`,\n              }\"\n              @focus=\"handleFocus\"\n              @blur=\"handleBlur\"\n              @keyup=\"managePlaceholder\"\n              @keydown=\"resetInputState\"\n              @keydown.down.prevent=\"navigateOptions('next')\"\n              @keydown.up.prevent=\"navigateOptions('prev')\"\n              @keydown.esc.stop.prevent=\"visible = false\"\n              @keydown.enter.stop.prevent=\"selectOption\"\n              @keydown.delete=\"deletePrevTag\"\n              @keydown.tab=\"visible = false\"\n              @compositionstart=\"handleComposition\"\n              @compositionupdate=\"handleComposition\"\n              @compositionend=\"handleComposition\"\n              @input=\"debouncedQueryChange\"\n            />\n          </div>\n          <el-input\n            :id=\"id\"\n            ref=\"reference\"\n            v-model=\"selectedLabel\"\n            type=\"text\"\n            :placeholder=\"currentPlaceholder\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :size=\"selectSize\"\n            :disabled=\"selectDisabled\"\n            :readonly=\"readonly\"\n            :validate-event=\"false\"\n            :class=\"[nsSelect.is('focus', visible)]\"\n            :tabindex=\"multiple && filterable ? -1 : undefined\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @input=\"debouncedOnInputChange\"\n            @paste=\"debouncedOnInputChange\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @keydown.down.stop.prevent=\"navigateOptions('next')\"\n            @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n            @keydown.enter.stop.prevent=\"selectOption\"\n            @keydown.esc.stop.prevent=\"visible = false\"\n            @keydown.tab=\"visible = false\"\n            @mouseenter=\"inputHovering = true\"\n            @mouseleave=\"inputHovering = false\"\n          >\n            <template v-if=\"$slots.prefix\" #prefix>\n              <div\n                style=\"\n                  height: 100%;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                \"\n              >\n                <slot name=\"prefix\"></slot>\n              </div>\n            </template>\n            <template #suffix>\n              <el-icon\n                v-if=\"iconComponent\"\n                v-show=\"!showClose\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <el-icon\n                v-if=\"showClose && clearIcon\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon')]\"\n                @click=\"handleClearClick\"\n              >\n                <component :is=\"clearIcon\" />\n              </el-icon>\n            </template>\n          </el-input>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu>\n          <el-scrollbar\n            v-show=\"options.size > 0 && !loading\"\n            ref=\"scrollbar\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[\n              nsSelect.is(\n                'empty',\n                !allowCreate && query && filteredOptionsCount === 0\n              ),\n            ]\"\n          >\n            <el-option v-if=\"showNewOption\" :value=\"query\" :created=\"true\" />\n            <slot></slot>\n          </el-scrollbar>\n          <template\n            v-if=\"\n              emptyText &&\n              (!allowCreate || loading || (allowCreate && options.size === 0))\n            \"\n          >\n            <slot v-if=\"$slots.empty\" name=\"empty\"></slot>\n            <p v-else :class=\"nsSelect.be('dropdown', 'empty')\">\n              {{ emptyText }}\n            </p>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  onMounted,\n  onBeforeUnmount,\n  nextTick,\n  reactive,\n  provide,\n  computed,\n  unref,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useFocus, useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/constants'\nimport {\n  addResizeListener,\n  removeResizeListener,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect, useSelectStates } from './useSelect'\nimport { selectKey } from './token'\n\nimport type { PropType, Component } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { SelectContext } from './token'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: undefined,\n    },\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    effect: {\n      type: String as PropType<'light' | 'dark' | string>,\n      default: 'light',\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0,\n    },\n    placeholder: {\n      type: String,\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true,\n    },\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    collapseTags: Boolean,\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false,\n    },\n    suffixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: ArrowUp,\n    },\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace('select')\n    const nsInput = useNamespace('input')\n    const { t } = useLocale()\n    const states = useSelectStates(props)\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n\n      reference,\n      input,\n      tooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n    } = useSelect(props, states, ctx)\n\n    const { focus } = useFocus(reference)\n\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine,\n    } = toRefs(states)\n\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()]\n      const _selectSize = unref(selectSize)\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize))\n      }\n      if (props.disabled) {\n        classList.push(nsSelect.m('disabled'))\n      }\n      return classList\n    })\n\n    const selectTagsStyle = computed(() => ({\n      maxWidth: `${unref(inputWidth) - 32}px`,\n      width: '100%',\n    }))\n\n    provide(\n      selectKey,\n      reactive({\n        props,\n        options,\n        optionsArray,\n        cachedOptions,\n        optionsCount,\n        filteredOptionsCount,\n        hoverIndex,\n        handleOptionSelect,\n        onOptionCreate,\n        onOptionDestroy,\n        selectWrapper,\n        selected,\n        setSelected,\n        queryChange,\n        groupQueryChange,\n      }) as unknown as SelectContext\n    )\n\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value =\n        props.placeholder || t('el.select.placeholder')\n      if (\n        props.multiple &&\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0\n      ) {\n        currentPlaceholder.value = ''\n      }\n      addResizeListener(selectWrapper.value as any, handleResize)\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28,\n        }\n        const input = reference.value.input as HTMLInputElement\n        states.initialInputHeight =\n          input.getBoundingClientRect().height || sizeMap[selectSize.value]\n      }\n      if (props.remote && props.multiple) {\n        resetInputHeight()\n      }\n      nextTick(() => {\n        if (!reference.value) return\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width\n        }\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes\n          const input = (Array.from(inputChildNodes) as HTMLElement[]).filter(\n            (item) => item.tagName === 'INPUT'\n          )[0]\n          const prefix = reference.value.$el.querySelector(\n            `.${nsInput.e('prefix')}`\n          )\n          prefixWidth.value = Math.max(\n            prefix.getBoundingClientRect().width + 5,\n            30\n          )\n          if (states.prefixWidth) {\n            input.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`\n          }\n        }\n      })\n      setSelected()\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value as any, handleResize)\n    })\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, [])\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n    }\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n\n    return {\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n\n      reference,\n      input,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n\n      wrapperKls,\n      selectTagsStyle,\n      compatTeleported,\n      nsSelect,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}