{"ast":null,"code":"import _asyncToGenerator from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { ref, computed, inject, nextTick, watch } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { on, off } from '../../../utils/dom/event.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\n\nvar useTooltip = function useTooltip(props, formatTooltip, showTooltip) {\n  var tooltip = ref(null);\n  var tooltipVisible = ref(false);\n  var enableFormat = computed(function () {\n    return formatTooltip.value instanceof Function;\n  });\n  var formatValue = computed(function () {\n    return enableFormat.value && formatTooltip.value(props.modelValue) || props.modelValue;\n  });\n  var displayTooltip = debounce(function () {\n    showTooltip.value && (tooltipVisible.value = true);\n  }, 50);\n  var hideTooltip = debounce(function () {\n    showTooltip.value && (tooltipVisible.value = false);\n  }, 50);\n  return {\n    tooltip: tooltip,\n    tooltipVisible: tooltipVisible,\n    formatValue: formatValue,\n    displayTooltip: displayTooltip,\n    hideTooltip: hideTooltip\n  };\n};\n\nvar useSliderButton = function useSliderButton(props, initData, emit) {\n  var _inject = inject(\"SliderProvider\"),\n      disabled = _inject.disabled,\n      min = _inject.min,\n      max = _inject.max,\n      step = _inject.step,\n      showTooltip = _inject.showTooltip,\n      precision = _inject.precision,\n      sliderSize = _inject.sliderSize,\n      formatTooltip = _inject.formatTooltip,\n      emitChange = _inject.emitChange,\n      resetSize = _inject.resetSize,\n      updateDragging = _inject.updateDragging;\n\n  var _useTooltip = useTooltip(props, formatTooltip, showTooltip),\n      tooltip = _useTooltip.tooltip,\n      tooltipVisible = _useTooltip.tooltipVisible,\n      formatValue = _useTooltip.formatValue,\n      displayTooltip = _useTooltip.displayTooltip,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var currentPosition = computed(function () {\n    return \"\".concat((props.modelValue - min.value) / (max.value - min.value) * 100, \"%\");\n  });\n  var wrapperStyle = computed(function () {\n    return props.vertical ? {\n      bottom: currentPosition.value\n    } : {\n      left: currentPosition.value\n    };\n  });\n\n  var handleMouseEnter = function handleMouseEnter() {\n    initData.hovering = true;\n    displayTooltip();\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    initData.hovering = false;\n\n    if (!initData.dragging) {\n      hideTooltip();\n    }\n  };\n\n  var onButtonDown = function onButtonDown(event) {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n    on(window, \"mousemove\", onDragging);\n    on(window, \"touchmove\", onDragging);\n    on(window, \"mouseup\", onDragEnd);\n    on(window, \"touchend\", onDragEnd);\n    on(window, \"contextmenu\", onDragEnd);\n  };\n\n  var onLeftKeyDown = function onLeftKeyDown() {\n    if (disabled.value) return;\n    initData.newPosition = parseFloat(currentPosition.value) - step.value / (max.value - min.value) * 100;\n    setPosition(initData.newPosition);\n    emitChange();\n  };\n\n  var onRightKeyDown = function onRightKeyDown() {\n    if (disabled.value) return;\n    initData.newPosition = parseFloat(currentPosition.value) + step.value / (max.value - min.value) * 100;\n    setPosition(initData.newPosition);\n    emitChange();\n  };\n\n  var getClientXY = function getClientXY(event) {\n    var clientX;\n    var clientY;\n\n    if (event.type.startsWith(\"touch\")) {\n      clientY = event.touches[0].clientY;\n      clientX = event.touches[0].clientX;\n    } else {\n      clientY = event.clientY;\n      clientX = event.clientX;\n    }\n\n    return {\n      clientX: clientX,\n      clientY: clientY\n    };\n  };\n\n  var onDragStart = function onDragStart(event) {\n    initData.dragging = true;\n    initData.isClick = true;\n\n    var _getClientXY = getClientXY(event),\n        clientX = _getClientXY.clientX,\n        clientY = _getClientXY.clientY;\n\n    if (props.vertical) {\n      initData.startY = clientY;\n    } else {\n      initData.startX = clientX;\n    }\n\n    initData.startPosition = parseFloat(currentPosition.value);\n    initData.newPosition = initData.startPosition;\n  };\n\n  var onDragging = function onDragging(event) {\n    if (initData.dragging) {\n      initData.isClick = false;\n      displayTooltip();\n      resetSize();\n      var diff;\n\n      var _getClientXY2 = getClientXY(event),\n          clientX = _getClientXY2.clientX,\n          clientY = _getClientXY2.clientY;\n\n      if (props.vertical) {\n        initData.currentY = clientY;\n        diff = (initData.startY - initData.currentY) / sliderSize.value * 100;\n      } else {\n        initData.currentX = clientX;\n        diff = (initData.currentX - initData.startX) / sliderSize.value * 100;\n      }\n\n      initData.newPosition = initData.startPosition + diff;\n      setPosition(initData.newPosition);\n    }\n  };\n\n  var onDragEnd = function onDragEnd() {\n    if (initData.dragging) {\n      setTimeout(function () {\n        initData.dragging = false;\n\n        if (!initData.hovering) {\n          hideTooltip();\n        }\n\n        if (!initData.isClick) {\n          setPosition(initData.newPosition);\n          emitChange();\n        }\n      }, 0);\n      off(window, \"mousemove\", onDragging);\n      off(window, \"touchmove\", onDragging);\n      off(window, \"mouseup\", onDragEnd);\n      off(window, \"touchend\", onDragEnd);\n      off(window, \"contextmenu\", onDragEnd);\n    }\n  };\n\n  var setPosition = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newPosition) {\n      var lengthPerStep, steps, value;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(newPosition === null || isNaN(newPosition))) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (newPosition < 0) {\n                newPosition = 0;\n              } else if (newPosition > 100) {\n                newPosition = 100;\n              }\n\n              lengthPerStep = 100 / ((max.value - min.value) / step.value);\n              steps = Math.round(newPosition / lengthPerStep);\n              value = steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value;\n              value = parseFloat(value.toFixed(precision.value));\n              emit(UPDATE_MODEL_EVENT, value);\n\n              if (!initData.dragging && props.modelValue !== initData.oldValue) {\n                initData.oldValue = props.modelValue;\n              }\n\n              _context.next = 11;\n              return nextTick();\n\n            case 11:\n              initData.dragging && displayTooltip();\n              tooltip.value.updatePopper();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setPosition(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  watch(function () {\n    return initData.dragging;\n  }, function (val) {\n    updateDragging(val);\n  });\n  return {\n    tooltip: tooltip,\n    tooltipVisible: tooltipVisible,\n    showTooltip: showTooltip,\n    wrapperStyle: wrapperStyle,\n    formatValue: formatValue,\n    handleMouseEnter: handleMouseEnter,\n    handleMouseLeave: handleMouseLeave,\n    onButtonDown: onButtonDown,\n    onLeftKeyDown: onLeftKeyDown,\n    onRightKeyDown: onRightKeyDown,\n    setPosition: setPosition\n  };\n};\n\nexport { useSliderButton };","map":{"version":3,"mappings":"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","names":["useTooltip","props","formatTooltip","showTooltip","tooltip","ref","tooltipVisible","enableFormat","computed","value","Function","formatValue","modelValue","displayTooltip","debounce","hideTooltip","useSliderButton","initData","emit","inject","disabled","min","max","step","precision","sliderSize","emitChange","resetSize","updateDragging","currentPosition","wrapperStyle","vertical","bottom","left","handleMouseEnter","hovering","handleMouseLeave","dragging","onButtonDown","event","preventDefault","onDragStart","on","window","onDragging","onDragEnd","onLeftKeyDown","newPosition","parseFloat","setPosition","onRightKeyDown","getClientXY","clientX","clientY","type","startsWith","touches","isClick","startY","startX","startPosition","diff","currentY","currentX","setTimeout","off","isNaN","lengthPerStep","steps","Math","round","toFixed","UPDATE_MODEL_EVENT","oldValue","nextTick","updatePopper","watch","val"],"sources":["../../../../../../packages/components/slider/src/useSliderButton.ts"],"sourcesContent":["import { computed, inject, nextTick, ref, watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { off, on } from '@element-plus/utils'\n\nimport type { ComputedRef, CSSProperties } from 'vue'\nimport type {\n  ISliderButtonInitData,\n  ISliderButtonProps,\n  ISliderProvider,\n} from './slider.type'\n\nconst useTooltip = (\n  props: ISliderButtonProps,\n  formatTooltip: ComputedRef<(value: number) => number | string>,\n  showTooltip: ComputedRef<boolean>\n) => {\n  const tooltip = ref(null)\n\n  const tooltipVisible = ref(false)\n\n  const enableFormat = computed(() => {\n    return formatTooltip.value instanceof Function\n  })\n\n  const formatValue = computed(() => {\n    return (\n      (enableFormat.value && formatTooltip.value(props.modelValue)) ||\n      props.modelValue\n    )\n  })\n\n  const displayTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = true)\n  }, 50)\n\n  const hideTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = false)\n  }, 50)\n\n  return {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip,\n  }\n}\n\nexport const useSliderButton = (\n  props: ISliderButtonProps,\n  initData: ISliderButtonInitData,\n  emit\n) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    showTooltip,\n    precision,\n    sliderSize,\n    formatTooltip,\n    emitChange,\n    resetSize,\n    updateDragging,\n  } = inject<ISliderProvider>('SliderProvider')\n\n  const { tooltip, tooltipVisible, formatValue, displayTooltip, hideTooltip } =\n    useTooltip(props, formatTooltip, showTooltip)\n\n  const currentPosition = computed(() => {\n    return `${\n      ((props.modelValue - min.value) / (max.value - min.value)) * 100\n    }%`\n  })\n\n  const wrapperStyle = computed(() => {\n    return (\n      props.vertical\n        ? { bottom: currentPosition.value }\n        : { left: currentPosition.value }\n    ) as CSSProperties\n  })\n\n  const handleMouseEnter = () => {\n    initData.hovering = true\n    displayTooltip()\n  }\n\n  const handleMouseLeave = () => {\n    initData.hovering = false\n    if (!initData.dragging) {\n      hideTooltip()\n    }\n  }\n\n  const onButtonDown = (event: MouseEvent | TouchEvent) => {\n    if (disabled.value) return\n    event.preventDefault()\n    onDragStart(event)\n    on(window, 'mousemove', onDragging)\n    on(window, 'touchmove', onDragging)\n    on(window, 'mouseup', onDragEnd)\n    on(window, 'touchend', onDragEnd)\n    on(window, 'contextmenu', onDragEnd)\n  }\n\n  const onLeftKeyDown = () => {\n    if (disabled.value) return\n    initData.newPosition =\n      parseFloat(currentPosition.value) -\n      (step.value / (max.value - min.value)) * 100\n    setPosition(initData.newPosition)\n    emitChange()\n  }\n\n  const onRightKeyDown = () => {\n    if (disabled.value) return\n    initData.newPosition =\n      parseFloat(currentPosition.value) +\n      (step.value / (max.value - min.value)) * 100\n    setPosition(initData.newPosition)\n    emitChange()\n  }\n\n  const getClientXY = (event: MouseEvent | TouchEvent) => {\n    let clientX: number\n    let clientY: number\n    if (event.type.startsWith('touch')) {\n      clientY = (event as TouchEvent).touches[0].clientY\n      clientX = (event as TouchEvent).touches[0].clientX\n    } else {\n      clientY = (event as MouseEvent).clientY\n      clientX = (event as MouseEvent).clientX\n    }\n    return {\n      clientX,\n      clientY,\n    }\n  }\n\n  const onDragStart = (event: MouseEvent | TouchEvent) => {\n    initData.dragging = true\n    initData.isClick = true\n    const { clientX, clientY } = getClientXY(event)\n    if (props.vertical) {\n      initData.startY = clientY\n    } else {\n      initData.startX = clientX\n    }\n    initData.startPosition = parseFloat(currentPosition.value)\n    initData.newPosition = initData.startPosition\n  }\n\n  const onDragging = (event: MouseEvent | TouchEvent) => {\n    if (initData.dragging) {\n      initData.isClick = false\n      displayTooltip()\n      resetSize()\n      let diff: number\n      const { clientX, clientY } = getClientXY(event)\n      if (props.vertical) {\n        initData.currentY = clientY\n        diff = ((initData.startY - initData.currentY) / sliderSize.value) * 100\n      } else {\n        initData.currentX = clientX\n        diff = ((initData.currentX - initData.startX) / sliderSize.value) * 100\n      }\n      initData.newPosition = initData.startPosition + diff\n      setPosition(initData.newPosition)\n    }\n  }\n\n  const onDragEnd = () => {\n    if (initData.dragging) {\n      /*\n       * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移\n       * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上\n       */\n      setTimeout(() => {\n        initData.dragging = false\n        if (!initData.hovering) {\n          hideTooltip()\n        }\n        if (!initData.isClick) {\n          setPosition(initData.newPosition)\n          emitChange()\n        }\n      }, 0)\n      off(window, 'mousemove', onDragging)\n      off(window, 'touchmove', onDragging)\n      off(window, 'mouseup', onDragEnd)\n      off(window, 'touchend', onDragEnd)\n      off(window, 'contextmenu', onDragEnd)\n    }\n  }\n\n  const setPosition = async (newPosition: number) => {\n    if (newPosition === null || isNaN(newPosition)) return\n    if (newPosition < 0) {\n      newPosition = 0\n    } else if (newPosition > 100) {\n      newPosition = 100\n    }\n    const lengthPerStep = 100 / ((max.value - min.value) / step.value)\n    const steps = Math.round(newPosition / lengthPerStep)\n    let value =\n      steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value\n    value = parseFloat(value.toFixed(precision.value))\n    emit(UPDATE_MODEL_EVENT, value)\n\n    if (!initData.dragging && props.modelValue !== initData.oldValue) {\n      initData.oldValue = props.modelValue\n    }\n\n    await nextTick()\n    initData.dragging && displayTooltip()\n    tooltip.value.updatePopper()\n  }\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      updateDragging(val)\n    }\n  )\n\n  return {\n    tooltip,\n    tooltipVisible,\n    showTooltip,\n    wrapperStyle,\n    formatValue,\n    handleMouseEnter,\n    handleMouseLeave,\n    onButtonDown,\n    onLeftKeyDown,\n    onRightKeyDown,\n    setPosition,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}