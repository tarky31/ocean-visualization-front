{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import func from 'vue-editor-bridge';\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport Feature from \"ol/Feature\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { fromLonLat, get as getProjection } from \"ol/proj\";\nimport { Point, MultiLineString, LineString, Polygon, Circle } from \"ol/geom\";\nimport { Fill, Circle as CircleStyle, Style, Stroke, Icon } from \"ol/style\";\nimport { defaults as defaultControls } from \"ol/control\";\nimport OverviewMap from \"ol/control/OverviewMap\";\nimport VectorSource from 'ol/source/Vector';\nexport default {\n  data: function data() {\n    return {\n      value1: '',\n      //日期\n      value2: '',\n      //时刻\n      radio: \"\",\n      //海域\n      wp_value: '',\n      na_value: '',\n      ep_value: '',\n      options1: null,\n      options2: null,\n      options3: null,\n      map: null,\n      routeData: null\n    };\n  },\n  methods: {\n    fileSubmit: function fileSubmit() {\n      this.$MessageBox.alert('请将数据放置/home/user_typhoon_data/, 格式如下:<ul id=\"myUL\">  <li><span class=\"caret\">WP_solo/</span>   <ul class=\"nested\"> <li><span class=\"caret\">data_seq1/</span> <ul class=\"nested\"> <li>tp_1_pl.nc</li><li>tp_2_pl.nc</li></ul></li><li>tp_seq1.txt</li></ul></li></ul>', '提示', {\n        confirmButtonText: '确定',\n        dangerouslyUseHTMLString: true,\n        callback: function callback(action) {\n          // this.$message({\n          //   type: 'info',\n          //   message: `action: ${ action }`\n          // });\n          if (action === 'confirm') {// this.$http.get(\"http://localhost:8080/ocean/processOceanData\")\n            // .then(function(response){\n            //     console.log(response);\n            // })\n            //  console.log(\"hello\")\n          }\n        }\n      });\n    },\n    drawTyphoon: function drawTyphoon() {\n      if (this.value1 === '' || this.value2 === '') {\n        alert(\"请选择日期和时间！\");\n        return;\n      }\n\n      if (this.radio === '') {\n        alert(\"请选择海域！\");\n        return;\n      }\n    },\n    initSelect: function initSelect() {\n      //   let ocean=this.radio;\n      //   this.$http.get(\" http://localhost:8080/typhoon/getMetaInfo/\"+ocean)\n      //             .then(function(response){\n      //                 _this.options1=null;\n      //                 _this.options2=null;\n      //                 _this.options3=null;\n      //                 let data=response.data.data;\n      //                 let typhoonData=data.typhoonMetaData;\n      //                 if(ocean==='wp'){\n      //                      _this.options1=typhoonData;\n      //                 }else if(ocean==='ep'){\n      //                     _this.options2=typhoonData;\n      //                 }else{\n      //                     _this.options3=typhoonData;\n      //                 }\n      //         })\n      var _this = this;\n\n      if (this.radio === 'wp') {\n        this.ep_value = \"\";\n        this.$http.get(\"https://run.mocky.io/v3/4aa69cf2-f813-4525-9640-788c16cfcd10\").then(function (response) {\n          _this.options2 = null;\n          _this.options3 = null;\n          var data = response.data.data;\n          var typhoonData = data.typhoonMetaData;\n          _this.options1 = typhoonData;\n        });\n      } else if (this.radio === 'ep') {\n        this.wp_value = \"\";\n        this.$http.get(\"https://run.mocky.io/v3/6d9add90-c929-4eb1-bf0c-882433706fbb\").then(function (response) {\n          _this.options1 = null;\n          _this.options3 = null;\n          var data = response.data.data;\n          var typhoonData = data.typhoonMetaData;\n          _this.options2 = typhoonData;\n        });\n      }\n    },\n    getData: function getData(seq) {\n      var _this2 = this;\n\n      //  this.$http.get(\"http://localhost:8080/typhoon/getGeojsonData/\"+this.radio+\"/\"+seq)\n      //         .then(function(response){\n      // })\n      var _this = this;\n\n      this.$http.get(\"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\").then(function (response) {\n        _this2.routeData = response.data.data.geoJsonData;\n        _this2.routeData = JSON.parse(_this2.routeData);\n        _this2.routeData = _this2.routeData.featureList; // _this.routeData=response.data.geoJsonData;\n\n        _this2.addPointInterval(_this2.routeData, _this);\n      });\n    },\n    addPoint: function addPoint(data) {\n      var features = [];\n      var lines = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var curPointData = data[i].properties;\n        var _ref = [curPointData.longitude, curPointData.latitude],\n            lng = _ref[0],\n            lat = _ref[1];\n        var position = fromLonLat([lng, lat], 'EPSG:4326'); //  console.log(position)\n\n        var featureByPoint = new Feature({\n          geometry: new Point(position)\n        });\n        var speed = curPointData['max wind speed(intensity)'];\n        featureByPoint.setStyle(new Style({\n          image: new CircleStyle({\n            radius: 2,\n            fill: new Fill({\n              color: this.getColor(speed)\n            }),\n            stroke: new Stroke({\n              color: this.getColor(speed),\n              width: 1\n            })\n          })\n        }));\n        featureByPoint.set('typhoonPoint', true);\n        featureByPoint.set('id', i);\n        features.push(featureByPoint);\n\n        if (i != data.length - 1) {\n          var nextPos = data[i + 1].properties;\n          var _ref2 = [nextPos.longitude, nextPos.latitude],\n              nexLng = _ref2[0],\n              nexLat = _ref2[1];\n          lines.push([fromLonLat([lng, lat], 'EPSG:4326'), fromLonLat([nexLng, nexLat], 'EPSG:4326')]);\n        }\n      }\n\n      var featureByLine = new Feature({\n        geometry: new MultiLineString(lines)\n      });\n      features.push(featureByLine);\n      var layer = new VectorLayer();\n      var source = new VectorSource();\n      source.addFeatures(features);\n      layer.setSource(source);\n      this.map.addLayer(layer);\n    },\n    addPointInterval: function addPointInterval(data, _this) {\n      // let _this=this;\n      var points = data;\n      var index = 0;\n      var layer = new VectorLayer();\n      var source = new VectorSource();\n      var lastPoint = null;\n      var lastSpeed;\n      layer.setSource(source);\n      var intervalLogo = setInterval(function () {\n        if (index == points.length) {\n          lastPoint.set(\"endPoint\", true); //给最后一点添加标记\n\n          clearInterval(intervalLogo);\n          return;\n        }\n\n        var curPointData = points[index].properties;\n        var position = [curPointData.longitude, curPointData.latitude];\n\n        if (lastPoint != null) {\n          lastPoint.setStyle(new Style({\n            image: new Circle({\n              radius: 2,\n              fill: new Fill({\n                color: _this.getColor(lastSpeed)\n              }),\n              stroke: new Stroke({\n                color: _this.getColor(lastSpeed),\n                width: 1\n              })\n            })\n          }));\n        }\n\n        if (index == 0) {\n          _this.map.getView().setCenter(fromLonLat(position, 'EPSG:4326'));\n        }\n\n        var speed = curPointData['max wind speed(intensity)'];\n        var anchor = new Feature({\n          geometry: new Point(fromLonLat(position, 'EPSG:4326'))\n        }); // 设置样式，在样式中就可以设置图标\n\n        anchor.setStyle(new Style({\n          image: new Icon({\n            src: '../img/typhoon2.png',\n            scale: 0.5,\n            rotation: -360 / points.length * index\n          })\n        })); // 添加到之前的创建的layer中去\n\n        layer.getSource().addFeature(anchor);\n        anchor.set(\"typhoonPoint\", true);\n        anchor.set(\"id\", index); //   featurePoint.set(\"typhoonPoint\", true);\n        //   featurePoint.set(\"id\", index);\n        //   source.addFeature(featurePoint);\n\n        lastPoint = anchor;\n        lastSpeed = speed;\n\n        if (index > 0) {\n          var _lastPoint = data[index - 1].properties;\n          var lastPosition = [_lastPoint.longitude, _lastPoint.latitude];\n          var featureLine = new Feature({\n            geometry: new LineString([fromLonLat(position, 'EPSG:4326'), fromLonLat(lastPosition, 'EPSG:4326')])\n          });\n          source.addFeature(featureLine);\n        } // 需要一个出口\n\n\n        index++;\n      }, 100);\n    },\n    initMap: function initMap() {\n      this.map = new Map({\n        target: 'route',\n        // 关联到对应的div容器\n        layers: [new TileLayer({\n          // 瓦片图层\n          source: new OSM() // OpenStreetMap数据源\n\n        })],\n        view: new View({\n          // 地图视图\n          projection: 'EPSG:4326',\n          center: [0, 0],\n          zoom: 0\n        }),\n        controls: defaultControls().extend([new OverviewMap({\n          // 实例化一个OverviewMap类的对象，并加入到地图中\n          layers: [new TileLayer({\n            // 瓦片图层\n            source: new OSM() // OpenStreetMap数据源\n\n          })],\n          view: new View({\n            // 地图视图\n            projection: 'EPSG:4326'\n          })\n        })])\n      });\n    },\n    getColor: function getColor(speed) {\n      var color;\n\n      if (speed >= 10.8 && speed <= 17.1) {\n        color = 'rgb(233,218,122)';\n      } else if (speed >= 17.2 && speed <= 24.4) {\n        color = 'rgb(16,29,199)';\n      } else if (speed >= 24.5 && speed <= 32.6) {\n        color = 'green';\n      } else if (speed >= 32.7 && speed <= 41.4) {\n        color = 'rgb(239,171,118)';\n      } else if (speed >= 41.5 && speed <= 50.9) {\n        color = 'rgb(193,89,196)';\n      } else {\n        color = 'red';\n      }\n\n      return color;\n    }\n  },\n  mounted: function mounted() {\n    this.initMap();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MADA,kBACA;AACA;AACAC,gBADA;AACA;AACAC,gBAFA;AAEA;AACAC,eAHA;AAGA;AACAC,kBAJA;AAKAC,kBALA;AAMAC,kBANA;AAOAC,oBAPA;AAQAC,oBARA;AASAC,oBATA;AAUAC,eAVA;AAWAC;AAXA;AAaA,GAfA;AAiBAC;AACAC,cADA,wBACA;AACA;AACAC,+BADA;AAEAC,sCAFA;AAGAC;AACA;AACA;AACA;AACA;AACA,qCACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA,KAnBA;AAqBAC,eArBA,yBAqBA;AACA;AACAC;AACA;AACA;;AACA;AACAA;AACA;AACA;AACA,KA9BA;AA+BAC,cA/BA,wBA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA,uFACAC,IADA,CACA;AACAC;AACAA;AAEA;AACA;AACAA;AAEA,SATA;AAUA,OAZA,MAYA;AAEA;AACA,uFACAD,IADA,CACA;AACAC;AACAA;AAEA;AACA;AACAA;AAEA,SATA;AAUA;AACA,KA7EA;AA+EAC,WA/EA,mBA+EAC,GA/EA,EA+EA;AAAA;;AACA;AACA;AACA;AACA;;AACA,qFACAH,IADA,CACA;AAEA;AACA;AACA,wDAJA,CAKA;;AACA;AACA,OARA;AAWA,KA/FA;AAiGAI,YAjGA,oBAiGAxB,IAjGA,EAiGA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA,2DAHA,CAIA;;AACA;AACAyB;AADA;AAGA;AACAC;AACAC;AACAC,qBADA;AAEAC;AACAC;AADA,cAFA;AAKAC;AAAAD;AAAAE;AAAA;AALA;AADA;AASAN;AACAA;AACAO;;AACA;AACA;AACA;AAAA;AAAA;AACAC;AACA;AACA;;AAEA;AACAT;AADA;AAGAQ;AACA;AACA;AACAE;AACAC;AACA;AACA,KAzIA;AA2IAC,oBA3IA,4BA2IArC,IA3IA,EA2IAqB,KA3IA,EA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA;AACAE,0CADA,CACA;;AACAC;AACA;AACA;;AACA;AACA;;AACA;AACAD;AACAX;AACAC,uBADA;AAEAC;AACAC;AADA,gBAFA;AAKAC;AAAAD;AAAAE;AAAA;AALA;AADA;AAWA;;AACA;AACAX;AACA;;AAEA;AAEA;AACAI;AADA,WA3BA,CA8BA;;AACAe;AACAb;AACAc,sCADA;AAEAC,sBAFA;AAGAC;AAHA;AADA,YA/BA,CAsCA;;AACAP;AACAI;AACAA,gCAzCA,CA0CA;AACA;AACA;;AACAF;AACAM;;AACA;AACA;AACA;AACA;AACAnB,sCACAoB,iCADA,EAEAA,qCAFA;AADA;AAMAV;AACA,SAzDA,CA0DA;;;AACAW;AACA,OA5DA,EA4DA,GA5DA;AA6DA,KAjNA;AAmNAC,WAnNA,qBAmNA;AACA;AACAC,uBADA;AACA;AACAC,iBACA;AAAA;AACAd,2BADA,CACA;;AADA,UADA,CAFA;AAOAe;AAAA;AACAC,iCADA;AAEAC,wBAFA;AAGAC;AAHA,UAPA;AAYAC,4CACA;AAAA;AACAL,mBACA;AAAA;AACAd,6BADA,CACA;;AADA,YADA,CADA;AAMAe;AAAA;AACAC;AADA;AANA,UADA;AAZA;AA0BA,KA9OA;AA+OAI,YA/OA,oBA+OAC,KA/OA,EA+OA;AACA;;AACA;AACA1B;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA;AA/PA,GAjBA;AAkRA2B,SAlRA,qBAkRA;AACA;AAEA;AArRA","names":["data","value1","value2","radio","wp_value","na_value","ep_value","options1","options2","options3","map","routeData","methods","fileSubmit","confirmButtonText","dangerouslyUseHTMLString","callback","drawTyphoon","alert","initSelect","then","_this","getData","seq","addPoint","geometry","featureByPoint","image","radius","fill","color","stroke","width","features","lines","source","layer","addPointInterval","lastPoint","clearInterval","anchor","src","scale","rotation","lastSpeed","fromLonLat","index","initMap","target","layers","view","projection","center","zoom","controls","getColor","speed","mounted"],"sourceRoot":"views","sources":["Typhoon.vue"],"sourcesContent":["<template>\r\n<div style=\"width:100%;height:100%;background-color: #F3F2F3;\">\r\n     <div class=\"box\">\r\n       <div id=\"dashboard\">\r\n            <div id=\"data_upload\" class=\"part\">  \r\n                <div class=\"title\">\r\n                    <h4>\r\n                       台风强度智能预报结果可视化\r\n                    </h4>\r\n                </div>\r\n                <div class=\"center\">\r\n                    <input type=\"button\" value=\"导入台风数据\" id=\"data_btn\" @click=\"fileSubmit\">\r\n                </div>\r\n            </div>\r\n            <div class=\"part\">\r\n                <div class=\"title\" >\r\n                    <h4>\r\n                        选择日期\r\n                    </h4>   \r\n                </div>\r\n                <div class=\"container\">\r\n                    <el-date-picker\r\n                            v-model=\"value1\"\r\n                            type=\"date\"\r\n                            placeholder=\"选择日期\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            value-format=\"yyyy-MM-dd\">\r\n                    </el-date-picker>\r\n                    <el-time-select\r\n                            v-model=\"value2\"\r\n                            :picker-options=\"{\r\n                                start: '00:00',\r\n                                step: '01:00',\r\n                                end: '23:00'\r\n                            }\"\r\n                            placeholder=\"选择时间\">\r\n                    </el-time-select>\r\n                </div>\r\n                \r\n            </div>\r\n            <el-divider></el-divider>\r\n            <div style=\"margin-bottom: 5%;\" class=\"part\">  <!--台风-->\r\n                <div class=\"title\">\r\n                    <h4>\r\n                        请选择对应\r\n                    </h4>\r\n                </div>\r\n                 <div style=\"margin-left:8%;\">\r\n                       <el-radio-group clearable=true v-model=\"radio\" @change=\"initSelect\">\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"wp\"'>WP</el-radio>\r\n                           <div class=\"select\">\r\n                                <el-select v-model=\"wp_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                    <el-option\r\n                                    v-for=\"item in options1\"\r\n                                    :key=\"item\"\r\n                                    :label=\"item\"\r\n                                    :value=\"item\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </div>\r\n                           </div>\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"ep\"'>EP</el-radio>\r\n                                <div class=\"select\">\r\n                                    <el-select v-model=\"ep_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                        <el-option\r\n                                        v-for=\"item in options2\"\r\n                                        :key=\"item\"\r\n                                        :label=\"item\"\r\n                                        :value=\"item\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                           </div>\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"na\"'>NA</el-radio>\r\n                                <div class=\"select\">\r\n                                    <el-select v-model=\"na_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                        <el-option\r\n                                        v-for=\"item in options3\"\r\n                                        :key=\"item\"\r\n                                        :label=\"item\"\r\n                                        :value=\"item\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                           </div>\r\n                        </el-radio-group>\r\n                </div>\r\n            </div>\r\n            <div style=\"margin-top: 8%;\">\r\n                <div class=\"center\">\r\n                    <input type=\"button\" value=\"渲染\" id=\"draw_btn\" @click=\"drawTyphoon\">\r\n                </div>\r\n            </div>\r\n\r\n       </div>\r\n       <div id=\"vis\">\r\n           <div id=\"route\">\r\n\r\n           </div>\r\n           <div id=\"vector\">\r\n\r\n           </div>\r\n       </div>\r\n    </div>\r\n</div>\r\n    \r\n</template>\r\n\r\n<style>\r\nbody,html{\r\n    height:100%;\r\n    background-color: #F3F2F3;\r\n    margin: 0;\r\n    /* text-align: center; */\r\n}\r\n\r\n.box{\r\n    /* display: inline-block; */\r\n    width: 80%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.box .title{\r\n    margin-left: 3%;\r\n}\r\n\r\n.box .container{\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-left: -2%;\r\n\r\n}\r\n\r\n.box #dashboard{\r\n    float: left;\r\n    height: calc(100% - 10px);\r\n    width: 30%;\r\n    /* border: 1px solid #D2D2D2; */\r\n    margin-top: 10px;\r\n    background-color: white;\r\n}\r\n\r\n\r\n.box #vis{\r\n    width:65%;\r\n    height: calc(100% - 10px);\r\n    background-color: white;\r\n    margin-top: 10px;\r\n    float: left;\r\n    padding-right: 2%;\r\n    padding-left: 2%;\r\n}\r\n\r\n.box #vis #route,.box #vis #vector{\r\n    width: 100%;\r\n    height: 45%;\r\n}\r\n\r\n.box #vis #route{\r\n    margin-bottom: 5%;\r\n    margin-top: 5%;\r\n}\r\n\r\n\r\n\r\n#dashboard #sub_btn{\r\n    width: 131px;\r\n    height: 33px;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: #4472C4;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n}\r\n\r\n#dashboard .squ-checkbox{\r\n    margin-right:3%;\r\n}\r\n#dashboard .type{\r\n    display: block;\r\n    margin-bottom:10% ;\r\n}\r\n\r\n#dashboard .select{\r\n    padding-left: 15%;\r\n    /* margin-bottom: 5%; */\r\n    margin:4%;\r\n}\r\n\r\n\r\n#dashboard .center{\r\n    /* margin-left: -15%; */\r\n    margin-top: 3%;\r\n    text-align:center\r\n}\r\n\r\n#dashboard #draw_btn,#dashboard #data_btn{\r\n    width: 80%;\r\n    height: 33px;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: #4472C4;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.container #date{\r\n    float: left;\r\n    margin-left: 2%;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    margin-right: 1%;\r\n}\r\n\r\n.container .form-horizontal{\r\n    float: left;\r\n}\r\n\r\n.el-input__inner {\r\n    height: 33px;\r\n    line-height: 33px;  \r\n}\r\n.el-input__icon {\r\n    line-height: 33px;\r\n}\r\n\r\n.el-date-editor.el-input{\r\n    width: 150px;\r\n    margin: 0 3px;\r\n}\r\n\r\n.el-radio {\r\n    font-weight: 700;\r\n}\r\n\r\n.el-radio__label,.el-checkbox__label {\r\n    font-size: 15px;\r\n}\r\n\r\n.el-divider--horizontal{\r\n    width: 90%;\r\n    margin: 24px auto\r\n}\r\n</style>\r\n\r\n<script>\r\n// import func from 'vue-editor-bridge';\r\nimport \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport OSM from \"ol/source/OSM\"\r\nimport Feature from \"ol/Feature\";\r\nimport { Vector as VectorLayer } from \"ol/layer\";\r\nimport { fromLonLat, get as getProjection } from \"ol/proj\";\r\nimport { Point, MultiLineString, LineString, Polygon, Circle } from \"ol/geom\";\r\nimport { Fill, Circle as CircleStyle, Style, Stroke,Icon } from \"ol/style\";\r\nimport {defaults as defaultControls } from \"ol/control\";\r\nimport OverviewMap from \"ol/control/OverviewMap\";\r\nimport VectorSource from 'ol/source/Vector';\r\n  export default {\r\n    data() {\r\n      return {\r\n        value1:'',   //日期\r\n        value2:'',   //时刻\r\n        radio:\"\", //海域\r\n        wp_value: '',\r\n        na_value:'',\r\n        ep_value:'',\r\n        options1: null,\r\n        options2:null,\r\n        options3:null,\r\n        map:null,\r\n        routeData:null,\r\n      };\r\n    },\r\n    \r\n     methods: {\r\n      fileSubmit() {\r\n        this.$MessageBox.alert('请将数据放置/home/user_typhoon_data/, 格式如下:<ul id=\"myUL\">  <li><span class=\"caret\">WP_solo/</span>   <ul class=\"nested\"> <li><span class=\"caret\">data_seq1/</span> <ul class=\"nested\"> <li>tp_1_pl.nc</li><li>tp_2_pl.nc</li></ul></li><li>tp_seq1.txt</li></ul></li></ul>','提示', {\r\n          confirmButtonText: '确定',\r\n          dangerouslyUseHTMLString: true,\r\n          callback: action => {\r\n            // this.$message({\r\n            //   type: 'info',\r\n            //   message: `action: ${ action }`\r\n            // });\r\n            if(action=== 'confirm'){\r\n                // this.$http.get(\"http://localhost:8080/ocean/processOceanData\")\r\n                // .then(function(response){\r\n                //     console.log(response);\r\n                // })\r\n              //  console.log(\"hello\")\r\n            }\r\n          }\r\n        });\r\n      },\r\n     \r\n        drawTyphoon(){\r\n            if(this.value1===''||this.value2===''){\r\n                alert(\"请选择日期和时间！\");\r\n                return;\r\n            }\r\n            if(this.radio===''){\r\n                alert(\"请选择海域！\");\r\n                return;\r\n            }\r\n        },\r\n        initSelect(){\r\n        //   let ocean=this.radio;\r\n        //   this.$http.get(\" http://localhost:8080/typhoon/getMetaInfo/\"+ocean)\r\n        //             .then(function(response){\r\n        //                 _this.options1=null;\r\n        //                 _this.options2=null;\r\n        //                 _this.options3=null;\r\n        //                 let data=response.data.data;\r\n        //                 let typhoonData=data.typhoonMetaData;\r\n        //                 if(ocean==='wp'){\r\n        //                      _this.options1=typhoonData;\r\n        //                 }else if(ocean==='ep'){\r\n        //                     _this.options2=typhoonData;\r\n        //                 }else{\r\n        //                     _this.options3=typhoonData;\r\n        //                 }\r\n                      \r\n        //         })\r\n\r\n            let _this=this\r\n            if(this.radio==='wp'){\r\n                    this.ep_value=\"\"\r\n                    this.$http.get(\"https://run.mocky.io/v3/4aa69cf2-f813-4525-9640-788c16cfcd10\")\r\n                    .then(function(response){\r\n                        _this.options2=null;\r\n                        _this.options3=null;\r\n                        \r\n                        let data=response.data.data;\r\n                        let typhoonData=data.typhoonMetaData;\r\n                        _this.options1=typhoonData;\r\n                       \r\n                })\r\n            }else if(this.radio==='ep'){\r\n                \r\n                 this.wp_value=\"\"\r\n                 this.$http.get(\"https://run.mocky.io/v3/6d9add90-c929-4eb1-bf0c-882433706fbb\")\r\n                    .then(function(response){\r\n                        _this.options1=null;\r\n                        _this.options3=null;\r\n                        \r\n                        let data=response.data.data;\r\n                        let typhoonData=data.typhoonMetaData;\r\n                        _this.options2=typhoonData;\r\n                       \r\n            })\r\n        }\r\n        },\r\n\r\n        getData(seq){\r\n            //  this.$http.get(\"http://localhost:8080/typhoon/getGeojsonData/\"+this.radio+\"/\"+seq)\r\n            //         .then(function(response){\r\n            // })\r\n            let _this=this\r\n            this.$http.get(\"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\")\r\n                    .then((response)=>{\r\n                        \r\n                        this.routeData=response.data.data.geoJsonData;\r\n                        this.routeData = JSON.parse(this.routeData)\r\n                        this.routeData=this.routeData.featureList\r\n                        // _this.routeData=response.data.geoJsonData;\r\n                        this.addPointInterval(this.routeData,_this);\r\n            })\r\n            \r\n\r\n        },\r\n\r\n        addPoint(data){\r\n            let features=[];\r\n            let lines=[]\r\n            for(var i=0;i<data.length;i++){\r\n                let curPointData = data[i].properties;\r\n                let [lng, lat] = [curPointData.longitude, curPointData.latitude];\r\n                let position = fromLonLat([lng, lat],'EPSG:4326');\r\n              //  console.log(position)\r\n                let featureByPoint = new Feature({\r\n                    geometry: new Point(position),\r\n                });\r\n                let speed=curPointData['max wind speed(intensity)']\r\n                featureByPoint.setStyle(new Style({\r\n                    image:new CircleStyle({\r\n                        radius: 2,\r\n                        fill: new Fill({\r\n                            color:this.getColor(speed)\r\n                        }),\r\n                        stroke: new Stroke({color: this.getColor(speed), width: 1}),\r\n                    })\r\n                }))\r\n                featureByPoint.set('typhoonPoint',true);\r\n                featureByPoint.set('id',i);\r\n                features.push(featureByPoint);\r\n                if(i!=data.length-1){\r\n                    let nextPos=data[i+1].properties;\r\n                    let [nexLng,nexLat]=[nextPos.longitude,nextPos.latitude];\r\n                    lines.push([fromLonLat([lng, lat],'EPSG:4326'),fromLonLat([nexLng, nexLat],'EPSG:4326')]);\r\n                }\r\n            }\r\n\r\n            let featureByLine=new Feature({\r\n                geometry: new MultiLineString(lines)\r\n            })\r\n            features.push(featureByLine);\r\n            let layer=new VectorLayer();\r\n            let source=new VectorSource();\r\n            source.addFeatures(features);\r\n            layer.setSource(source);\r\n            this.map.addLayer(layer);\r\n        },\r\n\r\n        addPointInterval(data,_this){\r\n            // let _this=this;\r\n            let points = data;\r\n            let index = 0;\r\n            let layer = new VectorLayer();\r\n            let source = new VectorSource();\r\n            let lastPoint=null\r\n            let lastSpeed;\r\n            layer.setSource(source);\r\n        let intervalLogo=setInterval(function(){\r\n        if (index == points.length) {\r\n            lastPoint.set(\"endPoint\",true);  //给最后一点添加标记\r\n            clearInterval(intervalLogo);\r\n            return;\r\n          }\r\n          let curPointData = points[index].properties\r\n          let position = [curPointData.longitude, curPointData.latitude];\r\n          if(lastPoint!=null){\r\n            lastPoint.setStyle(new Style({\r\n                image:new Circle({\r\n                    radius: 2,\r\n                    fill: new Fill({\r\n                        color:_this.getColor(lastSpeed)\r\n                    }),\r\n                    stroke: new Stroke({color: _this.getColor(lastSpeed), width: 1}),\r\n                    \r\n                  })\r\n            }))\r\n           \r\n          }\r\n          if (index == 0) {\r\n            _this.map.getView().setCenter(fromLonLat(position,'EPSG:4326'));\r\n          }\r\n     \r\n          let speed=curPointData['max wind speed(intensity)']\r\n        \r\n          var anchor = new Feature({\r\n            geometry:new Point(fromLonLat(position,'EPSG:4326'))\r\n          });\r\n          // 设置样式，在样式中就可以设置图标\r\n          anchor.setStyle(new Style({\r\n            image: new Icon({\r\n              src: '../img/typhoon2.png',\r\n              scale:0.5,\r\n              rotation: -360/points.length*index\r\n            })\r\n          }));\r\n          // 添加到之前的创建的layer中去\r\n          layer.getSource().addFeature(anchor);\r\n          anchor.set(\"typhoonPoint\",true);\r\n          anchor.set(\"id\",index);\r\n        //   featurePoint.set(\"typhoonPoint\", true);\r\n        //   featurePoint.set(\"id\", index);\r\n        //   source.addFeature(featurePoint);\r\n          lastPoint=anchor;\r\n          lastSpeed=speed;\r\n          if (index > 0) {\r\n            let lastPoint=data[index-1].properties\r\n            let lastPosition = [lastPoint.longitude, lastPoint.latitude];\r\n            let featureLine = new Feature({\r\n              geometry: new LineString([\r\n                  fromLonLat(position,'EPSG:4326'),\r\n                  fromLonLat(lastPosition,'EPSG:4326'),\r\n              ]),\r\n            });\r\n            source.addFeature(featureLine);\r\n          }\r\n          // 需要一个出口\r\n          index++;\r\n    },100)\r\n        },\r\n\r\n        initMap(){\r\n             this.map = new Map({\r\n                target: 'route',                          // 关联到对应的div容器\r\n                layers: [\r\n                    new TileLayer({                 // 瓦片图层\r\n                        source: new OSM()     // OpenStreetMap数据源\r\n                    })\r\n                ],\r\n                view: new View({                     // 地图视图\r\n                    projection: 'EPSG:4326',\r\n                    center: [0, 0],\r\n                    zoom: 0\r\n                }),\r\n                controls: defaultControls().extend([\r\n                    new OverviewMap({        // 实例化一个OverviewMap类的对象，并加入到地图中\r\n                        layers:[\r\n                    new TileLayer({                 // 瓦片图层\r\n                        source: new OSM()     // OpenStreetMap数据源\r\n                    })\r\n                ],\r\n                        view: new View({                     // 地图视图\r\n                            projection: 'EPSG:4326',\r\n                \r\n                }),\r\n                    })        \r\n                ])\r\n    });\r\n        },\r\n        getColor(speed){\r\n            let color;\r\n            if(speed>=10.8&&speed<=17.1){\r\n                color='rgb(233,218,122)'\r\n            }else if(speed>=17.2&&speed<=24.4){\r\n                color='rgb(16,29,199)'\r\n            }else if(speed>=24.5&&speed<=32.6){\r\n                color='green'\r\n            }else if(speed>=32.7&&speed<=41.4){\r\n                color='rgb(239,171,118)'\r\n            }else if(speed>=41.5&&speed<=50.9){\r\n                color='rgb(193,89,196)'\r\n            }else{\r\n                color='red'\r\n            }\r\n            return color\r\n     }\r\n     },\r\n     mounted(){\r\n         this.initMap();\r\n         \r\n     }\r\n     \r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module"}