{"ast":null,"code":"import _toConsumableArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { defineComponent, ref, inject, getCurrentInstance, onMounted, watch, onBeforeUnmount, computed, reactive, resolveComponent, openBlock, createElementBlock, normalizeStyle, normalizeClass, createCommentVNode, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, toDisplayString, createTextVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close, Check } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElStep\",\n  components: {\n    ElIcon: ElIcon,\n    Close: Close,\n    Check: Check\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    icon: {\n      type: [String, Object],\n      default: \"\"\n    },\n    description: {\n      type: String,\n      default: \"\"\n    },\n    status: {\n      type: String,\n      default: \"\",\n      validator: function validator(val) {\n        return [\"\", \"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val);\n      }\n    }\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"step\");\n    var index = ref(-1);\n    var lineStyle = ref({});\n    var internalStatus = ref(\"\");\n    var parent = inject(\"ElSteps\");\n    var currentInstance = getCurrentInstance();\n    onMounted(function () {\n      watch([function () {\n        return parent.props.active;\n      }, function () {\n        return parent.props.processStatus;\n      }, function () {\n        return parent.props.finishStatus;\n      }], function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            active = _ref2[0];\n\n        updateStatus(active);\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(function () {\n      parent.steps.value = parent.steps.value.filter(function (instance) {\n        return instance.uid !== currentInstance.uid;\n      });\n    });\n    var currentStatus = computed(function () {\n      return props.status || internalStatus.value;\n    });\n    var prevStatus = computed(function () {\n      var prevStep = parent.steps.value[index.value - 1];\n      return prevStep ? prevStep.currentStatus : \"wait\";\n    });\n    var isCenter = computed(function () {\n      return parent.props.alignCenter;\n    });\n    var isVertical = computed(function () {\n      return parent.props.direction === \"vertical\";\n    });\n    var isSimple = computed(function () {\n      return parent.props.simple;\n    });\n    var stepsCount = computed(function () {\n      return parent.steps.value.length;\n    });\n    var isLast = computed(function () {\n      var _a;\n\n      return ((_a = parent.steps.value[stepsCount.value - 1]) == null ? void 0 : _a.uid) === currentInstance.uid;\n    });\n    var space = computed(function () {\n      return isSimple.value ? \"\" : parent.props.space;\n    });\n    var style = computed(function () {\n      var style2 = {\n        flexBasis: typeof space.value === \"number\" ? \"\".concat(space.value, \"px\") : space.value ? space.value : \"\".concat(100 / (stepsCount.value - (isCenter.value ? 0 : 1)), \"%\")\n      };\n      if (isVertical.value) return style2;\n\n      if (isLast.value) {\n        style2.maxWidth = \"\".concat(100 / stepsCount.value, \"%\");\n      }\n\n      return style2;\n    });\n\n    var setIndex = function setIndex(val) {\n      index.value = val;\n    };\n\n    var calcProgress = function calcProgress(status) {\n      var step = 100;\n      var style2 = {};\n      style2.transitionDelay = \"\".concat(150 * index.value, \"ms\");\n\n      if (status === parent.props.processStatus) {\n        step = 0;\n      } else if (status === \"wait\") {\n        step = 0;\n        style2.transitionDelay = \"\".concat(-150 * index.value, \"ms\");\n      }\n\n      style2.borderWidth = step && !isSimple.value ? \"1px\" : 0;\n      style2[parent.props.direction === \"vertical\" ? \"height\" : \"width\"] = \"\".concat(step, \"%\");\n      lineStyle.value = style2;\n    };\n\n    var updateStatus = function updateStatus(activeIndex) {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus;\n      } else if (activeIndex === index.value && prevStatus.value !== \"error\") {\n        internalStatus.value = parent.props.processStatus;\n      } else {\n        internalStatus.value = \"wait\";\n      }\n\n      var prevChild = parent.steps.value[stepsCount.value - 1];\n      if (prevChild) prevChild.calcProgress(internalStatus.value);\n    };\n\n    var stepItemState = reactive({\n      uid: computed(function () {\n        return currentInstance.uid;\n      }),\n      currentStatus: currentStatus,\n      setIndex: setIndex,\n      calcProgress: calcProgress\n    });\n    parent.steps.value = [].concat(_toConsumableArray(parent.steps.value), [stepItemState]);\n    return {\n      ns: ns,\n      index: index,\n      lineStyle: lineStyle,\n      currentStatus: currentStatus,\n      isCenter: isCenter,\n      isVertical: isVertical,\n      isSimple: isSimple,\n      isLast: isLast,\n      space: space,\n      style: style,\n      parent: parent,\n      setIndex: setIndex,\n      calcProgress: calcProgress,\n      updateStatus: updateStatus\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_close = resolveComponent(\"close\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    style: normalizeStyle(_ctx.style),\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(_ctx.isSimple ? \"simple\" : _ctx.parent.props.direction), _ctx.ns.is(\"flex\", _ctx.isLast && !_ctx.space && !_ctx.isCenter), _ctx.ns.is(\"center\", _ctx.isCenter && !_ctx.isVertical && !_ctx.isSimple)])\n  }, [createCommentVNode(\" icon & line \"), createElementVNode(\"div\", {\n    class: normalizeClass([_ctx.ns.e(\"head\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [!_ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"line\"))\n  }, [createElementVNode(\"i\", {\n    class: normalizeClass(_ctx.ns.e(\"line-inner\")),\n    style: normalizeStyle(_ctx.lineStyle)\n  }, null, 6)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.ns.is(_ctx.icon ? \"icon\" : \"text\")])\n  }, [_ctx.currentStatus !== \"success\" && _ctx.currentStatus !== \"error\" ? renderSlot(_ctx.$slots, \"icon\", {\n    key: 0\n  }, function () {\n    return [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"icon-inner\"))\n    }, {\n      default: withCtx(function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n      }),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), !_ctx.icon && !_ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      class: normalizeClass(_ctx.ns.e(\"icon-inner\"))\n    }, toDisplayString(_ctx.index + 1), 3)) : createCommentVNode(\"v-if\", true)];\n  }) : (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    class: normalizeClass([_ctx.ns.e(\"icon-inner\"), _ctx.ns.is(\"status\")])\n  }, {\n    default: withCtx(function () {\n      return [_ctx.currentStatus === \"success\" ? (openBlock(), createBlock(_component_check, {\n        key: 0\n      })) : (openBlock(), createBlock(_component_close, {\n        key: 1\n      }))];\n    }),\n    _: 1\n  }, 8, [\"class\"]))], 2)], 2), createCommentVNode(\" title & description \"), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"main\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass([_ctx.ns.e(\"title\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.title), 1)];\n  })], 2), _ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"arrow\"))\n  }, null, 2)) : (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass([_ctx.ns.e(\"description\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [renderSlot(_ctx.$slots, \"description\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.description), 1)];\n  })], 2))], 2)], 6);\n}\n\nvar Step = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Step as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElIcon","Close","Check","props","title","type","String","default","icon","Object","description","status","validator","val","includes","setup","ns","useNamespace","index","ref","lineStyle","internalStatus","parent","inject","currentInstance","getCurrentInstance","onMounted","watch","active","processStatus","finishStatus","updateStatus","immediate","onBeforeUnmount","steps","value","filter","instance","uid","currentStatus","computed","prevStatus","prevStep","isCenter","alignCenter","isVertical","direction","isSimple","simple","stepsCount","length","isLast","flexBasis","style2","calcProgress","step","borderWidth","prevChild","reactive","setIndex","stepItemState","space","style","_normalizeStyle","class","_ctx","b","is","_createCommentVNode","createElementVNode","key","_normalizeClass","openBlock","createCommentVNode","e","renderSlot","createTextVNode"],"sources":["../../../../../../packages/components/steps/src/item.vue"],"sourcesContent":["<template>\n  <div\n    :style=\"style\"\n    :class=\"[\n      ns.b(),\n      ns.is(isSimple ? 'simple' : parent.props.direction),\n      ns.is('flex', isLast && !space && !isCenter),\n      ns.is('center', isCenter && !isVertical && !isSimple),\n    ]\"\n  >\n    <!-- icon & line -->\n    <div :class=\"[ns.e('head'), ns.is(currentStatus)]\">\n      <div v-if=\"!isSimple\" :class=\"ns.e('line')\">\n        <i :class=\"ns.e('line-inner')\" :style=\"lineStyle\"></i>\n      </div>\n\n      <div :class=\"[ns.e('icon'), ns.is(icon ? 'icon' : 'text')]\">\n        <slot\n          v-if=\"currentStatus !== 'success' && currentStatus !== 'error'\"\n          name=\"icon\"\n        >\n          <el-icon v-if=\"icon\" :class=\"ns.e('icon-inner')\">\n            <component :is=\"icon\" />\n          </el-icon>\n          <div v-if=\"!icon && !isSimple\" :class=\"ns.e('icon-inner')\">\n            {{ index + 1 }}\n          </div>\n        </slot>\n        <el-icon v-else :class=\"[ns.e('icon-inner'), ns.is('status')]\">\n          <check v-if=\"currentStatus === 'success'\" />\n          <close v-else />\n        </el-icon>\n      </div>\n    </div>\n    <!-- title & description -->\n    <div :class=\"ns.e('main')\">\n      <div :class=\"[ns.e('title'), ns.is(currentStatus)]\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div v-if=\"isSimple\" :class=\"ns.e('arrow')\"></div>\n      <div v-else :class=\"[ns.e('description'), ns.is(currentStatus)]\">\n        <slot name=\"description\">{{ description }}</slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  reactive,\n  watch,\n} from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { Close, Check } from '@element-plus/icons-vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Ref, PropType, Component } from 'vue'\n\nexport interface IStepsProps {\n  space: number | string\n  active: number\n  direction: string\n  alignCenter: boolean\n  simple: boolean\n  finishStatus: string\n  processStatus: string\n}\n\nexport interface StepItemState {\n  uid: number\n  currentStatus: string\n  setIndex: (val: number) => void\n  calcProgress: (status: string) => void\n}\n\nexport interface IStepsInject {\n  props: IStepsProps\n  steps: Ref<StepItemState[]>\n}\n\nexport default defineComponent({\n  name: 'ElStep',\n  components: {\n    ElIcon,\n    Close,\n    Check,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: '',\n    },\n    description: {\n      type: String,\n      default: '',\n    },\n    status: {\n      type: String,\n      default: '',\n      validator: (val: string): boolean =>\n        ['', 'wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('step')\n    const index = ref(-1)\n    const lineStyle = ref({})\n    const internalStatus = ref('')\n    const parent: IStepsInject = inject('ElSteps')\n    const currentInstance = getCurrentInstance()\n\n    onMounted(() => {\n      watch(\n        [\n          () => parent.props.active,\n          () => parent.props.processStatus,\n          () => parent.props.finishStatus,\n        ],\n        ([active]) => {\n          updateStatus(active)\n        },\n        { immediate: true }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      parent.steps.value = parent.steps.value.filter(\n        (instance) => instance.uid !== currentInstance.uid\n      )\n    })\n\n    const currentStatus = computed(() => {\n      return props.status || internalStatus.value\n    })\n    const prevStatus = computed(() => {\n      const prevStep = parent.steps.value[index.value - 1]\n      return prevStep ? prevStep.currentStatus : 'wait'\n    })\n    const isCenter = computed(() => {\n      return parent.props.alignCenter\n    })\n    const isVertical = computed(() => {\n      return parent.props.direction === 'vertical'\n    })\n    const isSimple = computed(() => {\n      return parent.props.simple\n    })\n    const stepsCount = computed(() => {\n      return parent.steps.value.length\n    })\n    const isLast = computed(() => {\n      return (\n        parent.steps.value[stepsCount.value - 1]?.uid === currentInstance.uid\n      )\n    })\n    const space = computed(() => {\n      return isSimple.value ? '' : parent.props.space\n    })\n    const style = computed(() => {\n      const style: Record<string, unknown> = {\n        flexBasis:\n          typeof space.value === 'number'\n            ? `${space.value}px`\n            : space.value\n            ? space.value\n            : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`,\n      }\n      if (isVertical.value) return style\n      if (isLast.value) {\n        style.maxWidth = `${100 / stepsCount.value}%`\n      }\n      return style\n    })\n\n    const setIndex = (val) => {\n      index.value = val\n    }\n    const calcProgress = (status) => {\n      let step = 100\n      const style: Record<string, unknown> = {}\n\n      style.transitionDelay = `${150 * index.value}ms`\n      if (status === parent.props.processStatus) {\n        step = 0\n      } else if (status === 'wait') {\n        step = 0\n        style.transitionDelay = `${-150 * index.value}ms`\n      }\n      style.borderWidth = step && !isSimple.value ? '1px' : 0\n      style[\n        parent.props.direction === 'vertical' ? 'height' : 'width'\n      ] = `${step}%`\n      lineStyle.value = style\n    }\n    const updateStatus = (activeIndex) => {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus\n      } else if (activeIndex === index.value && prevStatus.value !== 'error') {\n        internalStatus.value = parent.props.processStatus\n      } else {\n        internalStatus.value = 'wait'\n      }\n      const prevChild = parent.steps.value[stepsCount.value - 1]\n      if (prevChild) prevChild.calcProgress(internalStatus.value)\n    }\n\n    const stepItemState = reactive({\n      uid: computed(() => currentInstance.uid),\n      currentStatus,\n      setIndex,\n      calcProgress,\n    })\n    parent.steps.value = [...parent.steps.value, stepItemState]\n\n    return {\n      ns,\n      index,\n      lineStyle,\n      currentStatus,\n      isCenter,\n      isVertical,\n      isSimple,\n      isLast,\n      space,\n      style,\n      parent,\n      setIndex,\n      calcProgress,\n      updateStatus,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}