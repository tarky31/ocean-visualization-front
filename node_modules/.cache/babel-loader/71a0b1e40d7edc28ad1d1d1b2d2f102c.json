{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { defineComponent, inject, watch, resolveComponent, openBlock, createBlock, mergeProps, withCtx, renderSlot, createCommentVNode } from 'vue';\nimport '../../slot/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { usePopperTriggerProps } from './popper.mjs';\nimport { POPPER_INJECTION_KEY } from './tokens.mjs';\nimport { unwrapMeasurableEl } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport OnlyChild from '../../slot/src/only-child.mjs';\nimport { useForwardRef } from '../../../hooks/use-forward-ref/index.mjs';\nimport { isElement } from '../../../utils/types.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElPopperTrigger\",\n  components: {\n    ElOnlyChild: OnlyChild\n  },\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread({}, usePopperTriggerProps), {}, {\n    onMouseenter: Function,\n    onMouseleave: Function,\n    onClick: Function,\n    onKeydown: Function,\n    onFocus: Function,\n    onBlur: Function,\n    onContextmenu: Function,\n    id: String,\n    open: Boolean\n  }),\n  setup: function setup(props) {\n    var _inject = inject(POPPER_INJECTION_KEY, void 0),\n        triggerRef = _inject.triggerRef;\n\n    useForwardRef(triggerRef);\n    watch(function () {\n      return props.virtualRef;\n    }, function (val) {\n      if (val) {\n        triggerRef.value = unwrapMeasurableEl(val);\n      }\n    }, {\n      immediate: true\n    });\n    watch(function () {\n      return triggerRef.value;\n    }, function (el, prevEl) {\n      if (isElement(el)) {\n        ;\n        [\"onMouseenter\", \"onMouseleave\", \"onClick\", \"onKeydown\", \"onFocus\", \"onBlur\", \"onContextmenu\"].forEach(function (eventName) {\n          var handler = props[eventName];\n\n          if (handler) {\n            ;\n            el.addEventListener(eventName.slice(2).toLowerCase(), handler);\n            prevEl == null ? void 0 : prevEl.removeEventListener(eventName.slice(2).toLowerCase(), handler);\n          }\n        });\n      }\n    }, {\n      immediate: true\n    });\n    return {\n      triggerRef: triggerRef\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_only_child = resolveComponent(\"el-only-child\");\n\n  return !_ctx.virtualTriggering ? (openBlock(), createBlock(_component_el_only_child, mergeProps({\n    key: 0\n  }, _ctx.$attrs, {\n    \"aria-describedby\": _ctx.open ? _ctx.id : void 0\n  }), {\n    default: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 16, [\"aria-describedby\"])) : createCommentVNode(\"v-if\", true);\n}\n\nvar ElPopperTrigger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { ElPopperTrigger as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAmBA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,iBADuB;AAE7BC,cAAY;AAAAC,iBAAEA;AAAF,GAFiB;AAG7BC,gBAAc,KAHe;AAI7BC,yCACKC,qBADL;AAEEC,kBAAcC,QAFhB;AAGEC,kBAAcD,QAHhB;AAIEE,aAASF,QAJX;AAKEG,eAAWH,QALb;AAMEI,aAASJ,QANX;AAOEK,YAAQL,QAPV;AAQEM,mBAAeN,QARjB;AASEO,QAAIC,MATN;AAUEC,UAAMC;AAVR,IAJ6B;AAgB7BC,OAhB6B,iBAgBvBd,KAhBuB,EAgBhB;AACX,kBAAuBe,OAAOC,oBAAP,EAA6B,MAA7B,CAAvB;AAAA,QAAQC,UAAR,WAAQA,UAAR;;AACAC,kBAAcD,UAAd;AAEAE,UACE;AAAA,aAAMnB,MAAMoB,UAAZ;AAAA,KADF,EAEE,UAACC,GAAD,EAAS;AACP,UAAIA,GAAJ,EAAS;AACPJ,mBAAWK,KAAX,GAAmBC,mBAAmBF,GAAnB,CAAnB;AAAsC;AAAA,KAJ5C,EAOE;AACEG,iBAAW;AADb,KAPF;AAYAL,UACE;AAAA,aAAMF,WAAWK,KAAjB;AAAA,KADF,EAEE,UAACG,EAAD,EAAKC,MAAL,EAAgB;AACd,UAAIC,UAAUF,EAAV,CAAJ,EAAmB;AACjB;AAAC,SACC,cADD,EAEC,cAFD,EAGC,SAHD,EAIC,WAJD,EAKC,SALD,EAMC,QAND,EAOC,eAPD,EAQCG,OARD,CAQS,UAACC,SAAD,EAAe;AACvB,cAAMC,UAAU9B,MAAM6B,SAAN,CAAhB;;AACA,cAAIC,OAAJ,EAAa;AACX;AAAEL,eAAmBM,gBAAnB,CACAF,UAAUG,KAAV,CAAgB,CAAhB,EAAmBC,WAAnB,EADA,EAEAH,OAFA;AAIAJ,0EAEA,MAFA,CAEA,CAFA,EAEAO,WAFA,IAEAH,OAFA;AAEA;AAAA,SAjBL;AAiBK;AAAA,KArBZ,EA2BE;AACEN,iBAAW;AADb,KA3BF;AAgCA,WAAO;AACLP;AADK,KAAP;AACE;AAjEyB,CAAb,CAAlB;;;;;UAjBWiB,uCADTC,YAMgBC,wBANhBD,aAMgB;AAAAE;AAAA,GANhBC,EAEUJ,WAFVI,EAEgB;AACb,wBAAkBJ,YAAOA,OAAP,GAAY;AADjB,GAFhBI,GAGiC;qBAE/B;AAAA,aAAQ,CAARC,WAAQL,WAARK,EAAQ,SAARA,CAAQ,CAAR;AAAA,MAF+B;AAEvBC;AAFuB,GAHjCL","names":["_sfc_main","defineComponent","name","components","ElOnlyChild","inheritAttrs","props","usePopperTriggerProps","onMouseenter","Function","onMouseleave","onClick","onKeydown","onFocus","onBlur","onContextmenu","id","String","open","Boolean","setup","inject","POPPER_INJECTION_KEY","triggerRef","useForwardRef","watch","virtualRef","val","value","unwrapMeasurableEl","immediate","el","prevEl","isElement","forEach","eventName","handler","addEventListener","slice","toLowerCase","_ctx","_createBlock","_component_el_only_child","key","_mergeProps","_renderSlot","_"],"sources":["../../../../../../packages/components/popper/src/trigger.vue"],"sourcesContent":["<template>\n  <el-only-child\n    v-if=\"!virtualTriggering\"\n    v-bind=\"$attrs\"\n    :aria-describedby=\"open ? id : undefined\"\n  >\n    <slot />\n  </el-only-child>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, watch } from 'vue'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useForwardRef } from '@element-plus/hooks'\nimport { isElement } from '@element-plus/utils'\nimport { usePopperTriggerProps } from './popper'\nimport { POPPER_INJECTION_KEY } from './tokens'\nimport { unwrapMeasurableEl } from './utils'\n\nexport default defineComponent({\n  name: 'ElPopperTrigger',\n  components: { ElOnlyChild },\n  inheritAttrs: false,\n  props: {\n    ...usePopperTriggerProps,\n    onMouseenter: Function,\n    onMouseleave: Function,\n    onClick: Function,\n    onKeydown: Function,\n    onFocus: Function,\n    onBlur: Function,\n    onContextmenu: Function,\n    id: String,\n    open: Boolean,\n  },\n  setup(props) {\n    const { triggerRef } = inject(POPPER_INJECTION_KEY, undefined)!\n    useForwardRef(triggerRef)\n\n    watch(\n      () => props.virtualRef,\n      (val) => {\n        if (val) {\n          triggerRef.value = unwrapMeasurableEl(val)\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    watch(\n      () => triggerRef.value,\n      (el, prevEl) => {\n        if (isElement(el)) {\n          ;[\n            'onMouseenter',\n            'onMouseleave',\n            'onClick',\n            'onKeydown',\n            'onFocus',\n            'onBlur',\n            'onContextmenu',\n          ].forEach((eventName) => {\n            const handler = props[eventName]\n            if (handler) {\n              ;(el as HTMLElement).addEventListener(\n                eventName.slice(2).toLowerCase(),\n                handler\n              )\n              ;(prevEl as HTMLElement)?.removeEventListener(\n                eventName.slice(2).toLowerCase(),\n                handler\n              )\n            }\n          })\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    return {\n      triggerRef,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}