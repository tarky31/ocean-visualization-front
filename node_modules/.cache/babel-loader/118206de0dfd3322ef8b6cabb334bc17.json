{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, ref, computed, inject, resolveComponent, openBlock, createBlock, Transition, withCtx, createElementBlock, createElementVNode, normalizeClass, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nvar _sfc_main = defineComponent({\n  components: {\n    TimeSpinner: TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: void 0\n    },\n    datetimeRole: {\n      type: String\n    },\n    parsedValue: {\n      type: [Object, String]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup: function setup(props, ctx) {\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var selectionRange = ref([0, 2]);\n    var oldValue = useOldValue(props);\n    var transitionName = computed(function () {\n      return props.actualVisible === void 0 ? \"el-zoom-in-top\" : \"\";\n    });\n    var showSeconds = computed(function () {\n      return props.format.includes(\"ss\");\n    });\n    var amPmMode = computed(function () {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    var isValidValue = function isValidValue(_date) {\n      var parsedDate = dayjs(_date).locale(lang.value);\n      var result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    var handleCancel = function handleCancel() {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    var handleConfirm = function handleConfirm() {\n      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var first = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (first) return;\n      ctx.emit(\"pick\", props.parsedValue, visible);\n    };\n\n    var handleChange = function handleChange(_date) {\n      if (!props.visible) {\n        return;\n      }\n\n      var result = getRangeAvailableTime(_date).millisecond(0);\n      ctx.emit(\"pick\", result, true);\n    };\n\n    var setSelectionRange = function setSelectionRange(start, end) {\n      ctx.emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    var changeSelectionRange = function changeSelectionRange(step) {\n      var list = [0, 3].concat(showSeconds.value ? [6] : []);\n      var mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      var index = list.indexOf(selectionRange.value[0]);\n      var next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        var step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        var _step = code === EVENT_CODE.up ? -1 : 1;\n\n        timePickerOptions[\"start_scrollDown\"](_step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    var getRangeAvailableTime = function getRangeAvailableTime(date) {\n      var availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      var result = date;\n      [\"hour\", \"minute\", \"second\"].forEach(function (_) {\n        if (availableMap[_]) {\n          var availableArr;\n          var method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), props.datetimeRole);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), props.datetimeRole);\n          } else {\n            availableArr = method(props.datetimeRole);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            result = result[_](availableArr[0]);\n          }\n        }\n      });\n      return result;\n    };\n\n    var parseUserInput = function parseUserInput(value) {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    var formatToString = function formatToString(value) {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    var getDefaultValue = function getDefaultValue() {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    var timePickerOptions = {};\n\n    var onSetOption = function onSetOption(e) {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n        arrowControl = _pickerBase$props.arrowControl,\n        disabledHours = _pickerBase$props.disabledHours,\n        disabledMinutes = _pickerBase$props.disabledMinutes,\n        disabledSeconds = _pickerBase$props.disabledSeconds,\n        defaultValue = _pickerBase$props.defaultValue;\n\n    var _getAvailableArrs = getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds),\n        getAvailableHours = _getAvailableArrs.getAvailableHours,\n        getAvailableMinutes = _getAvailableArrs.getAvailableMinutes,\n        getAvailableSeconds = _getAvailableArrs.getAvailableSeconds;\n\n    return {\n      transitionName: transitionName,\n      arrowControl: arrowControl,\n      onSetOption: onSetOption,\n      t: t,\n      handleConfirm: handleConfirm,\n      handleChange: handleChange,\n      setSelectionRange: setSelectionRange,\n      amPmMode: amPmMode,\n      showSeconds: showSeconds,\n      handleCancel: handleCancel,\n      disabledHours: disabledHours,\n      disabledMinutes: disabledMinutes,\n      disabledSeconds: disabledSeconds\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  key: 0,\n  class: \"el-time-panel\"\n};\nvar _hoisted_2 = {\n  class: \"el-time-panel__footer\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.transitionName\n  }, {\n    default: withCtx(function () {\n      return [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", {\n        class: normalizeClass([\"el-time-panel__content\", {\n          \"has-seconds\": _ctx.showSeconds\n        }])\n      }, [createVNode(_component_time_spinner, {\n        ref: \"spinner\",\n        role: _ctx.datetimeRole || \"start\",\n        \"arrow-control\": _ctx.arrowControl,\n        \"show-seconds\": _ctx.showSeconds,\n        \"am-pm-mode\": _ctx.amPmMode,\n        \"spinner-date\": _ctx.parsedValue,\n        \"disabled-hours\": _ctx.disabledHours,\n        \"disabled-minutes\": _ctx.disabledMinutes,\n        \"disabled-seconds\": _ctx.disabledSeconds,\n        onChange: _ctx.handleChange,\n        onSetOption: _ctx.onSetOption,\n        onSelectRange: _ctx.setSelectionRange\n      }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2), createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"el-time-panel__btn cancel\",\n        onClick: _cache[0] || (_cache[0] = function () {\n          return _ctx.handleCancel && _ctx.handleCancel.apply(_ctx, arguments);\n        })\n      }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 1), createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"el-time-panel__btn confirm\",\n        onClick: _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.handleConfirm();\n        })\n      }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 1)])])) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  }, 8, [\"name\"]);\n}\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","TimeSpinner","props","visible","Boolean","actualVisible","type","default","datetimeRole","String","parsedValue","Object","format","emits","setup","ctx","useLocale","t","lang","selectionRange","ref","oldValue","useOldValue","transitionName","computed","showSeconds","includes","amPmMode","isValidValue","_date","parsedDate","dayjs","locale","value","result","getRangeAvailableTime","isSame","handleCancel","emit","handleConfirm","first","handleChange","millisecond","setSelectionRange","start","end","changeSelectionRange","step","list","concat","mapping","index","indexOf","next","length","timePickerOptions","handleKeydown","event","code","EVENT_CODE","left","right","preventDefault","up","down","date","availableMap","hour","getAvailableHours","minute","getAvailableMinutes","second","getAvailableSeconds","forEach","_","availableArr","method","parseUserInput","formatToString","getDefaultValue","defaultValue","onSetOption","e","pickerBase","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","getAvailableArrs","class","_createBlock","_Transition","name","_ctx","openBlock","_createElementBlock","_createElementVNode","_normalizeClass","_createVNode","_component_time_spinner","role","onChange","onSelectRange","onClick","_cache","toDisplayString","createCommentVNode"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" class=\"el-time-panel\">\n      <div\n        class=\"el-time-panel__content\"\n        :class=\"{ 'has-seconds': showSeconds }\"\n      >\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div class=\"el-time-panel__footer\">\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn cancel\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn confirm\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale } from '@element-plus/hooks'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return props.actualVisible === undefined ? 'el-zoom-in-top' : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}