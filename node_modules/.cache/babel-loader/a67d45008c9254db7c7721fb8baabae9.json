{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nvar messageTypes = [\"success\", \"info\", \"warning\", \"error\"];\nvar messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: \"\"\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false\n  },\n  duration: {\n    type: Number,\n    default: 3e3\n  },\n  icon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  id: {\n    type: String,\n    default: \"\"\n  },\n  message: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  onClose: {\n    type: definePropType(Function),\n    required: false\n  },\n  showClose: {\n    type: Boolean,\n    default: false\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: \"info\"\n  },\n  offset: {\n    type: Number,\n    default: 20\n  },\n  zIndex: {\n    type: Number,\n    default: 0\n  },\n  grouping: {\n    type: Boolean,\n    default: false\n  },\n  repeatNum: {\n    type: Number,\n    default: 1\n  }\n});\nvar messageEmits = {\n  destroy: function destroy() {\n    return true;\n  }\n};\nexport { messageEmits, messageProps, messageTypes };","map":{"version":3,"mappings":";;;;AACY,IAACA,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAAhB;AACA,IAACC,YAAY,GAAGC,UAAU,CAAC;AACrCC,aAAW,EAAE;AACXC,QAAI,EAAEC,MADK;AAEXC,WAAO,EAAE;AAFE,GADwB;AAKrCC,QAAM,EAAE;AACNH,QAAI,EAAEI,OADA;AAENF,WAAO,EAAE;AAFH,GAL6B;AASrCG,0BAAwB,EAAE;AACxBL,QAAI,EAAEI,OADkB;AAExBF,WAAO,EAAE;AAFe,GATW;AAarCI,UAAQ,EAAE;AACRN,QAAI,EAAEO,MADE;AAERL,WAAO,EAAE;AAFD,GAb2B;AAiBrCM,MAAI,EAAE;AACJR,QAAI,EAAES,YADF;AAEJP,WAAO,EAAE;AAFL,GAjB+B;AAqBrCQ,IAAE,EAAE;AACFV,QAAI,EAAEC,MADJ;AAEFC,WAAO,EAAE;AAFP,GArBiC;AAyBrCS,SAAO,EAAE;AACPX,QAAI,EAAEY,cAAc,CAAC,CAACX,MAAD,EAASY,MAAT,CAAD,CADb;AAEPX,WAAO,EAAE;AAFF,GAzB4B;AA6BrCY,SAAO,EAAE;AACPd,QAAI,EAAEY,cAAc,CAACG,QAAD,CADb;AAEPC,YAAQ,EAAE;AAFH,GA7B4B;AAiCrCC,WAAS,EAAE;AACTjB,QAAI,EAAEI,OADG;AAETF,WAAO,EAAE;AAFA,GAjC0B;AAqCrCF,MAAI,EAAE;AACJA,QAAI,EAAEC,MADF;AAEJiB,UAAM,EAAEtB,YAFJ;AAGJM,WAAO,EAAE;AAHL,GArC+B;AA0CrCiB,QAAM,EAAE;AACNnB,QAAI,EAAEO,MADA;AAENL,WAAO,EAAE;AAFH,GA1C6B;AA8CrCkB,QAAM,EAAE;AACNpB,QAAI,EAAEO,MADA;AAENL,WAAO,EAAE;AAFH,GA9C6B;AAkDrCmB,UAAQ,EAAE;AACRrB,QAAI,EAAEI,OADE;AAERF,WAAO,EAAE;AAFD,GAlD2B;AAsDrCoB,WAAS,EAAE;AACTtB,QAAI,EAAEO,MADG;AAETL,WAAO,EAAE;AAFA;AAtD0B,CAAD,CAA1B;AA2DA,IAACqB,YAAY,GAAG;AAC1BC,SAAO,EAAE;AAAA,WAAM,IAAN;AAAA;AADiB,CAAhB","names":["messageTypes","messageProps","buildProps","customClass","type","String","default","center","Boolean","dangerouslyUseHTMLString","duration","Number","icon","iconPropType","id","message","definePropType","Object","onClose","Function","required","showClose","values","offset","zIndex","grouping","repeatNum","messageEmits","destroy"],"sources":["../../../../../../packages/components/message/src/message.ts"],"sourcesContent":["import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport type { VNode, ExtractPropTypes, AppContext } from 'vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: '',\n  },\n  center: {\n    type: Boolean,\n    default: false,\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3000,\n  },\n  icon: {\n    type: iconPropType,\n    default: '',\n  },\n  id: {\n    type: String,\n    default: '',\n  },\n  message: {\n    type: definePropType<string | VNode>([String, Object]),\n    default: '',\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: false,\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: 'info',\n  },\n  offset: {\n    type: Number,\n    default: 20,\n  },\n  zIndex: {\n    type: Number,\n    default: 0,\n  },\n  grouping: {\n    type: Boolean,\n    default: false,\n  },\n  repeatNum: {\n    type: Number,\n    default: 1,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageOptions = Omit<MessageProps, 'id'> & {\n  appendTo?: HTMLElement | string\n}\nexport type MessageOptionsTyped = Omit<MessageOptions, 'type'>\n\nexport interface MessageHandle {\n  close: () => void\n}\n\nexport type MessageParams = Partial<MessageOptions> | string | VNode\nexport type MessageParamsTyped = Partial<MessageOptionsTyped> | string | VNode\n\nexport type MessageFn = ((\n  options?: MessageParams,\n  appContext?: null | AppContext\n) => MessageHandle) & {\n  closeAll(): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsTyped,\n  appContext?: null | AppContext\n) => MessageHandle\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n\ntype MessageQueueItem = {\n  vm: VNode\n}\n\nexport type MessageQueue = MessageQueueItem[]\n"]},"metadata":{},"sourceType":"module"}