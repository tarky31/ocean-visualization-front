{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, computed, provide, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar rowProps = buildProps({\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  gutter: {\n    type: Number,\n    default: 0\n  },\n  justify: {\n    type: String,\n    values: [\"start\", \"center\", \"end\", \"space-around\", \"space-between\", \"space-evenly\"],\n    default: \"start\"\n  },\n  align: {\n    type: String,\n    values: [\"top\", \"middle\", \"bottom\"],\n    default: \"top\"\n  }\n});\nvar Row = defineComponent({\n  name: \"ElRow\",\n  props: rowProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var ns = useNamespace(\"row\");\n    var gutter = computed(function () {\n      return props.gutter;\n    });\n    provide(\"ElRow\", {\n      gutter: gutter\n    });\n    var style = computed(function () {\n      var styles = {\n        marginLeft: \"\",\n        marginRight: \"\"\n      };\n\n      if (props.gutter) {\n        styles.marginLeft = \"-\".concat(props.gutter / 2, \"px\");\n        styles.marginRight = styles.marginLeft;\n      }\n\n      return styles;\n    });\n    return function () {\n      var _a;\n\n      return h(props.tag, {\n        class: [ns.b(), ns.is(\"justify-\".concat(props.justify), props.justify !== \"start\"), ns.is(\"align-\".concat(props.align), props.align !== \"top\")],\n        style: style.value\n      }, (_a = slots.default) == null ? void 0 : _a.call(slots));\n    };\n  }\n});\nexport { Row as default, rowProps };","map":{"version":3,"mappings":";;;;;;AAGY,IAACA,QAAQ,GAAGC,UAAU,CAAC;AACjCC,KAAG,EAAE;AACHC,QAAI,EAAEC,MADH;AAEHC,WAAO,EAAE;AAFN,GAD4B;AAKjCC,QAAM,EAAE;AACNH,QAAI,EAAEI,MADA;AAENF,WAAO,EAAE;AAFH,GALyB;AASjCG,SAAO,EAAE;AACPL,QAAI,EAAEC,MADC;AAEPK,UAAM,EAAE,CACN,OADM,EAEN,QAFM,EAGN,KAHM,EAIN,cAJM,EAKN,eALM,EAMN,cANM,CAFD;AAUPJ,WAAO,EAAE;AAVF,GATwB;AAqBjCK,OAAK,EAAE;AACLP,QAAI,EAAEC,MADD;AAELK,UAAM,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAFH;AAGLJ,WAAO,EAAE;AAHJ;AArB0B,CAAD,CAAtB;AA2BP,IAACM,GAAG,GAAGC,eAAe,CAAC;AAC1BC,MAAI,EAAE,OADoB;AAE1BC,OAAK,EAAEd,QAFmB;AAG1Be,OAH0B,iBAGpBD,KAHoB,QAGF;AAAA,QAATE,KAAS,QAATA,KAAS;AACtB,QAAMC,EAAE,GAAGC,YAAY,CAAC,KAAD,CAAvB;AACA,QAAMZ,MAAM,GAAGa,QAAQ,CAAC;AAAA,aAAML,KAAK,CAACR,MAAZ;AAAA,KAAD,CAAvB;AACAc,WAAO,CAAC,OAAD,EAAU;AACfd,YAAM,EAANA;AADe,KAAV,CAAP;AAGA,QAAMe,KAAK,GAAGF,QAAQ,CAAC,YAAM;AAC3B,UAAMG,MAAM,GAAG;AACbC,kBAAU,EAAE,EADC;AAEbC,mBAAW,EAAE;AAFA,OAAf;;AAIA,UAAIV,KAAK,CAACR,MAAV,EAAkB;AAChBgB,cAAM,CAACC,UAAP,cAAwBT,KAAK,CAACR,MAAN,GAAe,CAAvC;AACAgB,cAAM,CAACE,WAAP,GAAqBF,MAAM,CAACC,UAA5B;AACD;;AACD,aAAOD,MAAP;AACD,KAVqB,CAAtB;AAWA,WAAO,YAAM;AACX,UAAIG,EAAJ;;AACA,aAAOC,CAAC,CAACZ,KAAK,CAACZ,GAAP,EAAY;AAClByB,aAAK,EAAE,CACLV,EAAE,CAACW,CAAH,EADK,EAELX,EAAE,CAACY,EAAH,mBAAiBf,KAAK,CAACN,OAAvB,GAAkCM,KAAK,CAACN,OAAN,KAAkB,OAApD,CAFK,EAGLS,EAAE,CAACY,EAAH,iBAAef,KAAK,CAACJ,KAArB,GAA8BI,KAAK,CAACJ,KAAN,KAAgB,KAA9C,CAHK,CADW;AAMlBW,aAAK,EAAEA,KAAK,CAACS;AANK,OAAZ,EAOL,CAACL,EAAE,GAAGT,KAAK,CAACX,OAAZ,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCoB,EAAE,CAACM,IAAH,CAAQf,KAAR,CAPnC,CAAR;AAQD,KAVD;AAWD;AA/ByB,CAAD,CAAtB","names":["rowProps","buildProps","tag","type","String","default","gutter","Number","justify","values","align","Row","defineComponent","name","props","setup","slots","ns","useNamespace","computed","provide","style","styles","marginLeft","marginRight","_a","h","class","b","is","value","call"],"sources":["../../../../../../packages/components/row/src/row.ts"],"sourcesContent":["import { defineComponent, computed, h, provide } from 'vue'\nimport { buildProps } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ExtractPropTypes, CSSProperties } from 'vue'\n\nexport const rowProps = buildProps({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  gutter: {\n    type: Number,\n    default: 0,\n  },\n  justify: {\n    type: String,\n    values: [\n      'start',\n      'center',\n      'end',\n      'space-around',\n      'space-between',\n      'space-evenly',\n    ],\n    default: 'start',\n  },\n  align: {\n    type: String,\n    values: ['top', 'middle', 'bottom'],\n    default: 'top',\n  },\n} as const)\nexport type RowProps = ExtractPropTypes<typeof rowProps>\n\nconst Row = defineComponent({\n  name: 'ElRow',\n  props: rowProps,\n\n  setup(props, { slots }) {\n    const ns = useNamespace('row')\n\n    const gutter = computed(() => props.gutter)\n    provide('ElRow', {\n      gutter,\n    })\n\n    const style = computed(() => {\n      const styles: CSSProperties = {\n        marginLeft: '',\n        marginRight: '',\n      }\n      if (props.gutter) {\n        styles.marginLeft = `-${props.gutter / 2}px`\n        styles.marginRight = styles.marginLeft\n      }\n      return styles\n    })\n\n    return () =>\n      h(\n        props.tag,\n        {\n          class: [\n            ns.b(),\n            ns.is(`justify-${props.justify}`, props.justify !== 'start'),\n            ns.is(`align-${props.align}`, props.align !== 'top'),\n          ],\n          style: style.value,\n        },\n        slots.default?.()\n      )\n  },\n})\n\nexport default Row\nexport type RowInstance = InstanceType<typeof Row>\n"]},"metadata":{},"sourceType":"module"}