{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport { watch } from 'vue';\nimport { isClient, useEventListener } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nvar modalStack = [];\n\nvar closeModal = function closeModal(e) {\n  if (modalStack.length === 0) return;\n\n  if (e.code === EVENT_CODE.esc) {\n    e.stopPropagation();\n    var topModal = modalStack[modalStack.length - 1];\n    topModal.handleClose();\n  }\n};\n\nvar useModal = function useModal(instance, visibleRef) {\n  watch(visibleRef, function (val) {\n    if (val) {\n      modalStack.push(instance);\n    } else {\n      modalStack.splice(modalStack.findIndex(function (modal) {\n        return modal === instance;\n      }), 1);\n    }\n  });\n};\n\nif (isClient) useEventListener(document, \"keydown\", closeModal);\nexport { useModal };","map":{"version":3,"mappings":";;;;;;AAGA,IAAMA,UAAU,GAAG,EAAnB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACxB,MAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EACE;;AACF,MAAID,CAAC,CAACE,IAAF,KAAWC,UAAU,CAACC,GAA1B,EAA+B;AAC7BJ,KAAC,CAACK,eAAF;AACA,QAAMC,QAAQ,GAAGR,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAA3B;AACAK,YAAQ,CAACC,WAAT;AACD;AACF,CARD;;AASY,IAACC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,UAAX,EAA0B;AAChDC,OAAK,CAACD,UAAD,EAAa,UAACE,GAAD,EAAS;AACzB,QAAIA,GAAJ,EAAS;AACPd,gBAAU,CAACe,IAAX,CAAgBJ,QAAhB;AACD,KAFD,MAEO;AACLX,gBAAU,CAACgB,MAAX,CAAkBhB,UAAU,CAACiB,SAAX,CAAqB,UAACC,KAAD;AAAA,eAAWA,KAAK,KAAKP,QAArB;AAAA,OAArB,CAAlB,EAAuE,CAAvE;AACD;AACF,GANI,CAAL;AAOF,CARY;;AASZ,IAAIQ,QAAJ,EACEC,gBAAgB,CAACC,QAAD,EAAW,SAAX,EAAsBpB,UAAtB,CAAhB","names":["modalStack","closeModal","e","length","code","EVENT_CODE","esc","stopPropagation","topModal","handleClose","useModal","instance","visibleRef","watch","val","push","splice","findIndex","modal","isClient","useEventListener","document"],"sources":["../../../../../packages/hooks/use-modal/index.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { isClient, useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nimport type { Ref } from 'vue'\n\ntype ModalInstance = {\n  handleClose: () => void\n}\n\nconst modalStack: ModalInstance[] = []\n\nconst closeModal = (e: KeyboardEvent) => {\n  if (modalStack.length === 0) return\n  if (e.code === EVENT_CODE.esc) {\n    e.stopPropagation()\n    const topModal = modalStack[modalStack.length - 1]\n    topModal.handleClose()\n  }\n}\n\nexport const useModal = (instance: ModalInstance, visibleRef: Ref<boolean>) => {\n  watch(visibleRef, (val) => {\n    if (val) {\n      modalStack.push(instance)\n    } else {\n      modalStack.splice(\n        modalStack.findIndex((modal) => modal === instance),\n        1\n      )\n    }\n  })\n}\n\nif (isClient) useEventListener(document, 'keydown', closeModal)\n"]},"metadata":{},"sourceType":"module"}