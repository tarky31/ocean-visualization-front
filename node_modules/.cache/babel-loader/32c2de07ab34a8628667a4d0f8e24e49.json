{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\nvar composeRefs = function composeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (el) {\n    refs.forEach(function (ref) {\n      ref.value = el;\n    });\n  };\n};\n\nexport { composeRefs };","map":{"version":3,"mappings":";;;AAAY,IAACA,WAAW,GAAG,SAAdA,WAAc,GAAa;AAAA,oCAATC,IAAS;AAATA,QAAS;AAAA;;AACtC,SAAO,UAACC,EAAD,EAAQ;AACbD,QAAI,CAACE,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBA,SAAG,CAACC,KAAJ,GAAYH,EAAZ;AACD,KAFD;AAGD,GAJD;AAKF,CANY","names":["composeRefs","refs","el","forEach","ref","value"],"sources":["../../../../../packages/utils/vue/refs.ts"],"sourcesContent":["import type { ComponentPublicInstance, Ref } from 'vue'\n\nexport const composeRefs = (...refs: Ref<HTMLElement | null>[]) => {\n  return (el: Element | ComponentPublicInstance | null) => {\n    refs.forEach((ref) => {\n      ref.value = el as HTMLElement | null\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}