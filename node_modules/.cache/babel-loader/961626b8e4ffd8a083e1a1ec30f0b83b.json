{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, unref, nextTick, onMounted, onUpdated, resolveDynamicComponent, h } from 'vue';\nimport { isNumber, isClient } from '@vueuse/core';\nimport '../../../../utils/index.mjs';\nimport { useCache } from '../hooks/use-cache.mjs';\nimport useWheel from '../hooks/use-wheel.mjs';\nimport ScrollBar from '../components/scrollbar.mjs';\nimport { isHorizontal, getScrollDir, getRTLOffsetType } from '../utils.mjs';\nimport { virtualizedListProps } from '../props.mjs';\nimport { ITEM_RENDER_EVT, SCROLL_EVT, BACKWARD, FORWARD, RTL, RTL_OFFSET_POS_DESC, RTL_OFFSET_NAG, AUTO_ALIGNMENT, HORIZONTAL } from '../defaults.mjs';\nimport { hasOwn, isString } from '@vue/shared';\n\nvar createList = function createList(_ref) {\n  var name = _ref.name,\n      getOffset = _ref.getOffset,\n      getItemSize = _ref.getItemSize,\n      getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initCache = _ref.initCache,\n      clearCache = _ref.clearCache,\n      validateProps = _ref.validateProps;\n  return defineComponent({\n    name: name != null ? name : \"ElVirtualList\",\n    props: virtualizedListProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup: function setup(props, _ref2) {\n      var emit = _ref2.emit,\n          expose = _ref2.expose;\n      validateProps(props);\n      var instance = getCurrentInstance();\n      var dynamicSizeCache = ref(initCache(props, instance));\n      var getItemStyleCache = useCache();\n      var windowRef = ref();\n      var innerRef = ref();\n      var scrollbarRef = ref();\n      var states = ref({\n        isScrolling: false,\n        scrollDir: \"forward\",\n        scrollOffset: isNumber(props.initScrollOffset) ? props.initScrollOffset : 0,\n        updateRequested: false,\n        isScrollbarDragging: false,\n        scrollbarAlwaysOn: props.scrollbarAlwaysOn\n      });\n      var itemsToRender = computed(function () {\n        var total = props.total,\n            cache = props.cache;\n\n        var _unref = unref(states),\n            isScrolling = _unref.isScrolling,\n            scrollDir = _unref.scrollDir,\n            scrollOffset = _unref.scrollOffset;\n\n        if (total === 0) {\n          return [0, 0, 0, 0];\n        }\n\n        var startIndex = getStartIndexForOffset(props, scrollOffset, unref(dynamicSizeCache));\n        var stopIndex = getStopIndexForStartIndex(props, startIndex, scrollOffset, unref(dynamicSizeCache));\n        var cacheBackward = !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache) : 1;\n        var cacheForward = !isScrolling || scrollDir === FORWARD ? Math.max(1, cache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(total - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var estimatedTotalSize = computed(function () {\n        return getEstimatedTotalSize(props, unref(dynamicSizeCache));\n      });\n\n      var _isHorizontal = computed(function () {\n        return isHorizontal(props.layout);\n      });\n\n      var windowStyle = computed(function () {\n        return [{\n          position: \"relative\",\n          overflow: \"hidden\",\n          WebkitOverflowScrolling: \"touch\",\n          willChange: \"transform\"\n        }, {\n          direction: props.direction,\n          height: isNumber(props.height) ? \"\".concat(props.height, \"px\") : props.height,\n          width: isNumber(props.width) ? \"\".concat(props.width, \"px\") : props.width\n        }, props.style];\n      });\n      var innerStyle = computed(function () {\n        var size = unref(estimatedTotalSize);\n        var horizontal = unref(_isHorizontal);\n        return {\n          height: horizontal ? \"100%\" : \"\".concat(size, \"px\"),\n          pointerEvents: unref(states).isScrolling ? \"none\" : void 0,\n          width: horizontal ? \"\".concat(size, \"px\") : \"100%\"\n        };\n      });\n      var clientSize = computed(function () {\n        return _isHorizontal.value ? props.width : props.height;\n      });\n\n      var _useWheel = useWheel({\n        atStartEdge: computed(function () {\n          return states.value.scrollOffset <= 0;\n        }),\n        atEndEdge: computed(function () {\n          return states.value.scrollOffset >= estimatedTotalSize.value;\n        }),\n        layout: computed(function () {\n          return props.layout;\n        })\n      }, function (offset) {\n        var _a, _b;\n\n        ;\n        (_b = (_a = scrollbarRef.value).onMouseUp) == null ? void 0 : _b.call(_a);\n        scrollTo(Math.min(states.value.scrollOffset + offset, estimatedTotalSize.value - clientSize.value));\n      }),\n          onWheel = _useWheel.onWheel;\n\n      var emitEvents = function emitEvents() {\n        var total = props.total;\n\n        if (total > 0) {\n          var _unref2 = unref(itemsToRender),\n              _unref3 = _slicedToArray(_unref2, 4),\n              cacheStart = _unref3[0],\n              cacheEnd = _unref3[1],\n              visibleStart = _unref3[2],\n              visibleEnd = _unref3[3];\n\n          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd);\n        }\n\n        var _unref4 = unref(states),\n            scrollDir = _unref4.scrollDir,\n            scrollOffset = _unref4.scrollOffset,\n            updateRequested = _unref4.updateRequested;\n\n        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested);\n      };\n\n      var scrollVertically = function scrollVertically(e) {\n        var _e$currentTarget = e.currentTarget,\n            clientHeight = _e$currentTarget.clientHeight,\n            scrollHeight = _e$currentTarget.scrollHeight,\n            scrollTop = _e$currentTarget.scrollTop;\n\n        var _states = unref(states);\n\n        if (_states.scrollOffset === scrollTop) {\n          return;\n        }\n\n        var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset: scrollOffset,\n          updateRequested: false\n        });\n        nextTick(resetIsScrolling);\n      };\n\n      var scrollHorizontally = function scrollHorizontally(e) {\n        var _e$currentTarget2 = e.currentTarget,\n            clientWidth = _e$currentTarget2.clientWidth,\n            scrollLeft = _e$currentTarget2.scrollLeft,\n            scrollWidth = _e$currentTarget2.scrollWidth;\n\n        var _states = unref(states);\n\n        if (_states.scrollOffset === scrollLeft) {\n          return;\n        }\n\n        var direction = props.direction;\n        var scrollOffset = scrollLeft;\n\n        if (direction === RTL) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              {\n                scrollOffset = -scrollLeft;\n                break;\n              }\n\n            case RTL_OFFSET_POS_DESC:\n              {\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n              }\n          }\n        }\n\n        scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset: scrollOffset,\n          updateRequested: false\n        });\n        nextTick(resetIsScrolling);\n      };\n\n      var onScroll = function onScroll(e) {\n        unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e);\n        emitEvents();\n      };\n\n      var onScrollbarScroll = function onScrollbarScroll(distanceToGo, totalSteps) {\n        var offset = (estimatedTotalSize.value - clientSize.value) / totalSteps * distanceToGo;\n        scrollTo(Math.min(estimatedTotalSize.value - clientSize.value, offset));\n      };\n\n      var scrollTo = function scrollTo(offset) {\n        offset = Math.max(offset, 0);\n\n        if (offset === unref(states).scrollOffset) {\n          return;\n        }\n\n        states.value = _objectSpread(_objectSpread({}, unref(states)), {}, {\n          scrollOffset: offset,\n          scrollDir: getScrollDir(unref(states).scrollOffset, offset),\n          updateRequested: true\n        });\n        nextTick(resetIsScrolling);\n      };\n\n      var scrollToItem = function scrollToItem(idx) {\n        var alignment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AUTO_ALIGNMENT;\n\n        var _unref5 = unref(states),\n            scrollOffset = _unref5.scrollOffset;\n\n        idx = Math.max(0, Math.min(idx, props.total - 1));\n        scrollTo(getOffset(props, idx, alignment, scrollOffset, unref(dynamicSizeCache)));\n      };\n\n      var getItemStyle = function getItemStyle(idx) {\n        var direction = props.direction,\n            itemSize = props.itemSize,\n            layout = props.layout;\n        var itemStyleCache = getItemStyleCache.value(clearCache && itemSize, clearCache && layout, clearCache && direction);\n        var style;\n\n        if (hasOwn(itemStyleCache, String(idx))) {\n          style = itemStyleCache[idx];\n        } else {\n          var offset = getItemOffset(props, idx, unref(dynamicSizeCache));\n          var size = getItemSize(props, idx, unref(dynamicSizeCache));\n          var horizontal = unref(_isHorizontal);\n          var isRtl = direction === RTL;\n          var offsetHorizontal = horizontal ? offset : 0;\n          itemStyleCache[idx] = style = {\n            position: \"absolute\",\n            left: isRtl ? void 0 : \"\".concat(offsetHorizontal, \"px\"),\n            right: isRtl ? \"\".concat(offsetHorizontal, \"px\") : void 0,\n            top: !horizontal ? \"\".concat(offset, \"px\") : 0,\n            height: !horizontal ? \"\".concat(size, \"px\") : \"100%\",\n            width: horizontal ? \"\".concat(size, \"px\") : \"100%\"\n          };\n        }\n\n        return style;\n      };\n\n      var resetIsScrolling = function resetIsScrolling() {\n        states.value.isScrolling = false;\n        nextTick(function () {\n          getItemStyleCache.value(-1, null, null);\n        });\n      };\n\n      var resetScrollTop = function resetScrollTop() {\n        var window = windowRef.value;\n\n        if (window) {\n          window.scrollTop = 0;\n        }\n      };\n\n      onMounted(function () {\n        if (!isClient) return;\n        var initScrollOffset = props.initScrollOffset;\n        var windowElement = unref(windowRef);\n\n        if (isNumber(initScrollOffset) && windowElement) {\n          if (unref(_isHorizontal)) {\n            windowElement.scrollLeft = initScrollOffset;\n          } else {\n            windowElement.scrollTop = initScrollOffset;\n          }\n        }\n\n        emitEvents();\n      });\n      onUpdated(function () {\n        var direction = props.direction,\n            layout = props.layout;\n\n        var _unref6 = unref(states),\n            scrollOffset = _unref6.scrollOffset,\n            updateRequested = _unref6.updateRequested;\n\n        var windowElement = unref(windowRef);\n\n        if (updateRequested && windowElement) {\n          if (layout === HORIZONTAL) {\n            if (direction === RTL) {\n              switch (getRTLOffsetType()) {\n                case \"negative\":\n                  {\n                    windowElement.scrollLeft = -scrollOffset;\n                    break;\n                  }\n\n                case \"positive-ascending\":\n                  {\n                    windowElement.scrollLeft = scrollOffset;\n                    break;\n                  }\n\n                default:\n                  {\n                    var clientWidth = windowElement.clientWidth,\n                        scrollWidth = windowElement.scrollWidth;\n                    windowElement.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                    break;\n                  }\n              }\n            } else {\n              windowElement.scrollLeft = scrollOffset;\n            }\n          } else {\n            windowElement.scrollTop = scrollOffset;\n          }\n        }\n      });\n      var api = {\n        clientSize: clientSize,\n        estimatedTotalSize: estimatedTotalSize,\n        windowStyle: windowStyle,\n        windowRef: windowRef,\n        innerRef: innerRef,\n        innerStyle: innerStyle,\n        itemsToRender: itemsToRender,\n        scrollbarRef: scrollbarRef,\n        states: states,\n        getItemStyle: getItemStyle,\n        onScroll: onScroll,\n        onScrollbarScroll: onScrollbarScroll,\n        onWheel: onWheel,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        resetScrollTop: resetScrollTop\n      };\n      expose({\n        windowRef: windowRef,\n        innerRef: innerRef,\n        getItemStyleCache: getItemStyleCache,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        resetScrollTop: resetScrollTop,\n        states: states\n      });\n      return api;\n    },\n    render: function render(ctx) {\n      var _a;\n\n      var $slots = ctx.$slots,\n          className = ctx.className,\n          clientSize = ctx.clientSize,\n          containerElement = ctx.containerElement,\n          data = ctx.data,\n          getItemStyle = ctx.getItemStyle,\n          innerElement = ctx.innerElement,\n          itemsToRender = ctx.itemsToRender,\n          innerStyle = ctx.innerStyle,\n          layout = ctx.layout,\n          total = ctx.total,\n          onScroll = ctx.onScroll,\n          onScrollbarScroll = ctx.onScrollbarScroll,\n          onWheel = ctx.onWheel,\n          states = ctx.states,\n          useIsScrolling = ctx.useIsScrolling,\n          windowStyle = ctx.windowStyle;\n\n      var _itemsToRender = _slicedToArray(itemsToRender, 2),\n          start = _itemsToRender[0],\n          end = _itemsToRender[1];\n\n      var Container = resolveDynamicComponent(containerElement);\n      var Inner = resolveDynamicComponent(innerElement);\n      var children = [];\n\n      if (total > 0) {\n        for (var i = start; i <= end; i++) {\n          children.push((_a = $slots.default) == null ? void 0 : _a.call($slots, {\n            data: data,\n            key: i,\n            index: i,\n            isScrolling: useIsScrolling ? states.isScrolling : void 0,\n            style: getItemStyle(i)\n          }));\n        }\n      }\n\n      var InnerNode = [h(Inner, {\n        style: innerStyle,\n        ref: \"innerRef\"\n      }, !isString(Inner) ? {\n        default: function _default() {\n          return children;\n        }\n      } : children)];\n      var scrollbar = h(ScrollBar, {\n        ref: \"scrollbarRef\",\n        clientSize: clientSize,\n        layout: layout,\n        onScroll: onScrollbarScroll,\n        ratio: clientSize * 100 / this.estimatedTotalSize,\n        scrollFrom: states.scrollOffset / (this.estimatedTotalSize - clientSize),\n        total: total\n      });\n      var listContainer = h(Container, {\n        class: className,\n        style: windowStyle,\n        onScroll: onScroll,\n        onWheel: onWheel,\n        ref: \"windowRef\",\n        key: 0\n      }, !isString(Container) ? {\n        default: function _default() {\n          return [InnerNode];\n        }\n      } : [InnerNode]);\n      return h(\"div\", {\n        key: 0,\n        class: [\"el-vl__wrapper\", states.scrollbarAlwaysOn ? \"always-on\" : \"\"]\n      }, [listContainer, scrollbar]);\n    }\n  });\n};\n\nexport { createList as default };","map":{"version":3,"mappings":"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","names":["createList","name","getOffset","getItemSize","getItemOffset","getEstimatedTotalSize","getStartIndexForOffset","getStopIndexForStartIndex","initCache","clearCache","validateProps","defineComponent","props","virtualizedListProps","emits","ITEM_RENDER_EVT","SCROLL_EVT","setup","emit","expose","instance","getCurrentInstance","dynamicSizeCache","ref","getItemStyleCache","useCache","windowRef","innerRef","scrollbarRef","states","isScrolling","scrollDir","scrollOffset","isNumber","initScrollOffset","updateRequested","isScrollbarDragging","scrollbarAlwaysOn","itemsToRender","computed","total","cache","unref","startIndex","stopIndex","cacheBackward","BACKWARD","Math","max","cacheForward","FORWARD","min","estimatedTotalSize","_isHorizontal","isHorizontal","layout","windowStyle","position","overflow","WebkitOverflowScrolling","willChange","direction","height","width","style","innerStyle","size","horizontal","pointerEvents","clientSize","value","useWheel","atStartEdge","atEndEdge","offset","_a","_b","onMouseUp","call","scrollTo","onWheel","emitEvents","cacheStart","cacheEnd","visibleStart","visibleEnd","scrollVertically","e","currentTarget","clientHeight","scrollHeight","scrollTop","_states","getScrollDir","nextTick","resetIsScrolling","scrollHorizontally","clientWidth","scrollLeft","scrollWidth","RTL","getRTLOffsetType","RTL_OFFSET_NAG","RTL_OFFSET_POS_DESC","onScroll","onScrollbarScroll","distanceToGo","totalSteps","scrollToItem","idx","alignment","AUTO_ALIGNMENT","getItemStyle","itemSize","itemStyleCache","hasOwn","String","isRtl","offsetHorizontal","left","right","top","resetScrollTop","window","onMounted","isClient","windowElement","onUpdated","HORIZONTAL","api","render","ctx","$slots","className","containerElement","data","innerElement","useIsScrolling","start","end","Container","resolveDynamicComponent","Inner","children","i","push","default","key","index","InnerNode","h","isString","scrollbar","Scrollbar","ratio","scrollFrom","listContainer","class"],"sources":["../../../../../../../packages/components/virtual-list/src/builders/build-list.ts"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  ref,\n  nextTick,\n  onMounted,\n  onUpdated,\n  resolveDynamicComponent,\n  h,\n  unref,\n} from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { hasOwn, isNumber, isString } from '@element-plus/utils'\nimport { useCache } from '../hooks/use-cache'\nimport useWheel from '../hooks/use-wheel'\nimport Scrollbar from '../components/scrollbar'\nimport { getScrollDir, isHorizontal, getRTLOffsetType } from '../utils'\nimport { virtualizedListProps } from '../props'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  RTL,\n  HORIZONTAL,\n  ITEM_RENDER_EVT,\n  SCROLL_EVT,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_DESC,\n} from '../defaults'\n\nimport type { VNode, CSSProperties, Slot, VNodeChild } from 'vue'\nimport type { ListConstructorProps, Alignment } from '../types'\nimport type { VirtualizedListProps } from '../props'\n\nconst createList = ({\n  name,\n  getOffset,\n  getItemSize,\n  getItemOffset,\n  getEstimatedTotalSize,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initCache,\n  clearCache,\n  validateProps,\n}: ListConstructorProps<VirtualizedListProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedListProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose }) {\n      validateProps(props)\n      const instance = getCurrentInstance()!\n      const dynamicSizeCache = ref(initCache(props, instance))\n\n      const getItemStyleCache = useCache()\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const innerRef = ref<HTMLElement>()\n      const scrollbarRef = ref()\n      const states = ref({\n        isScrolling: false,\n        scrollDir: 'forward',\n        scrollOffset: isNumber(props.initScrollOffset)\n          ? props.initScrollOffset\n          : 0,\n        updateRequested: false,\n        isScrollbarDragging: false,\n        scrollbarAlwaysOn: props.scrollbarAlwaysOn,\n      })\n\n      // computed\n      const itemsToRender = computed(() => {\n        const { total, cache } = props\n        const { isScrolling, scrollDir, scrollOffset } = unref(states)\n\n        if (total === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getStartIndexForOffset(\n          props,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n        const stopIndex = getStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n\n        const cacheBackward =\n          !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache) : 1\n        const cacheForward =\n          !isScrolling || scrollDir === FORWARD ? Math.max(1, cache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(total! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalSize = computed(() =>\n        getEstimatedTotalSize(props, unref(dynamicSizeCache))\n      )\n\n      const _isHorizontal = computed(() => isHorizontal(props.layout))\n\n      const windowStyle = computed(() => [\n        {\n          position: 'relative',\n          overflow: 'hidden',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style,\n      ])\n\n      const innerStyle = computed(() => {\n        const size = unref(estimatedTotalSize)\n        const horizontal = unref(_isHorizontal)\n        return {\n          height: horizontal ? '100%' : `${size}px`,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width: horizontal ? `${size}px` : '100%',\n        }\n      })\n\n      const clientSize = computed(() =>\n        _isHorizontal.value ? props.width : props.height\n      )\n\n      // methods\n      const { onWheel } = useWheel(\n        {\n          atStartEdge: computed(() => states.value.scrollOffset <= 0),\n          atEndEdge: computed(\n            () => states.value.scrollOffset >= estimatedTotalSize.value\n          ),\n          layout: computed(() => props.layout),\n        },\n        (offset) => {\n          ;(\n            scrollbarRef.value as any as {\n              onMouseUp: () => void\n            }\n          ).onMouseUp?.()\n          scrollTo(\n            Math.min(\n              states.value.scrollOffset + offset,\n              estimatedTotalSize.value - (clientSize.value as number)\n            )\n          )\n        }\n      )\n\n      const emitEvents = () => {\n        const { total } = props\n\n        if (total! > 0) {\n          const [cacheStart, cacheEnd, visibleStart, visibleEnd] =\n            unref(itemsToRender)\n          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd)\n        }\n\n        const { scrollDir, scrollOffset, updateRequested } = unref(states)\n        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested)\n      }\n\n      const scrollVertically = (e: Event) => {\n        const { clientHeight, scrollHeight, scrollTop } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n        if (_states.scrollOffset === scrollTop) {\n          return\n        }\n\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollHorizontally = (e: Event) => {\n        const { clientWidth, scrollLeft, scrollWidth } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n\n        if (_states.scrollOffset === scrollLeft) {\n          return\n        }\n\n        const { direction } = props\n\n        let scrollOffset = scrollLeft\n\n        if (direction === RTL) {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG: {\n              scrollOffset = -scrollLeft\n              break\n            }\n            case RTL_OFFSET_POS_DESC: {\n              scrollOffset = scrollWidth - clientWidth - scrollLeft\n              break\n            }\n          }\n        }\n\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const onScroll = (e: Event) => {\n        unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e)\n        emitEvents()\n      }\n\n      const onScrollbarScroll = (distanceToGo: number, totalSteps: number) => {\n        const offset =\n          ((estimatedTotalSize.value - (clientSize.value as number)) /\n            totalSteps) *\n          distanceToGo\n        scrollTo(\n          Math.min(\n            estimatedTotalSize.value - (clientSize.value as number),\n            offset\n          )\n        )\n      }\n\n      const scrollTo = (offset: number) => {\n        offset = Math.max(offset, 0)\n\n        if (offset === unref(states).scrollOffset) {\n          return\n        }\n\n        states.value = {\n          ...unref(states),\n          scrollOffset: offset,\n          scrollDir: getScrollDir(unref(states).scrollOffset, offset),\n          updateRequested: true,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollToItem = (\n        idx: number,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const { scrollOffset } = unref(states)\n\n        idx = Math.max(0, Math.min(idx, props.total! - 1))\n        scrollTo(\n          getOffset(\n            props,\n            idx,\n            alignment,\n            scrollOffset,\n            unref(dynamicSizeCache)\n          )\n        )\n      }\n\n      const getItemStyle = (idx: number) => {\n        const { direction, itemSize, layout } = props\n\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && itemSize,\n          clearCache && layout,\n          clearCache && direction\n        )\n\n        let style: CSSProperties\n        if (hasOwn(itemStyleCache, String(idx))) {\n          style = itemStyleCache[idx]\n        } else {\n          const offset = getItemOffset(props, idx, unref(dynamicSizeCache))\n          const size = getItemSize(props, idx, unref(dynamicSizeCache))\n          const horizontal = unref(_isHorizontal)\n\n          const isRtl = direction === RTL\n          const offsetHorizontal = horizontal ? offset : 0\n          itemStyleCache[idx] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : `${offsetHorizontal}px`,\n            right: isRtl ? `${offsetHorizontal}px` : undefined,\n            top: !horizontal ? `${offset}px` : 0,\n            height: !horizontal ? `${size}px` : '100%',\n            width: horizontal ? `${size}px` : '100%',\n          }\n        }\n\n        return style\n      }\n\n      // TODO:\n      // perf optimization here, reset isScrolling with debounce.\n\n      const resetIsScrolling = () => {\n        // timer = null\n\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      const resetScrollTop = () => {\n        const window = windowRef.value\n        if (window) {\n          window.scrollTop = 0\n        }\n      }\n\n      // life cycles\n      onMounted(() => {\n        if (!isClient) return\n        const { initScrollOffset } = props\n        const windowElement = unref(windowRef)\n        if (isNumber(initScrollOffset) && windowElement) {\n          if (unref(_isHorizontal)) {\n            windowElement.scrollLeft = initScrollOffset\n          } else {\n            windowElement.scrollTop = initScrollOffset\n          }\n        }\n\n        emitEvents()\n      })\n\n      onUpdated(() => {\n        const { direction, layout } = props\n        const { scrollOffset, updateRequested } = unref(states)\n        const windowElement = unref(windowRef)\n\n        if (updateRequested && windowElement) {\n          if (layout === HORIZONTAL) {\n            if (direction === RTL) {\n              // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n              // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n              // So we need to determine which browser behavior we're dealing with, and mimic it.\n              switch (getRTLOffsetType()) {\n                case 'negative': {\n                  windowElement.scrollLeft = -scrollOffset\n                  break\n                }\n                case 'positive-ascending': {\n                  windowElement.scrollLeft = scrollOffset\n                  break\n                }\n                default: {\n                  const { clientWidth, scrollWidth } = windowElement\n                  windowElement.scrollLeft =\n                    scrollWidth - clientWidth - scrollOffset\n                  break\n                }\n              }\n            } else {\n              windowElement.scrollLeft = scrollOffset\n            }\n          } else {\n            windowElement.scrollTop = scrollOffset\n          }\n        }\n      })\n\n      const api = {\n        clientSize,\n        estimatedTotalSize,\n        windowStyle,\n        windowRef,\n        innerRef,\n        innerStyle,\n        itemsToRender,\n        scrollbarRef,\n        states,\n        getItemStyle,\n        onScroll,\n        onScrollbarScroll,\n        onWheel,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n      }\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n        states,\n      })\n\n      return api\n    },\n\n    render(ctx: any) {\n      const {\n        $slots,\n        className,\n        clientSize,\n        containerElement,\n        data,\n        getItemStyle,\n        innerElement,\n        itemsToRender,\n        innerStyle,\n        layout,\n        total,\n        onScroll,\n        onScrollbarScroll,\n        onWheel,\n        states,\n        useIsScrolling,\n        windowStyle,\n      } = ctx\n\n      const [start, end] = itemsToRender\n\n      const Container = resolveDynamicComponent(containerElement)\n      const Inner = resolveDynamicComponent(innerElement)\n\n      const children = [] as VNodeChild[]\n\n      if (total > 0) {\n        for (let i = start; i <= end; i++) {\n          children.push(\n            ($slots.default as Slot)?.({\n              data,\n              key: i,\n              index: i,\n              isScrolling: useIsScrolling ? states.isScrolling : undefined,\n              style: getItemStyle(i),\n            })\n          )\n        }\n      }\n\n      const InnerNode = [\n        h(\n          Inner as VNode,\n          {\n            style: innerStyle,\n            ref: 'innerRef',\n          },\n          !isString(Inner)\n            ? {\n                default: () => children,\n              }\n            : children\n        ),\n      ]\n\n      const scrollbar = h(Scrollbar, {\n        ref: 'scrollbarRef',\n        clientSize,\n        layout,\n        onScroll: onScrollbarScroll,\n        ratio: (clientSize * 100) / this.estimatedTotalSize,\n        scrollFrom:\n          states.scrollOffset / (this.estimatedTotalSize - clientSize),\n        total,\n      })\n\n      const listContainer = h(\n        Container as VNode,\n        {\n          class: className,\n          style: windowStyle,\n          onScroll,\n          onWheel,\n          ref: 'windowRef',\n          key: 0,\n        },\n        !isString(Container) ? { default: () => [InnerNode] } : [InnerNode]\n      )\n\n      return h(\n        'div',\n        {\n          key: 0,\n          class: [\n            'el-vl__wrapper',\n            states.scrollbarAlwaysOn ? 'always-on' : '',\n          ],\n        },\n        [listContainer, scrollbar]\n      )\n    },\n  })\n}\n\nexport default createList\n"]},"metadata":{},"sourceType":"module"}