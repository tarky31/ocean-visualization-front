{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, normalizeStyle, renderSlot, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { dividerProps } from './divider.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElDivider\",\n  props: dividerProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"divider\");\n    var dividerStyle = computed(function () {\n      return {\n        \"--el-border-style\": props.borderStyle\n      };\n    });\n    return {\n      ns: ns,\n      dividerStyle: dividerStyle\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.direction)]),\n    style: normalizeStyle(_ctx.dividerStyle)\n  }, [_ctx.$slots.default && _ctx.direction !== \"vertical\" ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.e(\"text\"), _ctx.ns.is(_ctx.contentPosition)])\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)], 6);\n}\n\nvar Divider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Divider as default };","map":{"version":3,"mappings":";;;;;;AAkBA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,WADuB;AAE7BC,SAAOC,YAFsB;AAI7BC,OAJ6B,iBAIvBF,KAJuB,EAIhB;AACX,QAAMG,KAAKC,aAAa,SAAb,CAAX;AAEA,QAAMC,eAAeC,SAAS,YAAM;AAClC,aAAO;AACL,6BAAqBN,MAAMO;AADtB,OAAP;AAC6B,KAFV,CAArB;AAMA,WAAO;AACLJ,YADK;AAELE;AAFK,KAAP;AAEE;AAfyB,CAAb,CAAlB;;;sBAjBEG,mBAOM,KAPNA,EAOM;AAPAC,WAAKC,gBAAGC,QAAGC,CAAH,EAAHF,EAAWC,QAAGE,CAAH,CAAKF,cAAL,CAAXD,EAOL;AAPmCI,WAAKC,eAAEJ,iBAAFI;AAOxC,GAPNP,EAAgD,CAEtCG,YAAOK,OAAP,IAAkBL,mBAAS,UAA3B,IAA2BM,aADnCT,mBAKM,KALNA,EAKM;AAAAU;AAHHT,WAAKC,gBAAGC,QAAGQ,CAAH,CAAI,MAAJ,CAAHT,EAAiBC,QAAGS,EAAH,CAAMT,oBAAN,CAAjBD;AAGF,GALNF,EAE+B,CAE7Ba,WAAaV,WAAbU,EAAa,SAAbA,CAF6B,CAF/Bb,EAIe,CAJfA,CACQ,IAGOc,gCAL+B,CAAhDd","names":["_sfc_main","defineComponent","name","props","dividerProps","setup","ns","useNamespace","dividerStyle","computed","borderStyle","_createElementBlock","class","_normalizeClass","_ctx","b","m","style","_normalizeStyle","default","openBlock","key","e","is","_renderSlot","createCommentVNode"],"sources":["../../../../../../packages/components/divider/src/divider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(direction)]\" :style=\"dividerStyle\">\n    <div\n      v-if=\"$slots.default && direction !== 'vertical'\"\n      :class=\"[ns.e('text'), ns.is(contentPosition)]\"\n    >\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport { dividerProps } from './divider'\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElDivider',\n  props: dividerProps,\n\n  setup(props) {\n    const ns = useNamespace('divider')\n\n    const dividerStyle = computed(() => {\n      return {\n        '--el-border-style': props.borderStyle,\n      } as CSSProperties\n    })\n\n    return {\n      ns,\n      dividerStyle,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}