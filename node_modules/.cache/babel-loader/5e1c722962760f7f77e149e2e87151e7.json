{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, inject, computed, openBlock, createElementBlock, createElementVNode, normalizeStyle, Fragment, createTextVNode, toDisplayString, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport { menuItemGroupProps } from './menu-item-group.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar COMPONENT_NAME = \"ElMenuItemGroup\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: menuItemGroupProps,\n  setup: function setup() {\n    var instance = getCurrentInstance();\n    var menu = inject(\"rootMenu\");\n    if (!menu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    var levelPadding = computed(function () {\n      if (menu.props.collapse) return 20;\n      var padding = 20;\n      var parent = instance.parent;\n\n      while (parent && parent.type.name !== \"ElMenu\") {\n        if (parent.type.name === \"ElSubMenu\") {\n          padding += 20;\n        }\n\n        parent = parent.parent;\n      }\n\n      return padding;\n    });\n    return {\n      levelPadding: levelPadding\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  class: \"el-menu-item-group\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"li\", _hoisted_1, [createElementVNode(\"div\", {\n    class: \"el-menu-item-group__title\",\n    style: normalizeStyle({\n      paddingLeft: \"\".concat(_ctx.levelPadding, \"px\")\n    })\n  }, [!_ctx.$slots.title ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString(_ctx.title), 1)], 2112)) : renderSlot(_ctx.$slots, \"title\", {\n    key: 1\n  })], 4), createElementVNode(\"ul\", null, [renderSlot(_ctx.$slots, \"default\")])]);\n}\n\nvar MenuItemGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { MenuItemGroup as default };","map":{"version":3,"mappings":";;;;;;AAsBA,IAAMA,iBAAiB,iBAAvB;;AAEA,IAAKC,YAAaC,gBAAa;AAC7BC,QAAMH,cADuB;AAG7BI,SAAOC,kBAHsB;AAK7BC,OAL6B,mBAKrB;AACN,QAAMC,WAAWC,oBAAjB;AACA,QAAMC,OAAOC,OAAqB,UAArB,CAAb;AACA,QAAI,CAACD,IAAL,EAAWE,WAAWX,cAAX,EAA2B,0BAA3B;AAEX,QAAMY,eAAeC,SAAS,YAAM;AAClC,UAAIJ,KAAKL,KAAL,CAAWU,QAAf,EAAyB,OAAO,EAAP;AACzB,UAAIC,UAAU,EAAd;AACA,UAAIC,SAAST,SAASS,MAAtB;;AACA,aAAOA,UAAUA,OAAOC,IAAP,CAAYd,IAAZ,KAAqB,QAAtC,EAAgD;AAC9C,YAAIa,OAAOC,IAAP,CAAYd,IAAZ,KAAqB,WAAzB,EAAsC;AACpCY,qBAAW,EAAX;AAAW;;AAEbC,iBAASA,OAAOA,MAAhB;AAAgB;;AAElB,aAAOD,OAAP;AAAO,KAVY,CAArB;AAaA,WAAO;AACLH;AADK,KAAP;AACE;AAxByB,CAAb,CAAlB;;;AAvBMM,SAAM;;;;sBAAVC,mBAWK,IAXLA,cAWK,CAVHC,mBAMM,KANNA,EAMM;AALJF,WAAM,2BAKF;AAJHG,WAAKC;AAAAA,6BAAoBC,iBAApBD;AAAAA;AAIF,GANNF,EAE4B,EAETG,YAAOC,sBAAxBL,mBAAqDM,QAArDN,EAAqDM;AAAAA;AAAAA,GAArDN,EAAqDM,iCAAnBF,UAAmB,GAAd,CAAc,EAArDJ,EAAuC,IAAvCA,KACAO,WAA4BH,WAA5BG,EAA4B,OAA5BA,EAA4B;AAAAC;AAAA,GAA5BD,CAH0B,CAF5BN,EAK8B,CAL9BA,CAUG,EAHHA,mBAEK,IAFLA,EAEK,IAFLA,EAEK,CADHM,WAAQH,WAARG,EAAQ,SAARA,CACG,CAFLN,CAGG,CAXLD;AASY","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","menuItemGroupProps","setup","instance","getCurrentInstance","menu","inject","throwError","levelPadding","computed","collapse","padding","parent","type","class","_createElementBlock","_createElementVNode","style","_normalizeStyle","_ctx","title","_Fragment","_renderSlot","key"],"sources":["../../../../../../packages/components/menu/src/menu-item-group.vue"],"sourcesContent":["<template>\n  <li class=\"el-menu-item-group\">\n    <div\n      class=\"el-menu-item-group__title\"\n      :style=\"{ paddingLeft: `${levelPadding}px` }\"\n    >\n      <template v-if=\"!$slots.title\">{{ title }}</template>\n      <slot v-else name=\"title\" />\n    </div>\n    <ul>\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance, inject } from 'vue'\nimport { throwError } from '@element-plus/utils'\nimport { menuItemGroupProps } from './menu-item-group'\n\nimport type { MenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItemGroup'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance()!\n    const menu = inject<MenuProvider>('rootMenu')\n    if (!menu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20\n      let padding = 20\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'ElMenu') {\n        if (parent.type.name === 'ElSubMenu') {\n          padding += 20\n        }\n        parent = parent.parent\n      }\n      return padding\n    })\n\n    return {\n      levelPadding,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}