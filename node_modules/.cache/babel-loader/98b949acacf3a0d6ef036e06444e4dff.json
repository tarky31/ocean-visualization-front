{"ast":null,"code":"import _defineProperty from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { isFunction, isString } from '@vue/shared';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _sfc_main$1 from './tree-node-content.mjs';\nimport { getNodeKey } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: _CollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: _sfc_main$1,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      default: function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"tree\");\n\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n        broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref(null);\n    var oldIndeterminate = ref(null);\n    var node$ = ref(null);\n    var dragEvents = inject(dragEventsKey);\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n\n    var childrenKey = tree.props[\"children\"] || \"children\";\n    watch(function () {\n      var children = props.node.data[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n\n    var getNodeClass = function getNodeClass(node) {\n      var nodeClassFunc = props.props.class;\n\n      if (!nodeClassFunc) {\n        return {};\n      }\n\n      var className;\n\n      if (isFunction(nodeClassFunc)) {\n        var data = node.data;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n\n      if (isString(className)) {\n        return _defineProperty({}, className, true);\n      } else {\n        return className;\n      }\n    };\n\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n\n    var handleClick = function handleClick(e) {\n      var store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n\n    var handleContextMenu = function handleContextMenu(event) {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n\n    var handleCheckChange = function handleCheckChange(value, ev) {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragStart({\n        event: event,\n        treeNode: props\n      });\n    };\n\n    var handleDragOver = function handleDragOver(event) {\n      event.preventDefault();\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragOver({\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n    };\n\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n\n    return {\n      ns: ns,\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass: getNodeClass,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd,\n      CaretRight: CaretRight\n    };\n  }\n});\n\nvar _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"];\nvar _hoisted_2 = [\"aria-expanded\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n\n  var _component_loading = resolveComponent(\"loading\");\n\n  var _component_node_content = resolveComponent(\"node-content\");\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    class: normalizeClass([_ctx.ns.b(\"node\"), _ctx.ns.is(\"expanded\", _ctx.expanded), _ctx.ns.is(\"current\", _ctx.node.isCurrent), _ctx.ns.is(\"hidden\", !_ctx.node.visible), _ctx.ns.is(\"focusable\", !_ctx.node.disabled), _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked), _ctx.getNodeClass(_ctx.node)]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onContextmenu: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleContextMenu && _ctx.handleContextMenu.apply(_ctx, arguments);\n    }),\n    onDragstart: _cache[3] || (_cache[3] = withModifiers(function () {\n      return _ctx.handleDragStart && _ctx.handleDragStart.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragover: _cache[4] || (_cache[4] = withModifiers(function () {\n      return _ctx.handleDragOver && _ctx.handleDragOver.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragend: _cache[5] || (_cache[5] = withModifiers(function () {\n      return _ctx.handleDragEnd && _ctx.handleDragEnd.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDrop: _cache[6] || (_cache[6] = withModifiers(function () {\n      return _ctx.handleDrop && _ctx.handleDrop.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n    style: normalizeStyle({\n      paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    })\n  }, [_ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass([_ctx.ns.be(\"node\", \"expand-icon\"), _ctx.ns.is(\"leaf\", _ctx.node.isLeaf), {\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    default: withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"])),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    class: normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n  }, {\n    default: withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 6), createVNode(_component_el_collapse_transition, null, {\n    default: withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          accordion: _ctx.accordion,\n          props: _ctx.props,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n      }), 128))], 10, _hoisted_2)), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, _hoisted_1)), [[vShow, _ctx.node.visible]]);\n}\n\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { ElTreeNode as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AA8GA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,YADuB;AAE7BC,cAAY;AAAAC,0BACVA,mBADU;AAEVC,0BAFU;AAEVC,iBACAA,WAHU;AAIVC,kBAJU;AAKVC;AALU,GAFiB;AAS7BC,SAAO;AACLC,UAAM;AACJC,YAAMC,IADF;AAEJC,eAAS;AAAA;AAAA;AAFL,KADD;AAKLJ,WAAO;AACLE,YAAMG,MADD;AAELD,eAAS;AAAA;AAAA;AAFJ,KALF;AASLE,eAAWC,OATN;AAULC,mBAAeC,QAVV;AAWLC,uBAAmBH,OAXd;AAYLI,kBAAc;AACZT,YAAMK,OADM;AAEZH,eAAS;AAFG;AAZT,GATsB;AA0B7BQ,SAAO,CAAC,aAAD,CA1BsB;AA2B7BC,OA3B6B,iBA2BvBb,KA3BuB,EA2BhBc,GA3BgB,EA2BX;AAChB,QAAMC,KAAKC,aAAa,MAAb,CAAX;;AACA,gCAA8BC,4BAA4BjB,KAA5B,CAA9B;AAAA,QAAQkB,iBAAR,yBAAQA,iBAAR;;AACA,QAAMC,OAAOC,OAAqB,UAArB,CAAb;AACA,QAAMC,WAAWC,IAAI,KAAJ,CAAjB;AACA,QAAMC,oBAAoBD,IAAI,KAAJ,CAA1B;AACA,QAAME,aAAaF,IAAa,IAAb,CAAnB;AACA,QAAMG,mBAAmBH,IAAa,IAAb,CAAzB;AACA,QAAMI,QAAQJ,IAA2B,IAA3B,CAAd;AACA,QAAMK,aAAaP,OAAOQ,aAAP,CAAnB;AACA,QAAMC,WAAWC,oBAAjB;AAEAC,YAAQ,cAAR,EAAwBF,QAAxB;;AACA,QAAI,CAACV,IAAL,EAAW;AACTa,gBAAU,MAAV,EAAkB,2BAAlB;AAAkB;;AAGpB,QAAIhC,MAAMC,IAAN,CAAWoB,QAAf,EAAyB;AACvBA,eAASY,KAAT,GAAiB,IAAjB;AACAV,wBAAkBU,KAAlB,GAA0B,IAA1B;AAA0B;;AAG5B,QAAMC,cAAcf,KAAKnB,KAAL,CAAW,UAAX,KAA0B,UAA9C;AACAmC,UACE,YAAM;AACJ,UAAMC,WAAWpC,MAAMC,IAAN,CAAWoC,IAAX,CAAgBH,WAAhB,CAAjB;AACA,aAAOE,+BAAgBA,QAAhB,CAAP;AAAuB,KAH3B,EAKE,YAAM;AACJpC,YAAMC,IAAN,CAAWqC,cAAX;AAAW,KANf;AAUAH,UACE;AAAA,aAAMnC,MAAMC,IAAN,CAAWsC,aAAjB;AAAA,KADF,EAEE,UAACC,GAAD,EAAS;AACPC,yBAAmBzC,MAAMC,IAAN,CAAWyC,OAA9B,EAAuCF,GAAvC;AAAuC,KAH3C;AAOAL,UACE;AAAA,aAAMnC,MAAMC,IAAN,CAAWyC,OAAjB;AAAA,KADF,EAEE,UAACF,GAAD,EAAS;AACPC,yBAAmBD,GAAnB,EAAwBxC,MAAMC,IAAN,CAAWsC,aAAnC;AAAmC,KAHvC;AAOAJ,UACE;AAAA,aAAMnC,MAAMC,IAAN,CAAWoB,QAAjB;AAAA,KADF,EAEE,UAACmB,GAAD,EAAS;AACPG,eAAS;AAAA,eAAOtB,SAASY,KAAT,GAAiBO,GAAxB;AAAA,OAAT;;AACA,UAAIA,GAAJ,EAAS;AACPjB,0BAAkBU,KAAlB,GAA0B,IAA1B;AAA0B;AAAA,KALhC;;AAUA,QAAMW,eAAa,SAAbA,YAAa,CAAC3C,IAAD,EAAqB;AACtC,aAAO4C,WAAe1B,KAAKnB,KAAL,CAAW8C,OAA1BD,EAAmC5C,KAAKoC,IAAxCQ,CAAP;AAA+C,KADjD;;AAIA,QAAME,eAAe,SAAfA,YAAe,CAAC9C,IAAD,EAAgB;AACnC,UAAM+C,gBAAgBhD,MAAMA,KAAN,CAAYiD,KAAlC;;AACA,UAAI,CAACD,aAAL,EAAoB;AAClB,eAAO,EAAP;AAAO;;AAET,UAAIE,SAAJ;;AACA,UAAIC,WAAWH,aAAX,CAAJ,EAA+B;AAC7B,YAAQX,IAAR,GAAiBpC,IAAjB,CAAQoC,IAAR;AACAa,oBAAYF,cAAcX,IAAd,EAAoBpC,IAApB,CAAZ;AAAgC,OAFlC,MAGO;AACLiD,oBAAYF,aAAZ;AAAY;;AAGd,UAAII,SAASF,SAAT,CAAJ,EAAyB;AACvB,mCAAUA,SAAV,EAAsB,IAAtB;AAAsB,OADxB,MAEO;AACL,eAAOA,SAAP;AAAO;AAAA,KAhBX;;AAoBA,QAAMT,qBAAqB,SAArBA,kBAAqB,CAACC,OAAD,EAAmBH,aAAnB,EAA8C;AACvE,UACEf,WAAWS,KAAX,KAAqBS,OAArB,IACAjB,iBAAiBQ,KAAjB,KAA2BM,aAF7B,EAGE;AACApB,aAAKL,GAAL,CAASuC,IAAT,CAAc,cAAd,EAA8BrD,MAAMC,IAAN,CAAWoC,IAAzC,EAA+CK,OAA/C,EAAwDH,aAAxD;AAAwD;;AAE1Df,iBAAWS,KAAX,GAAmBS,OAAnB;AACAjB,uBAAiBQ,KAAjB,GAAyBM,aAAzB;AAAyB,KAR3B;;AAWA,QAAMe,cAAc,SAAdA,WAAc,CAACC,CAAD,EAAmB;AACrC,UAAMC,QAAQrC,KAAKqC,KAAL,CAAWvB,KAAzB;AACAuB,YAAMC,cAAN,CAAqBzD,MAAMC,IAA3B;AACAkB,WAAKL,GAAL,CAASuC,IAAT,CACE,gBADF,EAEEG,MAAME,WAAN,GAAoBF,MAAME,WAAN,CAAkBrB,IAAtC,GAA6C,IAF/C,EAGEmB,MAAME,WAHR;AAKAvC,WAAKuC,WAAL,CAAiBzB,KAAjB,GAAyBjC,MAAMC,IAA/B;;AAEA,UAAIkB,KAAKnB,KAAL,CAAW2D,iBAAf,EAAkC;AAChCC;AAAA;;AAGF,UAAIzC,KAAKnB,KAAL,CAAW6D,gBAAX,IAA+B,CAAC7D,MAAMC,IAAN,CAAW6D,QAA/C,EAAyD;AACvDC,0BAAkB,IAAlB,EAAwB;AACtBC,kBAAQ;AAAEtB,qBAAS,CAAC1C,MAAMC,IAAN,CAAWyC;AAAvB;AADc,SAAxB;AACiC;;AAGnCvB,WAAKL,GAAL,CAASuC,IAAT,CAAc,YAAd,EAA4BrD,MAAMC,IAAN,CAAWoC,IAAvC,EAA6CrC,MAAMC,IAAnD,EAAyD4B,QAAzD,EAAmE0B,CAAnE;AAAmE,KAnBrE;;AAsBA,QAAMU,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAC1C,UAAI/C,KAAKU,QAAL,CAAcsC,KAAd,CAAoBnE,KAApB,CAA0B,mBAA1B,CAAJ,EAAoD;AAClDkE,cAAME,eAAN;AACAF,cAAMG,cAAN;AAAM;;AAERlD,WAAKL,GAAL,CAASuC,IAAT,CACE,kBADF,EAEEa,KAFF,EAGElE,MAAMC,IAAN,CAAWoC,IAHb,EAIErC,MAAMC,IAJR,EAKE4B,QALF;AAKE,KAVJ;;AAcA,QAAM+B,wBAAwB,SAAxBA,qBAAwB,GAAM;AAClC,UAAI5D,MAAMC,IAAN,CAAWqE,MAAf,EAAuB;;AACvB,UAAIjD,SAASY,KAAb,EAAoB;AAClBd,aAAKL,GAAL,CAASuC,IAAT,CAAc,eAAd,EAA+BrD,MAAMC,IAAN,CAAWoC,IAA1C,EAAgDrC,MAAMC,IAAtD,EAA4D4B,QAA5D;AACA7B,cAAMC,IAAN,CAAWsE,QAAX;AAAW,OAFb,MAGO;AACLvE,cAAMC,IAAN,CAAWuE,MAAX;AACA1D,YAAIuC,IAAJ,CAAS,aAAT,EAAwBrD,MAAMC,IAAN,CAAWoC,IAAnC,EAAyCrC,MAAMC,IAA/C,EAAqD4B,QAArD;AAAqD;AAAA,KAPzD;;AAWA,QAAMkC,oBAAoB,SAApBA,iBAAoB,CAAC9B,KAAD,EAAQwC,EAAR,EAAe;AACvCzE,YAAMC,IAAN,CAAWyE,UAAX,CAAsBD,GAAGT,MAAH,CAAUtB,OAAhC,EAAyC,CAACvB,KAAKnB,KAAL,CAAW2E,aAArD;AACAhC,eAAS,YAAM;AACb,YAAMa,QAAQrC,KAAKqC,KAAL,CAAWvB,KAAzB;AACAd,aAAKL,GAAL,CAASuC,IAAT,CAAc,OAAd,EAAuBrD,MAAMC,IAAN,CAAWoC,IAAlC,EAAwC;AACtCuC,wBAAcpB,MAAMqB,eAAN,EADwB;AAEtCC,uBAAatB,MAAMuB,cAAN,EAFyB;AAGtCC,4BAAkBxB,MAAMyB,mBAAN,EAHoB;AAItCC,2BAAiB1B,MAAM2B,kBAAN;AAJqB,SAAxC;AAIyB,OAN3B;AAM2B,KAR7B;;AAaA,QAAMC,wBAAwB,SAAxBA,qBAAwB,CAC5BC,QAD4B,EAE5BpF,IAF4B,EAG5BqF,SAH4B,EAIzB;AACHpE,wBAAkBjB,IAAlB;AACAkB,WAAKL,GAAL,CAASuC,IAAT,CAAc,aAAd,EAA6BgC,QAA7B,EAAuCpF,IAAvC,EAA6CqF,SAA7C;AAA6C,KAN/C;;AASA,QAAMC,kBAAkB,SAAlBA,eAAkB,CAACrB,KAAD,EAAsB;AAC5C,UAAI,CAAC/C,KAAKnB,KAAL,CAAWwF,SAAhB,EAA2B;AAC3B7D,iBAAW8D,iBAAX,CAA6B;AAAEvB,oBAAF;AAASwB,kBAAU1F;AAAnB,OAA7B;AAAgD,KAFlD;;AAKA,QAAM2F,iBAAiB,SAAjBA,cAAiB,CAACzB,KAAD,EAAsB;AAC3CA,YAAMG,cAAN;AACA,UAAI,CAAClD,KAAKnB,KAAL,CAAWwF,SAAhB,EAA2B;AAC3B7D,iBAAWiE,gBAAX,CAA4B;AAC1B1B,oBAD0B;AAE1BwB,kBAAU;AAAEG,eAAKnE,MAAMO,KAAb;AAAoBhC,gBAAMD,MAAMC;AAAhC;AAFgB,OAA5B;AAE4C,KAL9C;;AASA,QAAM6F,aAAa,SAAbA,UAAa,CAAC5B,KAAD,EAAsB;AACvCA,YAAMG,cAAN;AAAM,KADR;;AAIA,QAAM0B,gBAAgB,SAAhBA,aAAgB,CAAC7B,KAAD,EAAsB;AAC1C,UAAI,CAAC/C,KAAKnB,KAAL,CAAWwF,SAAhB,EAA2B;AAC3B7D,iBAAWqE,eAAX,CAA2B9B,KAA3B;AAA2B,KAF7B;;AAKA,WAAO;AACLnD,YADK;AAELW,kBAFK;AAGLP,gBAHK;AAILE,wBAJK;AAKLE,0CALK;AAMLC,4BANK;AAOLC,wCAPK;AAOLmB,kBACAA,YARK;AASLG,gCATK;AAULN,4CAVK;AAWLa,8BAXK;AAYLW,0CAZK;AAaLL,kDAbK;AAcLG,0CAdK;AAeLqB,kDAfK;AAgBLG,sCAhBK;AAiBLI,oCAjBK;AAkBLG,4BAlBK;AAmBLC,kCAnBK;AAoBLE;AApBK,KAAP;AAoBE;AAvOyB,CAAb,CAAlB;;;;;;;;;;;;;;;;;;sCA7GEC,mBAgFM,KAhFNA,EAgFM;AA9EJ5E,SAAI,OA8EA;AA7EH2B,WAAKkD,gBAAUC,QAAGC,CAAH,CAAI,MAAJ,CAAVF,EAA8BC,QAAGE,EAAH,CAAK,UAAL,EAAkBF,aAAlB,CAA9BD,EAAiEC,QAAGE,EAAH,CAAK,SAAL,EAAiBF,UAAKG,SAAtB,CAAjEJ,EAAyGC,QAAGE,EAAH,CAAK,QAAL,EAAK,CAAYF,UAAKI,OAAtB,CAAzGL,EAA+IC,QAAGE,EAAH,CAAK,WAAL,EAAK,CAAeF,UAAKtC,QAAzB,CAA/IqC,EAAyLC,QAAGE,EAAH,CAAK,SAAL,EAAK,CAAaF,UAAKtC,QAAlB,IAA8BsC,UAAK1D,OAAxC,CAAzLyD,EAAiPC,kBAAaA,SAAb,CAAjPD,EA6EF;AApEJM,UAAK,UAoED;AAnEJC,cAAS,IAmEL;AAlEH,qBAAeN,aAkEZ;AAjEH,qBAAeA,UAAKtC,QAiEjB;AAhEH,oBAAcsC,UAAK1D,OAgEhB;AA/DH8C,eAAWY,UAAKpG,KAAL,CAAWwF,SA+DnB;AA9DH,gBAAUY,gBAAWA,SAAX,CA8DP;AA7DHO,aAAKC;AAAA,aAAOR,2DAAP;AAAA,OAAkB,QAAlB,EA6DF;AA5DHS,mBAAWD;AAAA,aAAER,uEAAF;AAAA,MA4DR;AA3DHU,iBAASF;AAAA,aAAOR,mEAAP;AAAA,OAAsB,QAAtB,EA2DN;AA1DHW,gBAAQH;AAAA,aAAOR,iEAAP;AAAA,OAAqB,QAArB,EA0DL;AAzDHY,eAAOJ;AAAA,aAAOR,+DAAP;AAAA,OAAoB,QAApB,EAyDJ;AAxDHa,YAAIL;AAAA,aAAOR,yDAAP;AAAA,OAAiB,QAAjB;AAwDD,GAhFNF,EAwBwB,CAEtBgB,mBAgCM,KAhCNA,EAgCM;AA/BHjE,WAAKkD,eAAEC,QAAGe,EAAH,CAAK,MAAL,EAAK,SAAL,CAAFhB,CA+BF;AA9BHiB,WAAKC;AAAAA,mBAAkB,WAAKC,KAAL,GAAU,CAAV,IAAkBlB,UAAKpG,KAAL,CAAWuH,MAA7B,GAAmC;AAArDF;AA8BF,GAhCNH,EAE6D,CAGnDd,UAAKpG,KAAL,CAAWwH,IAAX,IAAmBpB,eAAnB,IAAmBqB,aAD3BC,YAYUC,kBAZVD,EAYU;AAAAE;AAVP3E,WAAKkD,gBAAcC,QAAGe,EAAH,CAAK,MAAL,EAAK,aAAL,CAAdhB,EAAsDC,QAAGE,EAAH,CAAK,MAAL,EAAcF,UAAK9B,MAAnB,CAAtD6B,EAAyE;iBAA4CC,UAAK9B,UAAU8B;AAA3D,KAAzED,EAUE;AAHPQ,aAAKkB,cAAOzB,0BAAPyB,EAA4B,QAA5BA;AAGE,GAZVH,EASoC;qBAElC;AAAA,aAA2D,eAA3DA,YAA2DI,wBAA3C1B,UAAKpG,KAAL,CAAWwH,IAAX,IAAmBpB,eAAwB0B,CAA3DJ,CAA2D,EAA3D;AAAA,MAFkC;AAECK;AAFD,GATpCL,0BACQ,oCAHmD,EAgBnDtB,kCADRsB,YAOEM,sBAPFN,EAOE;AAAAE;AALC,mBAAaxB,UAAK1D,OAKnB;AAJCH,mBAAe6D,UAAK7D,aAIrB;AAHCuB,cAAQ,EAAIsC,UAAKtC,QAGlB;AAFC6C,aAAKC,wCAAN,cAAM,EAAK,QAAL,EAEN;AADCqB,cAAQ7B;AACT,GAPFsB,EAMW,IANXA,EAMW,CANXA,EAMW,wDANXA,CACQ,IAKGQ,gCArBgD,EAwBnD9B,UAAK+B,OAAL,IAAKV,aADbC,YAKUC,kBALVD,EAKU;AAAAE;AAHP3E,WAAKkD,gBAAGC,QAAGe,EAAH,CAAK,MAAL,EAAK,cAAL,CAAHhB,EAAkCC,QAAGE,EAAH,CAAK,SAAL,CAAlCH;AAGE,GALVuB,EAE+C;qBAE7C;AAAA,aAAW,CAAXU,YAAWC,kBAAXD,CAAW,CAAX;AAAA,MAF6C;AAElCL;AAFkC,GAF/CL,eACQ,oCAxBmD,EA6B3DU,YAA6DE,uBAA7DF,EAA6D;AAA9CnI,UAAMmG,SAAwC;AAAjC,sBAAgBA;AAAiB,GAA7DgC,EAA4C,IAA5CA,EAA4C,CAA5CA,EAA4C,0BAA5CA,CA7B2D,CAF7DlB,IAFsB,EAmCtBkB,YAoByBG,iCApBzBH,EAoByB,IApBzBA,EAoByB;AAAAhI,qBAnBvB;AAAA,aAkBM,EAjBGgG,sBAiBH,IAjBwBA,sBAiBxB,GAjBwBoC,6BAD9BtC,mBAkBM,KAlBNA,EAkBM;AAAA0B;AAfH3E,eAAKkD,eAAEC,QAAGe,EAAH,CAAK,MAAL,EAAK,UAAL,CAAFhB,CAeF;AAdJM,cAAK,OAcD;AAbH,yBAAeL;AAaZ,OAlBNF,EAKkB,mBAEhBA,mBAUEuC,QAVFvC,EAUEuC,IAVFvC,EAUEuC,WATgBrC,UAAKsC,UASrBD,EAT+B,UAAxBE,KAAwB,EAAnB;4BADdjB,YAUEkB,uBAVFlB,EAUE;AARCE,eAAKxB,gBAAWuC,KAAX,CAQN;AAPC,4BAAgBvC,kBAOjB;AANC,iCAAqBA,sBAMtB;AALC,2BAAeA,iBAKhB;AAJCnG,gBAAM0I,KAIP;AAHCrI,qBAAW8F,cAGZ;AAFCpG,iBAAOoG,UAER;AADCyC,wBAAazC;AACd,SAVFsB,EASgB,IAThBA,EASgB,CAThBA,EASgB,wGAThBA;OAUEe,CAVFvC,MAFgB,EALlBA,iBAC8B,YACpBE,eADoB,CAiBxB,GAhBI8B,gCAgBJ,CAlBN;AAAA,KAmBuB;;AAAA,GApBzBE,CAnCsB,CAxBxBlC,6BACUE,UAAKI;AAAA","names":["_sfc_main","defineComponent","name","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","props","node","type","Node","default","Object","accordion","Boolean","renderContent","Function","renderAfterExpand","showCheckbox","emits","setup","ctx","ns","useNamespace","useNodeExpandEventBroadcast","broadcastExpanded","tree","inject","expanded","ref","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","dragEventsKey","instance","getCurrentInstance","provide","debugWarn","value","childrenKey","watch","children","data","updateChildren","indeterminate","val","handleSelectChange","checked","nextTick","getNodeKey","getNodeKeyUtil","nodeKey","getNodeClass","nodeClassFunc","class","className","isFunction","isString","emit","handleClick","e","store","setCurrentNode","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","disabled","handleCheckChange","target","handleContextMenu","event","vnode","stopPropagation","preventDefault","isLeaf","collapse","expand","ev","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","handleDrop","handleDragEnd","treeNodeDragEnd","CaretRight","_createElementBlock","_normalizeClass","_ctx","b","is","isCurrent","visible","role","tabindex","onClick","_cache","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","be","style","_normalizeStyle","level","indent","icon","openBlock","_createBlock","_component_el_icon","key","_withModifiers","_resolveDynamicComponent","_","_component_el_checkbox","onChange","createCommentVNode","loading","_createVNode","_component_loading","_component_node_content","_component_el_collapse_transition","withDirectives","_Fragment","childNodes","child","_component_el_tree_node","onNodeExpand"],"sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\"></component>\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  ref,\n  watch,\n  nextTick,\n  inject,\n  provide,\n} from 'vue'\nimport { isString, isFunction } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { TreeOptionProps, TreeNodeData, RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}