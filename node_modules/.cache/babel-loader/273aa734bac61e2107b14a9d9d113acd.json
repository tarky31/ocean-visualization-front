{"ast":null,"code":"import _slicedToArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { defineComponent, ref, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, toDisplayString, createVNode, withCtx, createTextVNode, createCommentVNode, createSlots, normalizeProps, guardReactiveProps, Fragment, renderList, createBlock } from 'vue';\nimport dayjs from 'dayjs';\nimport { ElButton, ElButtonGroup } from '../../button/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport DateTable from './date-table2.mjs';\nimport { calendarProps, calendarEmits } from './calendar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElCalendar\",\n  components: {\n    DateTable: DateTable,\n    ElButton: ElButton,\n    ElButtonGroup: ElButtonGroup\n  },\n  props: calendarProps,\n  emits: calendarEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var ns = useNamespace(\"calendar\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var selectedDay = ref();\n    var now = dayjs().locale(lang.value);\n    var prevMonthDayjs = computed(function () {\n      return date.value.subtract(1, \"month\").date(1);\n    });\n    var curMonthDatePrefix = computed(function () {\n      return dayjs(date.value).locale(lang.value).format(\"YYYY-MM\");\n    });\n    var nextMonthDayjs = computed(function () {\n      return date.value.add(1, \"month\").date(1);\n    });\n    var prevYearDayjs = computed(function () {\n      return date.value.subtract(1, \"year\").date(1);\n    });\n    var nextYearDayjs = computed(function () {\n      return date.value.add(1, \"year\").date(1);\n    });\n    var i18nDate = computed(function () {\n      var pickedMonth = \"el.datepicker.month\".concat(date.value.format(\"M\"));\n      return \"\".concat(date.value.year(), \" \").concat(t(\"el.datepicker.year\"), \" \").concat(t(pickedMonth));\n    });\n    var realSelectedDay = computed({\n      get: function get() {\n        if (!props.modelValue) return selectedDay.value;\n        return date.value;\n      },\n      set: function set(val) {\n        if (!val) return;\n        selectedDay.value = val;\n        var result = val.toDate();\n        emit(\"input\", result);\n        emit(\"update:modelValue\", result);\n      }\n    });\n    var date = computed(function () {\n      if (!props.modelValue) {\n        if (realSelectedDay.value) {\n          return realSelectedDay.value;\n        } else if (validatedRange.value.length) {\n          return validatedRange.value[0][0];\n        }\n\n        return now;\n      } else {\n        return dayjs(props.modelValue).locale(lang.value);\n      }\n    });\n\n    var calculateValidatedDateRange = function calculateValidatedDateRange(startDayjs, endDayjs) {\n      var firstDay = startDayjs.startOf(\"week\");\n      var lastDay = endDayjs.endOf(\"week\");\n      var firstMonth = firstDay.get(\"month\");\n      var lastMonth = lastDay.get(\"month\");\n\n      if (firstMonth === lastMonth) {\n        return [[firstDay, lastDay]];\n      } else if (firstMonth + 1 === lastMonth) {\n        var firstMonthLastDay = firstDay.endOf(\"month\");\n        var lastMonthFirstDay = lastDay.startOf(\"month\");\n        var isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, \"week\");\n        var lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n        return [[firstDay, firstMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n      } else if (firstMonth + 2 === lastMonth) {\n        var _firstMonthLastDay = firstDay.endOf(\"month\");\n\n        var secondMonthFirstDay = firstDay.add(1, \"month\").startOf(\"month\");\n        var secondMonthStartDay = _firstMonthLastDay.isSame(secondMonthFirstDay, \"week\") ? secondMonthFirstDay.add(1, \"week\") : secondMonthFirstDay;\n        var secondMonthLastDay = secondMonthStartDay.endOf(\"month\");\n\n        var _lastMonthFirstDay = lastDay.startOf(\"month\");\n\n        var _lastMonthStartDay = secondMonthLastDay.isSame(_lastMonthFirstDay, \"week\") ? _lastMonthFirstDay.add(1, \"week\") : _lastMonthFirstDay;\n\n        return [[firstDay, _firstMonthLastDay], [secondMonthStartDay.startOf(\"week\"), secondMonthLastDay], [_lastMonthStartDay.startOf(\"week\"), lastDay]];\n      } else {\n        debugWarn(\"ElCalendar\", \"start time and end time interval must not exceed two months\");\n        return [];\n      }\n    };\n\n    var validatedRange = computed(function () {\n      if (!props.range) return [];\n      var rangeArrDayjs = props.range.map(function (_) {\n        return dayjs(_).locale(lang.value);\n      });\n\n      var _rangeArrDayjs = _slicedToArray(rangeArrDayjs, 2),\n          startDayjs = _rangeArrDayjs[0],\n          endDayjs = _rangeArrDayjs[1];\n\n      if (startDayjs.isAfter(endDayjs)) {\n        debugWarn(\"ElCalendar\", \"end time should be greater than start time\");\n        return [];\n      }\n\n      if (startDayjs.isSame(endDayjs, \"month\")) {\n        return calculateValidatedDateRange(startDayjs, endDayjs);\n      } else {\n        if (startDayjs.add(1, \"month\").month() !== endDayjs.month()) {\n          debugWarn(\"ElCalendar\", \"start time and end time interval must not exceed two months\");\n          return [];\n        }\n\n        return calculateValidatedDateRange(startDayjs, endDayjs);\n      }\n    });\n\n    var pickDay = function pickDay(day) {\n      realSelectedDay.value = day;\n    };\n\n    var selectDate = function selectDate(type) {\n      var day;\n\n      if (type === \"prev-month\") {\n        day = prevMonthDayjs.value;\n      } else if (type === \"next-month\") {\n        day = nextMonthDayjs.value;\n      } else if (type === \"prev-year\") {\n        day = prevYearDayjs.value;\n      } else if (type === \"next-year\") {\n        day = nextYearDayjs.value;\n      } else {\n        day = now;\n      }\n\n      if (day.isSame(date.value, \"day\")) return;\n      pickDay(day);\n    };\n\n    return {\n      selectedDay: selectedDay,\n      curMonthDatePrefix: curMonthDatePrefix,\n      i18nDate: i18nDate,\n      realSelectedDay: realSelectedDay,\n      date: date,\n      validatedRange: validatedRange,\n      pickDay: pickDay,\n      selectDate: selectDate,\n      t: t,\n      ns: ns\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = resolveComponent(\"el-button\");\n\n  var _component_el_button_group = resolveComponent(\"el-button-group\");\n\n  var _component_date_table = resolveComponent(\"date-table\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"header\"))\n  }, [renderSlot(_ctx.$slots, \"header\", {\n    date: _ctx.i18nDate\n  }, function () {\n    return [createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"title\"))\n    }, toDisplayString(_ctx.i18nDate), 3), _ctx.validatedRange.length === 0 ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"button-group\"))\n    }, [createVNode(_component_el_button_group, null, {\n      default: withCtx(function () {\n        return [createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.selectDate(\"prev-month\");\n          })\n        }, {\n          default: withCtx(function () {\n            return [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.prevMonth\")), 1)];\n          }),\n          _: 1\n        }), createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.selectDate(\"today\");\n          })\n        }, {\n          default: withCtx(function () {\n            return [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.today\")), 1)];\n          }),\n          _: 1\n        }), createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: _cache[2] || (_cache[2] = function ($event) {\n            return _ctx.selectDate(\"next-month\");\n          })\n        }, {\n          default: withCtx(function () {\n            return [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.nextMonth\")), 1)];\n          }),\n          _: 1\n        })];\n      }),\n      _: 1\n    })], 2)) : createCommentVNode(\"v-if\", true)];\n  })], 2), _ctx.validatedRange.length === 0 ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"body\"))\n  }, [createVNode(_component_date_table, {\n    date: _ctx.date,\n    \"selected-day\": _ctx.realSelectedDay,\n    onPick: _ctx.pickDay\n  }, createSlots({\n    _: 2\n  }, [_ctx.$slots.dateCell ? {\n    name: \"dateCell\",\n    fn: withCtx(function (data) {\n      return [renderSlot(_ctx.$slots, \"dateCell\", normalizeProps(guardReactiveProps(data)))];\n    })\n  } : void 0]), 1032, [\"date\", \"selected-day\", \"onPick\"])], 2)) : (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"body\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.validatedRange, function (range_, index) {\n    return openBlock(), createBlock(_component_date_table, {\n      key: index,\n      date: range_[0],\n      \"selected-day\": _ctx.realSelectedDay,\n      range: range_,\n      \"hide-header\": index !== 0,\n      onPick: _ctx.pickDay\n    }, createSlots({\n      _: 2\n    }, [_ctx.$slots.dateCell ? {\n      name: \"dateCell\",\n      fn: withCtx(function (data) {\n        return [renderSlot(_ctx.$slots, \"dateCell\", normalizeProps(guardReactiveProps(data)))];\n      })\n    } : void 0]), 1032, [\"date\", \"selected-day\", \"range\", \"hide-header\", \"onPick\"]);\n  }), 128))], 2))], 2);\n}\n\nvar Calendar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Calendar as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","DateTable","ElButton","ElButtonGroup","props","calendarProps","emits","calendarEmits","setup","emit","ns","useNamespace","useLocale","t","lang","selectedDay","ref","now","dayjs","locale","value","prevMonthDayjs","computed","date","subtract","curMonthDatePrefix","format","nextMonthDayjs","add","prevYearDayjs","nextYearDayjs","i18nDate","pickedMonth","year","realSelectedDay","get","modelValue","set","val","result","toDate","validatedRange","length","calculateValidatedDateRange","startDayjs","endDayjs","firstDay","startOf","lastDay","endOf","firstMonth","lastMonth","firstMonthLastDay","lastMonthFirstDay","isSameWeek","isSame","lastMonthStartDay","secondMonthFirstDay","secondMonthStartDay","secondMonthLastDay","debugWarn","range","rangeArrDayjs","map","_","isAfter","month","pickDay","day","selectDate","type","_createElementBlock","class","_normalizeClass","_ctx","b","_createElementVNode","e","_renderSlot","toDisplayString","openBlock","key","_createVNode","_component_el_button_group","default","_component_el_button","size","onClick","_cache","_component_date_table","onPick","createSlots","dateCell","fn","data","normalizeProps","_Fragment","range_","index","_createBlock"],"sources":["../../../../../../packages/components/calendar/src/calendar.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('header')\">\n      <slot name=\"header\" :date=\"i18nDate\">\n        <div :class=\"ns.e('title')\">{{ i18nDate }}</div>\n        <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('button-group')\">\n          <el-button-group>\n            <el-button size=\"small\" @click=\"selectDate('prev-month')\">\n              {{ t('el.datepicker.prevMonth') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('today')\">\n              {{ t('el.datepicker.today') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('next-month')\">\n              {{ t('el.datepicker.nextMonth') }}\n            </el-button>\n          </el-button-group>\n        </div>\n      </slot>\n    </div>\n    <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('body')\">\n      <date-table :date=\"date\" :selected-day=\"realSelectedDay\" @pick=\"pickDay\">\n        <template v-if=\"$slots.dateCell\" #dateCell=\"data\">\n          <slot name=\"dateCell\" v-bind=\"data\"></slot>\n        </template>\n      </date-table>\n    </div>\n    <div v-else :class=\"ns.e('body')\">\n      <date-table\n        v-for=\"(range_, index) in validatedRange\"\n        :key=\"index\"\n        :date=\"range_[0]\"\n        :selected-day=\"realSelectedDay\"\n        :range=\"range_\"\n        :hide-header=\"index !== 0\"\n        @pick=\"pickDay\"\n      >\n        <template v-if=\"$slots.dateCell\" #dateCell=\"data\">\n          <slot name=\"dateCell\" v-bind=\"data\"></slot>\n        </template>\n      </date-table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent } from 'vue'\nimport dayjs from 'dayjs'\nimport { ElButton, ElButtonGroup } from '@element-plus/components/button'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport DateTable from './date-table.vue'\nimport { calendarProps, calendarEmits } from './calendar'\n\nimport type { ComputedRef } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\ntype DateType =\n  | 'prev-month'\n  | 'next-month'\n  | 'prev-year'\n  | 'next-year'\n  | 'today'\n\nexport default defineComponent({\n  name: 'ElCalendar',\n\n  components: {\n    DateTable,\n    ElButton,\n    ElButtonGroup,\n  },\n\n  props: calendarProps,\n  emits: calendarEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('calendar')\n\n    const { t, lang } = useLocale()\n    const selectedDay = ref<Dayjs>()\n    const now = dayjs().locale(lang.value)\n\n    const prevMonthDayjs = computed(() => {\n      return date.value.subtract(1, 'month').date(1)\n    })\n    const curMonthDatePrefix = computed(() => {\n      return dayjs(date.value).locale(lang.value).format('YYYY-MM')\n    })\n\n    const nextMonthDayjs = computed(() => {\n      return date.value.add(1, 'month').date(1)\n    })\n\n    const prevYearDayjs = computed(() => {\n      return date.value.subtract(1, 'year').date(1)\n    })\n\n    const nextYearDayjs = computed(() => {\n      return date.value.add(1, 'year').date(1)\n    })\n\n    const i18nDate = computed(() => {\n      const pickedMonth = `el.datepicker.month${date.value.format('M')}`\n      return `${date.value.year()} ${t('el.datepicker.year')} ${t(pickedMonth)}`\n    })\n\n    const realSelectedDay = computed<Dayjs | undefined>({\n      get() {\n        if (!props.modelValue) return selectedDay.value\n        return date.value\n      },\n      set(val) {\n        if (!val) return\n        selectedDay.value = val\n        const result = val.toDate()\n\n        emit('input', result)\n        emit('update:modelValue', result)\n      },\n    })\n\n    const date: ComputedRef<Dayjs> = computed(() => {\n      if (!props.modelValue) {\n        if (realSelectedDay.value) {\n          return realSelectedDay.value\n        } else if (validatedRange.value.length) {\n          return validatedRange.value[0][0]\n        }\n        return now\n      } else {\n        return dayjs(props.modelValue).locale(lang.value)\n      }\n    })\n\n    // https://github.com/element-plus/element-plus/issues/3155\n    // Calculate the validate date range according to the start and end dates\n    const calculateValidatedDateRange = (\n      startDayjs: Dayjs,\n      endDayjs: Dayjs\n    ): [Dayjs, Dayjs][] => {\n      const firstDay = startDayjs.startOf('week')\n      const lastDay = endDayjs.endOf('week')\n      const firstMonth = firstDay.get('month')\n      const lastMonth = lastDay.get('month')\n\n      // Current mouth\n      if (firstMonth === lastMonth) {\n        return [[firstDay, lastDay]]\n      }\n      // Two adjacent months\n      else if (firstMonth + 1 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf('month')\n        const lastMonthFirstDay = lastDay.startOf('month')\n\n        // Whether the last day of the first month and the first day of the last month is in the same week\n        const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, 'week')\n        const lastMonthStartDay = isSameWeek\n          ? lastMonthFirstDay.add(1, 'week')\n          : lastMonthFirstDay\n\n        return [\n          [firstDay, firstMonthLastDay],\n          [lastMonthStartDay.startOf('week'), lastDay],\n        ]\n      }\n      // Three consecutive months (compatible: 2021-01-30 to 2021-02-28)\n      else if (firstMonth + 2 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf('month')\n        const secondMonthFirstDay = firstDay.add(1, 'month').startOf('month')\n\n        // Whether the last day of the first month and the second month is in the same week\n        const secondMonthStartDay = firstMonthLastDay.isSame(\n          secondMonthFirstDay,\n          'week'\n        )\n          ? secondMonthFirstDay.add(1, 'week')\n          : secondMonthFirstDay\n\n        const secondMonthLastDay = secondMonthStartDay.endOf('month')\n        const lastMonthFirstDay = lastDay.startOf('month')\n\n        // Whether the last day of the second month and the last day of the last month is in the same week\n        const lastMonthStartDay = secondMonthLastDay.isSame(\n          lastMonthFirstDay,\n          'week'\n        )\n          ? lastMonthFirstDay.add(1, 'week')\n          : lastMonthFirstDay\n\n        return [\n          [firstDay, firstMonthLastDay],\n          [secondMonthStartDay.startOf('week'), secondMonthLastDay],\n          [lastMonthStartDay.startOf('week'), lastDay],\n        ]\n      }\n      // Other cases\n      else {\n        debugWarn(\n          'ElCalendar',\n          'start time and end time interval must not exceed two months'\n        )\n        return []\n      }\n    }\n\n    // if range is valid, we get a two-digit array\n    const validatedRange = computed(() => {\n      if (!props.range) return []\n      const rangeArrDayjs = props.range.map((_) => dayjs(_).locale(lang.value))\n      const [startDayjs, endDayjs] = rangeArrDayjs\n      if (startDayjs.isAfter(endDayjs)) {\n        debugWarn('ElCalendar', 'end time should be greater than start time')\n        return []\n      }\n      if (startDayjs.isSame(endDayjs, 'month')) {\n        // same month\n        return calculateValidatedDateRange(startDayjs, endDayjs)\n      } else {\n        // two months\n        if (startDayjs.add(1, 'month').month() !== endDayjs.month()) {\n          debugWarn(\n            'ElCalendar',\n            'start time and end time interval must not exceed two months'\n          )\n          return []\n        }\n        return calculateValidatedDateRange(startDayjs, endDayjs)\n      }\n    })\n\n    const pickDay = (day: Dayjs) => {\n      realSelectedDay.value = day\n    }\n\n    const selectDate = (type: DateType) => {\n      let day: Dayjs\n      if (type === 'prev-month') {\n        day = prevMonthDayjs.value\n      } else if (type === 'next-month') {\n        day = nextMonthDayjs.value\n      } else if (type === 'prev-year') {\n        day = prevYearDayjs.value\n      } else if (type === 'next-year') {\n        day = nextYearDayjs.value\n      } else {\n        day = now\n      }\n\n      if (day.isSame(date.value, 'day')) return\n      pickDay(day)\n    }\n\n    return {\n      selectedDay,\n      curMonthDatePrefix,\n      i18nDate,\n      realSelectedDay,\n      date,\n      validatedRange,\n      pickDay,\n      selectDate,\n      t,\n\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}