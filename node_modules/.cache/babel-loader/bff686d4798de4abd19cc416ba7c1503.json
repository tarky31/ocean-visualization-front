{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { ref, computed, defineComponent, watch, reactive, toRefs, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { elFormKey } from '../../../tokens/form.mjs';\n\nfunction useFormLabelWidth() {\n  var potentialLabelWidthArr = ref([]);\n  var autoLabelWidth = computed(function () {\n    if (!potentialLabelWidthArr.value.length) return \"0\";\n    var max = Math.max.apply(Math, _toConsumableArray(potentialLabelWidthArr.value));\n    return max ? \"\".concat(max, \"px\") : \"\";\n  });\n\n  function getLabelWidthIndex(width) {\n    var index = potentialLabelWidthArr.value.indexOf(width);\n\n    if (index === -1) {\n      debugWarn(\"Form\", \"unexpected width \".concat(width));\n    }\n\n    return index;\n  }\n\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      var index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n\n  function deregisterLabelWidth(val) {\n    var index = getLabelWidthIndex(val);\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1);\n  }\n\n  return {\n    autoLabelWidth: autoLabelWidth,\n    registerLabelWidth: registerLabelWidth,\n    deregisterLabelWidth: deregisterLabelWidth\n  };\n}\n\nvar _sfc_main = defineComponent({\n  name: \"ElForm\",\n  props: {\n    model: Object,\n    rules: Object,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: \"\"\n    },\n    labelSuffix: {\n      type: String,\n      default: \"\"\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true\n    },\n    size: String,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false\n    },\n    scrollToError: Boolean\n  },\n  emits: [\"validate\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var fields = [];\n    watch(function () {\n      return props.rules;\n    }, function () {\n      fields.forEach(function (field) {\n        field.evaluateValidationEnabled();\n      });\n\n      if (props.validateOnRuleChange) {\n        validate(function () {\n          return {};\n        });\n      }\n    });\n    var formSize = useSize();\n    var prefix = \"el-form\";\n    var formKls = computed(function () {\n      var labelPosition = props.labelPosition,\n          inline = props.inline;\n      return [prefix, \"\".concat(prefix, \"--\").concat(formSize.value), labelPosition ? \"\".concat(prefix, \"--label-\").concat(labelPosition) : \"\", inline ? \"\".concat(prefix, \"--inline\") : \"\"];\n    });\n\n    var addField = function addField(field) {\n      if (field) {\n        fields.push(field);\n      }\n    };\n\n    var removeField = function removeField(field) {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    };\n\n    var resetFields = function resetFields() {\n      if (!props.model) {\n        debugWarn(\"Form\", \"model is required for resetFields to work.\");\n        return;\n      }\n\n      fields.forEach(function (field) {\n        field.resetField();\n      });\n    };\n\n    var clearValidate = function clearValidate() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fds = props2.length ? typeof props2 === \"string\" ? fields.filter(function (field) {\n        return props2 === field.prop;\n      }) : fields.filter(function (field) {\n        return props2.indexOf(field.prop) > -1;\n      }) : fields;\n      fds.forEach(function (field) {\n        field.clearValidate();\n      });\n    };\n\n    var validate = function validate(callback) {\n      if (!props.model) {\n        debugWarn(\"Form\", \"model is required for validate to work!\");\n        return;\n      }\n\n      var promise;\n\n      if (typeof callback !== \"function\") {\n        promise = new Promise(function (resolve, reject) {\n          callback = function callback(valid2, invalidFields2) {\n            if (valid2) {\n              resolve(true);\n            } else {\n              reject(invalidFields2);\n            }\n          };\n        });\n      }\n\n      if (fields.length === 0) {\n        callback(true);\n      }\n\n      var valid = true;\n      var count = 0;\n      var invalidFields = {};\n      var firstInvalidFields;\n\n      var _iterator = _createForOfIteratorHelper(fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var field = _step.value;\n          field.validate(\"\", function (message, field2) {\n            if (message) {\n              valid = false;\n              firstInvalidFields || (firstInvalidFields = field2);\n            }\n\n            invalidFields = _objectSpread(_objectSpread({}, invalidFields), field2);\n\n            if (++count === fields.length) {\n              callback(valid, invalidFields);\n            }\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!valid && props.scrollToError) {\n        scrollToField(Object.keys(firstInvalidFields)[0]);\n      }\n\n      return promise;\n    };\n\n    var validateField = function validateField(props2, cb) {\n      props2 = [].concat(props2);\n      var fds = fields.filter(function (field) {\n        return props2.indexOf(field.prop) !== -1;\n      });\n\n      if (!fields.length) {\n        debugWarn(\"Form\", \"please pass correct props!\");\n        return;\n      }\n\n      fds.forEach(function (field) {\n        field.validate(\"\", cb);\n      });\n    };\n\n    var scrollToField = function scrollToField(prop) {\n      fields.forEach(function (item) {\n        var _a, _b;\n\n        if (item.prop === prop) {\n          (_b = (_a = item.$el).scrollIntoView) == null ? void 0 : _b.call(_a);\n        }\n      });\n    };\n\n    var elForm = reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      resetFields: resetFields,\n      clearValidate: clearValidate,\n      validateField: validateField,\n      emit: emit,\n      addField: addField,\n      removeField: removeField\n    }, useFormLabelWidth()));\n    provide(elFormKey, elForm);\n    return {\n      formKls: formKls,\n      validate: validate,\n      resetFields: resetFields,\n      clearValidate: clearValidate,\n      validateField: validateField,\n      scrollToField: scrollToField\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"form\", {\n    class: normalizeClass(_ctx.formKls)\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\n\nvar Form = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Form as default };","map":{"version":3,"mappings":"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","names":["potentialLabelWidthArr","ref","autoLabelWidth","computed","value","length","max","Math","width","index","indexOf","debugWarn","val","oldVal","getLabelWidthIndex","splice","push","registerLabelWidth","deregisterLabelWidth","_sfc_main","defineComponent","name","props","model","Object","rules","labelPosition","String","labelWidth","type","Number","default","labelSuffix","inline","Boolean","inlineMessage","statusIcon","showMessage","size","disabled","validateOnRuleChange","hideRequiredAsterisk","scrollToError","emits","setup","emit","fields","watch","forEach","field","evaluateValidationEnabled","validate","formSize","useSize","prefix","formKls","addField","removeField","prop","resetFields","resetField","clearValidate","props2","fds","filter","callback","promise","Promise","resolve","reject","valid2","invalidFields2","valid","count","invalidFields","firstInvalidFields","message","field2","scrollToField","keys","validateField","cb","concat","item","_a","_b","toRefs","useFormLabelWidth","provide","$setup","class","renderSlot"],"sources":["../../../../../../packages/components/form/src/form.vue"],"sourcesContent":["<template>\n  <form :class=\"formKls\">\n    <slot></slot>\n  </form>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { elFormKey } from '@element-plus/tokens'\nimport { debugWarn } from '@element-plus/utils'\nimport { useSize } from '@element-plus/hooks'\nimport type { ValidateFieldsError } from 'async-validator'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { FormRulesMap } from './form.type'\nimport type {\n  ElFormItemContext as FormItemCtx,\n  ValidateFieldCallback,\n} from '@element-plus/tokens'\n\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([])\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return '0'\n    const max = Math.max(...potentialLabelWidthArr.value)\n    return max ? `${max}px` : ''\n  })\n\n  function getLabelWidthIndex(width: number) {\n    const index = potentialLabelWidthArr.value.indexOf(width)\n    if (index === -1) {\n      debugWarn('Form', `unexpected width ${width}`)\n    }\n    return index\n  }\n\n  function registerLabelWidth(val: number, oldVal: number) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal)\n      potentialLabelWidthArr.value.splice(index, 1, val)\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val)\n    }\n  }\n\n  function deregisterLabelWidth(val: number) {\n    const index = getLabelWidthIndex(val)\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1)\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth,\n  }\n}\n\nexport interface Callback {\n  (isValid?: boolean, invalidFields?: ValidateFieldsError): void\n}\n\nexport default defineComponent({\n  name: 'ElForm',\n  props: {\n    model: Object,\n    rules: Object as PropType<FormRulesMap>,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: '',\n    },\n    labelSuffix: {\n      type: String,\n      default: '',\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true,\n    },\n    size: String as PropType<ComponentSize>,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true,\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false,\n    },\n    scrollToError: Boolean,\n  },\n  emits: ['validate'],\n  setup(props, { emit }) {\n    const fields: FormItemCtx[] = []\n\n    watch(\n      () => props.rules,\n      () => {\n        fields.forEach((field) => {\n          field.evaluateValidationEnabled()\n        })\n\n        if (props.validateOnRuleChange) {\n          validate(() => ({}))\n        }\n      }\n    )\n\n    const formSize = useSize()\n    const prefix = 'el-form'\n    const formKls = computed(() => {\n      const { labelPosition, inline } = props\n      return [\n        prefix,\n        `${prefix}--${formSize.value}`,\n        labelPosition ? `${prefix}--label-${labelPosition}` : '',\n        inline ? `${prefix}--inline` : '',\n      ]\n    })\n\n    const addField = (field: FormItemCtx) => {\n      if (field) {\n        fields.push(field)\n      }\n    }\n\n    const removeField = (field: FormItemCtx) => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1)\n      }\n    }\n\n    const resetFields = () => {\n      if (!props.model) {\n        debugWarn('Form', 'model is required for resetFields to work.')\n        return\n      }\n      fields.forEach((field) => {\n        field.resetField()\n      })\n    }\n\n    const clearValidate = (props: string | string[] = []) => {\n      const fds = props.length\n        ? typeof props === 'string'\n          ? fields.filter((field) => props === field.prop)\n          : fields.filter((field) => props.indexOf(field.prop) > -1)\n        : fields\n      fds.forEach((field) => {\n        field.clearValidate()\n      })\n    }\n\n    const validate = (callback?: Callback) => {\n      if (!props.model) {\n        debugWarn('Form', 'model is required for validate to work!')\n        return\n      }\n\n      let promise: Promise<boolean> | undefined\n      // if no callback, return promise\n      if (typeof callback !== 'function') {\n        promise = new Promise((resolve, reject) => {\n          callback = function (valid, invalidFields) {\n            if (valid) {\n              resolve(true)\n            } else {\n              reject(invalidFields)\n            }\n          }\n        })\n      }\n\n      if (fields.length === 0) {\n        callback(true)\n      }\n      let valid = true\n      let count = 0\n      let invalidFields = {}\n      let firstInvalidFields\n      for (const field of fields) {\n        field.validate('', (message, field) => {\n          if (message) {\n            valid = false\n            firstInvalidFields || (firstInvalidFields = field)\n          }\n          invalidFields = { ...invalidFields, ...field }\n          if (++count === fields.length) {\n            callback(valid, invalidFields)\n          }\n        })\n      }\n      if (!valid && props.scrollToError) {\n        scrollToField(Object.keys(firstInvalidFields)[0])\n      }\n      return promise\n    }\n\n    const validateField = (\n      props: string | string[],\n      cb: ValidateFieldCallback\n    ) => {\n      props = [].concat(props)\n      const fds = fields.filter((field) => props.indexOf(field.prop) !== -1)\n      if (!fields.length) {\n        debugWarn('Form', 'please pass correct props!')\n        return\n      }\n\n      fds.forEach((field) => {\n        field.validate('', cb)\n      })\n    }\n\n    const scrollToField = (prop: string) => {\n      fields.forEach((item) => {\n        if (item.prop === prop) {\n          item.$el.scrollIntoView?.()\n        }\n      })\n    }\n\n    const elForm = reactive({\n      ...toRefs(props),\n      resetFields,\n      clearValidate,\n      validateField,\n      emit,\n      addField,\n      removeField,\n      ...useFormLabelWidth(),\n    })\n\n    provide(elFormKey, elForm)\n\n    return {\n      formKls,\n      validate, // export\n      resetFields,\n      clearValidate,\n      validateField,\n      scrollToField,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}