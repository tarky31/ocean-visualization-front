{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nvar elFormKey = Symbol(\"elForm\");\nvar elFormItemKey = Symbol(\"elFormItem\");\nexport { elFormItemKey, elFormKey };","map":{"version":3,"mappings":";;;AAAY,IAACA,SAAS,GAAGC,MAAM,CAAC,QAAD,CAAnB;AACA,IAACC,aAAa,GAAGD,MAAM,CAAC,YAAD,CAAvB","names":["elFormKey","Symbol","elFormItemKey"],"sources":["../../../../packages/tokens/form.ts"],"sourcesContent":["import type { InjectionKey } from 'vue'\nimport type { ValidateFieldsError } from 'async-validator'\nimport type { ComponentSize } from '@element-plus/constants'\n\nexport interface ElFormContext {\n  registerLabelWidth(width: number, oldWidth: number): void\n  deregisterLabelWidth(width: number): void\n  autoLabelWidth: string | undefined\n  emit: (evt: string, ...args: any[]) => void\n  addField: (field: ElFormItemContext) => void\n  removeField: (field: ElFormItemContext) => void\n  resetFields: () => void\n  clearValidate: (props: string | string[]) => void\n  validateField: (props: string | string[], cb: ValidateFieldCallback) => void\n  labelSuffix: string\n  inline?: boolean\n  inlineMessage?: boolean\n  model?: Record<string, unknown>\n  size?: ComponentSize\n  showMessage?: boolean\n  labelPosition?: string\n  labelWidth?: string | number\n  rules?: Record<string, unknown>\n  statusIcon?: boolean\n  hideRequiredAsterisk?: boolean\n  disabled?: boolean\n}\n\nexport interface ValidateFieldCallback {\n  (isValid?: string, invalidFields?: ValidateFieldsError): void\n}\n\nexport interface ElFormItemContext {\n  prop?: string\n  size?: ComponentSize\n  validateState: string\n  $el: HTMLDivElement\n  validate(trigger: string, callback?: ValidateFieldCallback): void\n  updateComputedLabelWidth(width: number): void\n  evaluateValidationEnabled(): void\n  resetField(): void\n  clearValidate(): void\n}\n\nexport const elFormKey: InjectionKey<ElFormContext> = Symbol('elForm')\nexport const elFormItemKey: InjectionKey<ElFormItemContext> =\n  Symbol('elFormItem')\n"]},"metadata":{},"sourceType":"module"}