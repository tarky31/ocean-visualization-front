{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, inject, ref, computed, h, withCtx, renderSlot, withKeys, withModifiers } from 'vue';\nimport { get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport '../../../hooks/index.mjs';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElSelectDropdown\",\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number\n  },\n  setup: function setup(props) {\n    var select = inject(selectV2InjectionKey);\n    var ns = useNamespace(\"select\");\n    var cachedHeights = ref([]);\n    var listRef = ref(null);\n    var isSized = computed(function () {\n      return isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n\n      return arr && arr.some(function (item) {\n        return get(item, valueKey) === get(target, valueKey);\n      });\n    };\n\n    var isEqual = function isEqual(selected, target) {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      if (select.props.multiple) {\n        return contains(modelValue, target.value);\n      }\n\n      return isEqual(modelValue, target.value);\n    };\n\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n          disabled = _select$props.disabled,\n          multiple = _select$props.multiple,\n          multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n\n    var isItemHovering = function isItemHovering(target) {\n      return props.hoveringIndex === target;\n    };\n\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n\n    return {\n      ns: ns,\n      select: select,\n      listProps: listProps,\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    };\n  },\n  render: function render(_ctx, _cache) {\n    var _a;\n\n    var $slots = _ctx.$slots,\n        data = _ctx.data,\n        listProps = _ctx.listProps,\n        select = _ctx.select,\n        isSized = _ctx.isSized,\n        width = _ctx.width,\n        ns = _ctx.ns,\n        isItemDisabled = _ctx.isItemDisabled,\n        isItemHovering = _ctx.isItemHovering,\n        isItemSelected = _ctx.isItemSelected;\n    var Comp = isSized ? FixedSizeList : DynamicSizeList;\n    var selectProps = select.props,\n        onSelect = select.onSelect,\n        onHover = select.onHover,\n        onKeyboardNavigate = select.onKeyboardNavigate,\n        onKeyboardSelect = select.onKeyboardSelect;\n    var height = selectProps.height,\n        modelValue = selectProps.modelValue,\n        multiple = selectProps.multiple;\n\n    if (data.length === 0) {\n      return h(\"div\", {\n        class: ns.b(\"dropdown\"),\n        style: {\n          width: \"\".concat(width, \"px\")\n        }\n      }, (_a = $slots.empty) == null ? void 0 : _a.call($slots));\n    }\n\n    var ListItem = withCtx(function (scoped) {\n      var index = scoped.index,\n          data2 = scoped.data;\n      var item = data2[index];\n\n      if (data2[index].type === \"Group\") {\n        return h(GroupItem, {\n          item: item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize\n        });\n      }\n\n      var selected = isItemSelected(modelValue, item);\n      var itemDisabled = isItemDisabled(modelValue, selected);\n      return h(OptionItem, _objectSpread(_objectSpread({}, scoped), {}, {\n        selected: selected,\n        disabled: item.disabled || itemDisabled,\n        created: !!item.created,\n        hovering: isItemHovering(index),\n        item: item,\n        onSelect: onSelect,\n        onHover: onHover\n      }), {\n        default: withCtx(function (props) {\n          return renderSlot($slots, \"default\", props, function () {\n            return [h(\"span\", item.label)];\n          });\n        })\n      });\n    });\n    var List = h(Comp, _objectSpread({\n      ref: \"listRef\",\n      className: ns.be(\"dropdown\", \"list\"),\n      data: data,\n      height: height,\n      width: width,\n      total: data.length,\n      scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n      onKeydown: [_cache[1] || (_cache[1] = withKeys(withModifiers(function () {\n        return onKeyboardNavigate(\"forward\");\n      }, [\"stop\", \"prevent\"]), [\"down\"])), _cache[2] || (_cache[2] = withKeys(withModifiers(function () {\n        return onKeyboardNavigate(\"backward\");\n      }, [\"stop\", \"prevent\"]), [\"up\"])), _cache[3] || (_cache[3] = withKeys(withModifiers(onKeyboardSelect, [\"stop\", \"prevent\"]), [\"enter\"])), _cache[4] || (_cache[4] = withKeys(withModifiers(function () {\n        return select.expanded = false;\n      }, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[5] || (_cache[5] = withKeys(function () {\n        return select.expanded = false;\n      }, [\"tab\"]))]\n    }, listProps), {\n      default: ListItem\n    });\n    return h(\"div\", {\n      class: [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)]\n    }, [List]);\n  }\n});\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;IA2BKA,YAAaC,gBAAa;AAC7BC,QAAM,kBADuB;AAG7BC,SAAO;AACLC,UAAMC,KADD;AAELC,mBAAeC,MAFV;AAGLC,WAAOD;AAHF,GAHsB;AAQ7BE,OAR6B,iBAQvBN,KARuB,EAQhB;AACX,QAAMO,SAASC,OAAOC,oBAAP,CAAf;AACA,QAAMC,KAAKC,aAAa,QAAb,CAAX;AACA,QAAMC,gBAAgBC,IAAmB,EAAnB,CAAtB;AAEA,QAAMC,UAAUD,IAAI,IAAJ,CAAhB;AAEA,QAAME,UAAUC,SAAS;AAAA,aACvBC,YAAYV,OAAOP,KAAP,CAAakB,qBAAzB,CADuB;AAAA,KAAT,CAAhB;AAGA,QAAMC,YAAYH,SAAS,YAAM;AAC/B,UAAID,QAAQK,KAAZ,EAAmB;AACjB,eAAO;AACLC,oBAAUd,OAAOP,KAAP,CAAasB;AADlB,SAAP;AACyB;;AAI3B,aAAO;AACLC,uBAAehB,OAAOP,KAAP,CAAakB,qBADvB;AAELG,kBAAU,kBAACG,GAAD;AAAA,iBAAiBZ,cAAcQ,KAAd,CAAoBI,GAApB,CAAjB;AAAA;AAFL,OAAP;AAEiD,KATjC,CAAlB;;AAaA,QAAMC,WAAW,SAAXA,QAAW,GAAuC;AAAA,UAAtCC,GAAsC,uEAApB,EAAoB;AAAA,UAAhBC,MAAgB;AACtD,UACWC,QADX,GAEIrB,MAFJ,CACEP,KADF,CACW4B,QADX;;AAIA,UAAI,CAACC,SAASF,MAAT,CAAL,EAAuB;AACrB,eAAOD,IAAII,QAAJ,CAAaH,MAAb,CAAP;AAAoB;;AAGtB,aACED,OACAA,IAAIK,IAAJ,CAAS,UAACC,IAAD,EAAU;AACjB,eAAOC,IAAID,IAAJ,EAAUJ,QAAV,MAAwBK,IAAIN,MAAJ,EAAYC,QAAZ,CAA/B;AAA2C,OAD7C,CAFF;AAG+C,KAZjD;;AAgBA,QAAMM,UAAU,SAAVA,OAAU,CAACC,QAAD,EAAoBR,MAApB,EAAwC;AACtD,UAAI,CAACE,SAASF,MAAT,CAAL,EAAuB;AACrB,eAAOQ,aAAaR,MAApB;AAAoB,OADtB,MAEO;AACL,YAAQC,QAAR,GAAqBrB,OAAOP,KAA5B,CAAQ4B,QAAR;AACA,eAAOK,IAAIE,QAAJ,EAAcP,QAAd,MAA4BK,IAAIN,MAAJ,EAAYC,QAAZ,CAAnC;AAA+C;AAAA,KALnD;;AASA,QAAMQ,iBAAiB,SAAjBA,cAAiB,CAACC,UAAD,EAA0BV,MAA1B,EAA6C;AAClE,UAAIpB,OAAOP,KAAP,CAAasC,QAAjB,EAA2B;AACzB,eAAOb,SAASY,UAAT,EAAqBV,OAAOP,KAA5B,CAAP;AAAmC;;AAErC,aAAOc,QAAQG,UAAR,EAAoBV,OAAOP,KAA3B,CAAP;AAAkC,KAJpC;;AAOA,QAAMmB,iBAAiB,SAAjBA,cAAiB,CAACF,UAAD,EAA0BF,QAA1B,EAAgD;AACrE,0BAA8C5B,OAAOP,KAArD;AAAA,UAAQwC,QAAR,iBAAQA,QAAR;AAAA,UAAkBF,QAAlB,iBAAkBA,QAAlB;AAAA,UAA4BG,aAA5B,iBAA4BA,aAA5B;AACA,aACED,YACC,CAACL,QAAD,KAACG,WAEIG,gBAAgB,CAAhB,IAAqBJ,WAAWK,MAAX,IAAqBD,aAF9C,GAGI,KAHL,CAFH;AAKQ,KAPV;;AAWA,QAAME,iBAAiB,SAAjBA,cAAiB,CAAChB,MAAD;AAAA,aAAoB3B,MAAMG,aAAN,KAAwBwB,MAA5C;AAAA,KAAvB;;AAEA,QAAMiB,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAmB;AACtC,UAAMC,OAAOhC,QAAQM,KAArB;;AACA,UAAI0B,IAAJ,EAAU;AACRA,aAAKF,YAAL,CAAkBC,KAAlB;AAAkB;AAAA,KAHtB;;AAOA,QAAME,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,UAAMD,OAAOhC,QAAQM,KAArB;;AACA,UAAI0B,IAAJ,EAAU;AACRA,aAAKC,cAAL;AAAK;AAAA,KAHT;;AAQA,WAAO;AACLrC,YADK;AAELH,oBAFK;AAGLY,0BAHK;AAILL,sBAJK;AAKLC,sBALK;AAOLwB,oCAPK;AAQLI,oCARK;AASLP,oCATK;AAWLQ,gCAXK;AAYLG;AAZK,KAAP;AAYE,GAvGyB;AA2G7BC,QA3G6B,kBA2GtBC,IA3GsB,EA2GhBC,MA3GgB,EA2GR;AACnB;;AAAM,QAGJC,MAHI,GAeNF,IAfM,CAGJE,MAHI;AAAA,QAIJlD,IAJI,GAeNgD,IAfM,CAIJhD,IAJI;AAAA,QAKJkB,SALI,GAeN8B,IAfM,CAKJ9B,SALI;AAAA,QAMJZ,MANI,GAeN0C,IAfM,CAMJ1C,MANI;AAAA,QAOJQ,OAPI,GAeNkC,IAfM,CAOJlC,OAPI;AAAA,QAQJV,KARI,GAeN4C,IAfM,CAQJ5C,KARI;AAAA,QAUJK,EAVI,GAeNuC,IAfM,CAUJvC,EAVI;AAAA,QAWJ6B,cAXI,GAeNU,IAfM,CAWJV,cAXI;AAAA,QAYJI,cAZI,GAeNM,IAfM,CAYJN,cAZI;AAAA,QAYJP,cAZI,GAeNa,IAfM,CAYJb,cAZI;AAiBN,QAAMgB,gDAAN;AAAM,QAEJC,WAFI,GAON9C,MAPM,CAEJP,KAFI;AAAA,QAGJsD,QAHI,GAON/C,MAPM,CAGJ+C,QAHI;AAAA,QAIJC,OAJI,GAONhD,MAPM,CAIJgD,OAJI;AAAA,QAKJC,kBALI,GAONjD,MAPM,CAKJiD,kBALI;AAAA,QAKJC,gBALI,GAONlD,MAPM,CAKJkD,gBALI;AASN;AAAA;AAAA;;AACE,aAAOf,MAAP,KAAO,CAAP,EAAO;AAEL,eACS,KADT,EACc;AACZgB,eAAOhD,gBADK;AACLiD;AACKtD;AADL;AADK,OADd,EAMO,sDANP;AAUJ;;AACE,mBAAeuD;AACf,UAAMf,KAAN,GAAkBgB,MAAlB,CAAMhB,KAAN;AAAA,UAAkBiB,KAAlB,GAAkBD,MAAlB,CAAa5D,IAAb;AAEA,cAAS,eAAT;;AACE,eAAO,OAAP,CAAO8D,IAAP,KAAO,OAAP,EAAO;AAAa;AAElB/B,oBAFkB;AAGlB2B,6BAHkB;AAG+BK;AAH/B;AAOtB;;AACA,UAAM7B,2CAAN;AAEA,yBAEEI,oCAFF;AAEE,2DAEEsB,MAFF;AAGE1B,0BAHF;AAIEK,kBAAUR,6BAJZ;AAKEiC,kBAAU,aALZ;AAMEC,uCANF;AAOElC,kBAPF;AAQEsB,0BARF;AAQEC;AARF,UAUA;AAEIY,iBAAOP,yBAAmB;AAAwB,2BACjC;AAAA;AAAA,YADiC;AACjC,SADV;AAFX,OAVA;AAoBJ,KApCiB,CAAf;AAsCA;AAEE/C,oBAFF;AAGEuD,0CAHF;AAIEnE,gBAJF;AAKE+D,oBALF;AAME3D,kBANF;AAOEgE,wBAPF;AAQEC,sDARF;AAQaC,eACF,GAQPrB,OAAO,CAAP,MAAOA,OACG,CADH,IACQsB,SACXC,cACE;AAAA,eAAMjB,mBAAmB,SAAnB,CAAN;AAAA,OADF,EAC2B,CACzB,MADyB,EACzB,SADyB,CAD3B,CADW,EAGT,CAEF,MAFE,CAHS,CADf,CARO,EAgBPN,OAAO,CAAP,MAAOA,OACG,CADH,IACQsB,SACXC,cAAc;AAAA;AAAA,OAAd,EAAc,mBAAd,CADW,EACG,MADH,CADf,CAhBO,EAsBPvB,OAAO,CAAP,MAAOA,OACG,CADH,IACQsB,SACXC,cACEhB,gBADF,EACE,mBADF,CADW,EAGA,SAHA,CADf,CAtBO,EA8BPP,OAAO,CAAP,MAAOA,OACG,CADH,IACQsB,SAASC,aAAc;AAAA;AAAA,6BAAvB,EAAuB,OAAvB,CADf,CA9BO,EA+BmDvB;AAAA;AAAA,kBA/BnD;AATX,OA6CK/B,SA7CL,GA+CA;AACWgD;AADX,KA/CA;AAqDA,aACS,KADT,EACS;AAAqCT;AAArC,KADT,EAGC,MAHD;AAGC;AAlPwB,CAAb","names":["_sfc_main","defineComponent","name","props","data","Array","hoveringIndex","Number","width","setup","select","inject","selectV2InjectionKey","ns","useNamespace","cachedHeights","ref","listRef","isSized","computed","isUndefined","estimatedOptionHeight","listProps","value","itemSize","itemHeight","estimatedSize","idx","contains","arr","target","valueKey","isObject","includes","some","item","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","disabled","multipleLimit","length","isItemHovering","scrollToItem","index","list","resetScrollTop","render","_ctx","_cache","$slots","Comp","selectProps","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","class","style","withCtx","scoped","data2","type","height","created","hovering","default","className","total","scrollbarAlwaysOn","onKeydown","withKeys","withModifiers"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  inject,\n  ref,\n  renderSlot,\n  h,\n  withCtx,\n  withKeys,\n  withModifiers,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isUndefined, isObject } from '@element-plus/utils'\nimport {\n  FixedSizeList,\n  DynamicSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { OptionItemProps, Option } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props) {\n    const select = inject(selectV2InjectionKey) as any\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref(null)\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      if (select.props.multiple) {\n        return contains(modelValue, target.value)\n      }\n      return isEqual(modelValue, target.value)\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    // computed\n    return {\n      ns,\n      select,\n      listProps,\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n\n      scrollToItem,\n      resetScrollTop,\n    }\n  },\n\n  render(_ctx, _cache) {\n    const {\n      $slots,\n\n      data,\n      listProps,\n      select,\n      isSized,\n      width,\n      ns,\n      // methods\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n    } = _ctx\n\n    const Comp = isSized ? FixedSizeList : DynamicSizeList\n\n    const {\n      props: selectProps,\n      onSelect,\n      onHover,\n      onKeyboardNavigate,\n      onKeyboardSelect,\n    } = select\n    const { height, modelValue, multiple } = selectProps\n\n    if (data.length === 0) {\n      return h(\n        'div',\n        {\n          class: ns.b('dropdown'),\n          style: {\n            width: `${width}px`,\n          },\n        },\n        $slots.empty?.()\n      )\n    }\n\n    const ListItem = withCtx((scoped: ItemProps<any>) => {\n      const { index, data } = scoped\n      const item = data[index]\n      // render group item which is not selectable.\n      if (data[index].type === 'Group') {\n        return h(GroupItem, {\n          item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize,\n        })\n      }\n\n      const selected = isItemSelected(modelValue, item)\n      const itemDisabled = isItemDisabled(modelValue, selected)\n      // render option item which is selectable\n      return h(\n        OptionItem,\n        {\n          ...scoped,\n          selected,\n          disabled: item.disabled || itemDisabled,\n          created: !!item.created,\n          hovering: isItemHovering(index),\n          item,\n          onSelect,\n          onHover,\n        },\n        {\n          default: withCtx((props: OptionItemProps) => {\n            return renderSlot($slots, 'default', props, () => [\n              h('span', item.label),\n            ])\n          }),\n        }\n      )\n    })\n\n    const List = h(\n      Comp,\n      {\n        ref: 'listRef', // forwarded ref so that select can access the list directly\n        className: ns.be('dropdown', 'list'),\n        data,\n        height,\n        width,\n        total: data.length,\n        scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n        onKeydown: [\n          _cache[1] ||\n            (_cache[1] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('forward'),\n                ['stop', 'prevent']\n              ),\n              ['down']\n            )),\n          _cache[2] ||\n            (_cache[2] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('backward'),\n                ['stop', 'prevent']\n              ),\n              ['up']\n            )),\n          _cache[3] ||\n            (_cache[3] = withKeys(\n              withModifiers(onKeyboardSelect, ['stop', 'prevent']),\n              ['enter']\n            )),\n\n          _cache[4] ||\n            (_cache[4] = withKeys(\n              withModifiers(\n                () => (select.expanded = false),\n                ['stop', 'prevent']\n              ),\n              ['esc']\n            )),\n          _cache[5] ||\n            (_cache[5] = withKeys(() => (select.expanded = false), ['tab'])),\n          // _cache[6] || (_cache[6] = () => {\n          //   console.log(11)\n          // }),\n        ],\n        ...listProps,\n      },\n      {\n        default: ListItem,\n      }\n    )\n    return h(\n      'div',\n      {\n        class: [ns.b('dropdown'), ns.is('multiple', multiple)],\n      },\n      [List]\n    )\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}