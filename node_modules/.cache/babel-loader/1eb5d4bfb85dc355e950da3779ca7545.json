{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { defineComponent, ref, watch, watchEffect, openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, normalizeStyle } from 'vue';\nimport { useOptions } from '../useOption.mjs';\nimport Color from '../color.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\n\nvar _sfc_main = defineComponent({\n  props: {\n    colors: {\n      type: Array,\n      required: true\n    },\n    color: {\n      type: Object,\n      required: true\n    }\n  },\n  setup: function setup(props) {\n    var _useOptions = useOptions(),\n        currentColor = _useOptions.currentColor;\n\n    var rgbaColors = ref(parseColors(props.colors, props.color));\n    watch(function () {\n      return currentColor.value;\n    }, function (val) {\n      var color = new Color();\n      color.fromString(val);\n      rgbaColors.value.forEach(function (item) {\n        item.selected = color.compare(item);\n      });\n    });\n    watchEffect(function () {\n      rgbaColors.value = parseColors(props.colors, props.color);\n    });\n\n    function handleSelect(index) {\n      props.color.fromString(props.colors[index]);\n    }\n\n    function parseColors(colors, color) {\n      return colors.map(function (value) {\n        var c = new Color();\n        c.enableAlpha = true;\n        c.format = \"rgba\";\n        c.fromString(value);\n        c.selected = c.value === color.value;\n        return c;\n      });\n    }\n\n    return {\n      rgbaColors: rgbaColors,\n      handleSelect: handleSelect\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  class: \"el-color-predefine\"\n};\nvar _hoisted_2 = {\n  class: \"el-color-predefine__colors\"\n};\nvar _hoisted_3 = [\"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rgbaColors, function (item, index) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: _ctx.colors[index],\n      class: normalizeClass([\"el-color-predefine__color-selector\", {\n        selected: item.selected,\n        \"is-alpha\": item._alpha < 100\n      }]),\n      onClick: function onClick($event) {\n        return _ctx.handleSelect(index);\n      }\n    }, [createElementVNode(\"div\", {\n      style: normalizeStyle({\n        backgroundColor: item.value\n      })\n    }, null, 4)], 10, _hoisted_3);\n  }), 128))])]);\n}\n\nvar Predefine = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Predefine as default };","map":{"version":3,"mappings":";;;;;;;;AAuBA,IAAKA,YAAaC,gBAAa;AAC7BC,SAAO;AACLC,YAAQ;AAAEC,YAAMC,KAAR;AAAeC,gBAAU;AAAzB,KADH;AAELC,WAAO;AACLH,YAAMI,MADD;AAELF,gBAAU;AAFL;AAFF,GADsB;AAQ7BG,OAR6B,iBAQvBP,KARuB,EAQhB;AACX,sBAAyBQ,YAAzB;AAAA,QAAQC,YAAR,eAAQA,YAAR;;AAEA,QAAMC,aAAaC,IAAIC,YAAYZ,MAAMC,MAAlB,EAA0BD,MAAMK,KAAhC,CAAJ,CAAnB;AAGAQ,UACE;AAAA,aAAMJ,aAAaK,KAAnB;AAAA,KADF,EAEE,UAACC,GAAD,EAAS;AACP,UAAMV,QAAQ,IAAIW,KAAJ,EAAd;AACAX,YAAMY,UAAN,CAAiBF,GAAjB;AAEAL,iBAAWI,KAAX,CAAiBI,OAAjB,CAAyB,UAACC,IAAD,EAAU;AACjCA,aAAKC,QAAL,GAAgBf,MAAMgB,OAAN,CAAcF,IAAd,CAAhB;AAA8B,OADhC;AACgC,KAPpC;AAWAG,gBAAY,YAAM;AAChBZ,iBAAWI,KAAX,GAAmBF,YAAYZ,MAAMC,MAAlB,EAA0BD,MAAMK,KAAhC,CAAnB;AAAmD,KADrD;;AAIA,0BAAsBkB,KAAtB,EAA6B;AAC3BvB,YAAMK,KAAN,CAAYY,UAAZ,CAAuBjB,MAAMC,MAAN,CAAasB,KAAb,CAAvB;AAAoC;;AAEtC,yBAAqBtB,MAArB,EAA6BI,KAA7B,EAAoC;AAClC,aAAOJ,OAAOuB,GAAP,CAAW,UAACV,KAAD,EAAW;AAC3B,YAAMW,IAAI,IAAIT,KAAJ,EAAV;AACAS,UAAEC,WAAF,GAAgB,IAAhB;AACAD,UAAEE,MAAF,GAAW,MAAX;AACAF,UAAER,UAAF,CAAaH,KAAb;AACAW,UAAEL,QAAF,GAAaK,EAAEX,KAAF,KAAYT,MAAMS,KAA/B;AACA,eAAOW,CAAP;AAAO,OANF,CAAP;AAMS;;AAGX,WAAO;AACLf,4BADK;AAELkB;AAFK,KAAP;AAEE;AA5CyB,CAAb,CAAlB;;;AAtBOC,SAAM;;;AACJA,SAAM;;;;;sBADbC,mBAYM,KAZNA,cAYM,CAXJC,mBAUM,KAVNA,cAUM,mBATJD,mBAQME,QARNF,EAQME,IARNF,EAQME,WAPoBC,eAOpBD,EAP8B,UAA1Bb,IAA0B,EAApBI,KAAoB,EAAf;wBADrBO,mBAQM,KARNA,EAQM;AANHI,WAAKD,YAAOV,KAAP,CAMF;AALJM,aAAKM,gBAAC,oCAADA,EAAqC;AAAAf,kBACtBD,KAAKC,QADiB;AACT,oBAAcD,KAAKiB,MAAL,GAAW;AADhB,OAArCD,EAKD;AAHHE,eAAK;AAAA,eAAEJ,kBAAaV,KAAb,CAAF;AAAA;AAGF,KARNO,EAKuB,CAErBC,mBAAoD,KAApDA,EAAoD;AAA9CO,aAAKC;AAAAA,yBAAqBpB,KAAKL;AAA1ByB;AAAyC,KAApDR,EAAqC,IAArCA,EAAqC,CAArCA,CAFqB,CALvBD;GAQME,CARNF,MASI,EAVNC,CAWI,CAZND","names":["_sfc_main","defineComponent","props","colors","type","Array","required","color","Object","setup","useOptions","currentColor","rgbaColors","ref","parseColors","watch","value","val","Color","fromString","forEach","item","selected","compare","watchEffect","index","map","c","enableAlpha","format","handleSelect","class","_createElementBlock","_createElementVNode","_Fragment","_ctx","key","_normalizeClass","_alpha","onClick","style","_normalizeStyle"],"sources":["../../../../../../../packages/components/color-picker/src/components/predefine.vue"],"sourcesContent":["<template>\n  <div class=\"el-color-predefine\">\n    <div class=\"el-color-predefine__colors\">\n      <div\n        v-for=\"(item, index) in rgbaColors\"\n        :key=\"colors[index]\"\n        class=\"el-color-predefine__color-selector\"\n        :class=\"{ selected: item.selected, 'is-alpha': item._alpha < 100 }\"\n        @click=\"handleSelect(index)\"\n      >\n        <div :style=\"{ backgroundColor: item.value }\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watch, watchEffect, defineComponent } from 'vue'\nimport { useOptions } from '../useOption'\nimport Color from '../color'\n\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  props: {\n    colors: { type: Array, required: true },\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n  },\n  setup(props) {\n    const { currentColor } = useOptions()\n    //data\n    const rgbaColors = ref(parseColors(props.colors, props.color))\n\n    //watch\n    watch(\n      () => currentColor.value,\n      (val) => {\n        const color = new Color()\n        color.fromString(val)\n\n        rgbaColors.value.forEach((item) => {\n          item.selected = color.compare(item)\n        })\n      }\n    )\n    watchEffect(() => {\n      rgbaColors.value = parseColors(props.colors, props.color)\n    })\n\n    function handleSelect(index) {\n      props.color.fromString(props.colors[index])\n    }\n    function parseColors(colors, color) {\n      return colors.map((value) => {\n        const c = new Color()\n        c.enableAlpha = true\n        c.format = 'rgba'\n        c.fromString(value)\n        c.selected = c.value === color.value\n        return c\n      })\n    }\n    return {\n      rgbaColors,\n      handleSelect,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}