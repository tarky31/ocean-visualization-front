{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { resultProps, IconMap, IconComponentMap } from './result.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElResult\",\n  props: resultProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"result\");\n    var resultIcon = computed(function () {\n      var icon = props.icon;\n      var iconClass = icon && IconMap[icon] ? IconMap[icon] : \"icon-info\";\n      var iconComponent = IconComponentMap[iconClass] || IconComponentMap[\"icon-info\"];\n      return {\n        class: iconClass,\n        component: iconComponent\n      };\n    });\n    return {\n      ns: ns,\n      resultIcon: resultIcon\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"icon\"))\n  }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n    return [_ctx.resultIcon.component ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.resultIcon.component), {\n      key: 0,\n      class: normalizeClass(_ctx.resultIcon.class)\n    }, null, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)];\n  })], 2), _ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"title\"))\n  }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n    return [createElementVNode(\"p\", null, toDisplayString(_ctx.title), 1)];\n  })], 2)) : createCommentVNode(\"v-if\", true), _ctx.subTitle || _ctx.$slots.subTitle ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"subtitle\"))\n  }, [renderSlot(_ctx.$slots, \"subTitle\", {}, function () {\n    return [createElementVNode(\"p\", null, toDisplayString(_ctx.subTitle), 1)];\n  })], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", {\n    key: 2,\n    class: normalizeClass(_ctx.ns.e(\"extra\"))\n  }, [renderSlot(_ctx.$slots, \"extra\")], 2)) : createCommentVNode(\"v-if\", true)], 2);\n}\n\nvar Result = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Result as default };","map":{"version":3,"mappings":";;;;;;AA+BA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,UADuB;AAE7BC,SAAOC,WAFsB;AAG7BC,OAH6B,iBAGvBF,KAHuB,EAGhB;AACX,QAAMG,KAAKC,aAAa,QAAb,CAAX;AAEA,QAAMC,aAAaC,SAAS,YAAM;AAChC,UAAMC,OAAOP,MAAMO,IAAnB;AACA,UAAMC,YAAYD,QAAQE,QAAQF,IAAR,CAAR,GAAwBE,QAAQF,IAAR,CAAxB,GAAwC,WAA1D;AACA,UAAMG,gBACJC,iBAAiBH,SAAjB,KAA+BG,iBAAiB,WAAjB,CADjC;AAGA,aAAO;AACLC,eAAOJ,SADF;AAELK,mBAAWH;AAFN,OAAP;AAEa,KARI,CAAnB;AAYA,WAAO;AACLP,YADK;AAELE;AAFK,KAAP;AAEE;AApByB,CAAb,CAAlB;;;sBA9BES,mBAuBM,KAvBNA,EAuBM;AAvBAF,WAAKG,eAAEC,QAAGC,CAAH,EAAFF;AAuBL,GAvBND,EAAgB,CACdI,mBAQM,KARNA,EAQM;AARAN,WAAKG,eAAEC,QAAGG,CAAH,CAAI,MAAJ,CAAFJ;AAQL,GARNG,EAAiB,CACfE,WAMOJ,WANPI,EAMO,MANPA,EAMO,EANPA;AAAA,WAMO,CAHGJ,gBAAWH,SAAX,IAAWQ,aAFnBC,YAIEC,wBAHKP,gBAAWH,SAGhBU,CAJFD,EAC2B;AAAAE;AAExBZ,aAAKG,eAAEC,gBAAWJ,KAAbG;AAFmB,KAD3BO,EAGqB,IAHrBA,EAGqB,CAHrBA,EAGqB,SAHrBA,CAEQ,IACaG,gCAEhB,CANP;AAAA,IADe,CAAjBP,IADc,EAUHF,cAASA,YAAOU,KAAhB,IAAgBL,aAA3BP,mBAIM,KAJNA,EAIM;AAAAU;AAJ6BZ,WAAKG,eAAEC,QAAGG,CAAH,CAAI,OAAJ,CAAFJ;AAIlC,GAJND,EAA8C,CAC5CM,WAEOJ,WAFPI,EAEO,OAFPA,EAEO,EAFPA;AAAA,WAEO,CADLF,mBAAkB,GAAlBA,EAAkB,IAAlBA,EAAkBS,gBAAZX,UAAY,CAAlBE,EAAW,CAAXA,CACK,CAFP;AAAA,IAD4C,CAA9CJ,EAEe,CAFfA,CAAW,IAEIW,gCAZD,EAeHT,iBAAYA,YAAOY,QAAnB,IAAmBP,aAA9BP,mBAIM,KAJNA,EAIM;AAAAU;AAJmCZ,WAAKG,eAAEC,QAAGG,CAAH,CAAI,UAAJ,CAAFJ;AAIxC,GAJND,EAAoD,CAClDM,WAEOJ,WAFPI,EAEO,UAFPA,EAEO,EAFPA;AAAA,WAEO,CADLF,mBAAqB,GAArBA,EAAqB,IAArBA,EAAqBS,gBAAfX,aAAe,CAArBE,EAAc,CAAdA,CACK,CAFP;AAAA,IADkD,CAApDJ,EAEkB,CAFlBA,CAAW,IAEOW,gCAjBJ,EAoBHT,YAAOa,KAAP,IAAOR,aAAlBP,mBAEM,KAFNA,EAEM;AAAAU;AAFoBZ,WAAKG,eAAEC,QAAGG,CAAH,CAAI,OAAJ,CAAFJ;AAEzB,GAFND,EAAqC,CACnCM,WAA0BJ,WAA1BI,EAA0B,OAA1BA,CADmC,CAArCN,EAC4B,CAD5BA,CAAW,IACiBW,gCArBd,CAAhBX","names":["_sfc_main","defineComponent","name","props","resultProps","setup","ns","useNamespace","resultIcon","computed","icon","iconClass","IconMap","iconComponent","IconComponentMap","class","component","_createElementBlock","_normalizeClass","_ctx","b","_createElementVNode","e","_renderSlot","openBlock","_createBlock","_resolveDynamicComponent","key","createCommentVNode","title","toDisplayString","subTitle","extra"],"sources":["../../../../../../packages/components/result/src/result.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('icon')\">\n      <slot name=\"icon\">\n        <component\n          :is=\"resultIcon.component\"\n          v-if=\"resultIcon.component\"\n          :class=\"resultIcon.class\"\n        />\n      </slot>\n    </div>\n    <div v-if=\"title || $slots.title\" :class=\"ns.e('title')\">\n      <slot name=\"title\">\n        <p>{{ title }}</p>\n      </slot>\n    </div>\n    <div v-if=\"subTitle || $slots.subTitle\" :class=\"ns.e('subtitle')\">\n      <slot name=\"subTitle\">\n        <p>{{ subTitle }}</p>\n      </slot>\n    </div>\n    <div v-if=\"$slots.extra\" :class=\"ns.e('extra')\">\n      <slot name=\"extra\"></slot>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { resultProps, IconComponentMap, IconMap } from './result'\n\nexport default defineComponent({\n  name: 'ElResult',\n  props: resultProps,\n  setup(props) {\n    const ns = useNamespace('result')\n\n    const resultIcon = computed(() => {\n      const icon = props.icon\n      const iconClass = icon && IconMap[icon] ? IconMap[icon] : 'icon-info'\n      const iconComponent =\n        IconComponentMap[iconClass] || IconComponentMap['icon-info']\n\n      return {\n        class: iconClass,\n        component: iconComponent,\n      }\n    })\n\n    return {\n      ns,\n      resultIcon,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}