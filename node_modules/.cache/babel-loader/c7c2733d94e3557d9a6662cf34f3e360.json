{"ast":null,"code":"import _toArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { defineComponent, inject, ref, computed, nextTick, watch, onMounted, onBeforeUnmount, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, createVNode, withModifiers, Fragment, renderList, createElementVNode, toDisplayString, withKeys, vModelText, createCommentVNode, vShow, renderSlot } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport { isClient } from '@vueuse/core';\nimport _CascaderPanel from '../../cascader-panel/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { CommonProps } from '../../cascader-panel/src/config.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { elFormKey, elFormItemKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { isKorean } from '../../../utils/i18n.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusNode, getSibling } from '../../../utils/dom/aria.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nvar DEFAULT_INPUT_HEIGHT = 40;\nvar INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28\n};\nvar popperOptions = {\n  modifiers: [{\n    name: \"arrowPosition\",\n    enabled: true,\n    phase: \"main\",\n    fn: function fn(_ref) {\n      var state = _ref.state;\n      var modifiersData = state.modifiersData,\n          placement = state.placement;\n      if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n      modifiersData.arrow.x = 35;\n    },\n    requires: [\"arrow\"]\n  }]\n};\nvar COMPONENT_NAME = \"ElCascader\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElCascaderPanel: _CascaderPanel,\n    ElInput: ElInput,\n    ElTooltip: ElTooltip,\n    ElScrollbar: ElScrollbar,\n    ElTag: ElTag,\n    ElIcon: ElIcon,\n    CircleClose: CircleClose,\n    Check: Check,\n    ArrowDown: ArrowDown\n  },\n  directives: {\n    Clickoutside: ClickOutside\n  },\n  props: _objectSpread(_objectSpread({}, CommonProps), {}, {\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    placeholder: {\n      type: String\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function,\n      default: function _default(node, keyword) {\n        return node.text.includes(keyword);\n      }\n    },\n    separator: {\n      type: String,\n      default: \" / \"\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true\n    },\n    collapseTags: Boolean,\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    beforeFilter: {\n      type: Function,\n      default: function _default() {\n        return true;\n      }\n    },\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported\n  }),\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"visible-change\", \"expand-change\", \"remove-tag\"],\n  setup: function setup(props, _ref2) {\n    var emit = _ref2.emit;\n    var inputInitialHeight = 0;\n    var pressDeleteCount = 0;\n\n    var _useDeprecateAppendTo = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\"),\n        compatTeleported = _useDeprecateAppendTo.compatTeleported;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var elForm = inject(elFormKey, {});\n    var elFormItem = inject(elFormItemKey, {});\n    var tooltipRef = ref(null);\n    var input = ref(null);\n    var tagWrapper = ref(null);\n    var panel = ref(null);\n    var suggestionPanel = ref(null);\n    var popperVisible = ref(false);\n    var inputHover = ref(false);\n    var filtering = ref(false);\n    var inputValue = ref(\"\");\n    var searchInputValue = ref(\"\");\n    var presentTags = ref([]);\n    var suggestions = ref([]);\n    var isOnComposition = ref(false);\n    var isDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var inputPlaceholder = computed(function () {\n      return props.placeholder || t(\"el.cascader.placeholder\");\n    });\n    var realSize = useSize();\n    var tagSize = computed(function () {\n      return [\"small\"].includes(realSize.value) ? \"small\" : \"default\";\n    });\n    var multiple = computed(function () {\n      return !!props.props.multiple;\n    });\n    var readonly = computed(function () {\n      return !props.filterable || multiple.value;\n    });\n    var searchKeyword = computed(function () {\n      return multiple.value ? searchInputValue.value : inputValue.value;\n    });\n    var checkedNodes = computed(function () {\n      var _a;\n\n      return ((_a = panel.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    var clearBtnVisible = computed(function () {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    var presentText = computed(function () {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \" \" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    var checkedValue = computed({\n      get: function get() {\n        return props.modelValue;\n      },\n      set: function set(val) {\n        var _a;\n\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n        (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\");\n      }\n    });\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n\n    var togglePopperVisible = function togglePopperVisible(visible) {\n      var _a, _b, _c;\n\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", \"\".concat(visible));\n\n        if (visible) {\n          updatePopperPosition();\n          nextTick((_c = panel.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          var value = presentText.value;\n          inputValue.value = value;\n          searchInputValue.value = value;\n        }\n\n        emit(\"visible-change\", visible);\n      }\n    };\n\n    var updatePopperPosition = function updatePopperPosition() {\n      nextTick(function () {\n        var _a;\n\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n\n    var hideSuggestionPanel = function hideSuggestionPanel() {\n      filtering.value = false;\n    };\n\n    var genTag = function genTag(node) {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      return {\n        node: node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled\n      };\n    };\n\n    var deleteTag = function deleteTag(tag) {\n      var _a;\n\n      var node = tag.node;\n      node.doCheck(false);\n      (_a = panel.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"remove-tag\", node.valueByOption);\n    };\n\n    var calculatePresentTags = function calculatePresentTags() {\n      if (!multiple.value) return;\n      var nodes = checkedNodes.value;\n      var tags = [];\n\n      if (nodes.length) {\n        var _nodes = _toArray(nodes),\n            first = _nodes[0],\n            rest = _nodes.slice(1);\n\n        var restCount = rest.length;\n        tags.push(genTag(first));\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: \"+ \".concat(restCount),\n              closable: false\n            });\n          } else {\n            rest.forEach(function (node) {\n              return tags.push(genTag(node));\n            });\n          }\n        }\n      }\n\n      presentTags.value = tags;\n    };\n\n    var calculateSuggestions = function calculateSuggestions() {\n      var _a, _b;\n\n      var filterMethod = props.filterMethod,\n          showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var res = (_b = (_a = panel.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(function (node) {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n\n      if (multiple.value) {\n        presentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n      }\n\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n\n    var focusFirstNode = function focusFirstNode() {\n      var _a;\n\n      var firstNode;\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".el-cascader__suggestion-item\");\n      } else {\n        firstNode = (_a = panel.value) == null ? void 0 : _a.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n      }\n\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n\n    var updateStyle = function updateStyle() {\n      var _a, _b;\n\n      var inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      var tagWrapperEl = tagWrapper.value;\n      var suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!isClient || !inputInner) return;\n\n      if (suggestionPanelEl) {\n        var suggestionList = suggestionPanelEl.querySelector(\".el-cascader__suggestion-list\");\n        suggestionList.style.minWidth = \"\".concat(inputInner.offsetWidth, \"px\");\n      }\n\n      if (tagWrapperEl) {\n        var offsetHeight = tagWrapperEl.offsetHeight;\n        var height = presentTags.value.length > 0 ? \"\".concat(Math.max(offsetHeight + 6, inputInitialHeight), \"px\") : \"\".concat(inputInitialHeight, \"px\");\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n\n      return (_a = panel.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n\n    var handleExpandChange = function handleExpandChange(value) {\n      updatePopperPosition();\n      emit(\"expand-change\", value);\n    };\n\n    var handleComposition = function handleComposition(event) {\n      var _a;\n\n      var text = (_a = event.target) == null ? void 0 : _a.value;\n\n      if (event.type === \"compositionend\") {\n        isOnComposition.value = false;\n        nextTick(function () {\n          return handleInput(text);\n        });\n      } else {\n        var lastCharacter = text[text.length - 1] || \"\";\n        isOnComposition.value = !isKorean(lastCharacter);\n      }\n    };\n\n    var handleKeyDown = function handleKeyDown(e) {\n      if (isOnComposition.value) return;\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible();\n          break;\n\n        case EVENT_CODE.down:\n          togglePopperVisible(true);\n          nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n\n    var handleClear = function handleClear() {\n      var _a;\n\n      (_a = panel.value) == null ? void 0 : _a.clearCheckedNodes();\n      togglePopperVisible(false);\n    };\n\n    var handleSuggestionClick = function handleSuggestionClick(node) {\n      var _a, _b;\n\n      var checked = node.checked;\n\n      if (multiple.value) {\n        (_a = panel.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = panel.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n\n    var handleSuggestionKeyDown = function handleSuggestionKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          {\n            var distance = code === EVENT_CODE.up ? -1 : 1;\n            focusNode(getSibling(target, distance, '.el-cascader__suggestion-item[tabindex=\"-1\"]'));\n            break;\n          }\n\n        case EVENT_CODE.enter:\n          target.click();\n          break;\n\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n\n    var handleDelete = function handleDelete() {\n      var tags = presentTags.value;\n      var lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount) return;\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n\n    var handleFilter = debounce(function () {\n      var value = searchKeyword.value;\n      if (!value) return;\n      var passed = props.beforeFilter(value);\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(function () {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n\n    var handleInput = function handleInput(val, e) {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n\n    watch(filtering, updatePopperPosition);\n    watch([checkedNodes, isDisabled], calculatePresentTags);\n    watch(presentTags, function () {\n      nextTick(function () {\n        return updateStyle();\n      });\n    });\n    watch(presentText, function (val) {\n      return inputValue.value = val;\n    }, {\n      immediate: true\n    });\n    onMounted(function () {\n      var _a;\n\n      var inputEl = (_a = input.value) == null ? void 0 : _a.$el;\n      inputInitialHeight = (inputEl == null ? void 0 : inputEl.offsetHeight) || INPUT_HEIGHT_MAP[realSize.value] || DEFAULT_INPUT_HEIGHT;\n      addResizeListener(inputEl, updateStyle);\n    });\n    onBeforeUnmount(function () {\n      var _a;\n\n      removeResizeListener((_a = input.value) == null ? void 0 : _a.$el, updateStyle);\n    });\n    return {\n      popperOptions: popperOptions,\n      tooltipRef: tooltipRef,\n      popperPaneRef: popperPaneRef,\n      input: input,\n      tagWrapper: tagWrapper,\n      panel: panel,\n      suggestionPanel: suggestionPanel,\n      popperVisible: popperVisible,\n      inputHover: inputHover,\n      inputPlaceholder: inputPlaceholder,\n      filtering: filtering,\n      presentText: presentText,\n      checkedValue: checkedValue,\n      inputValue: inputValue,\n      searchInputValue: searchInputValue,\n      presentTags: presentTags,\n      suggestions: suggestions,\n      isDisabled: isDisabled,\n      isOnComposition: isOnComposition,\n      realSize: realSize,\n      tagSize: tagSize,\n      multiple: multiple,\n      readonly: readonly,\n      clearBtnVisible: clearBtnVisible,\n      compatTeleported: compatTeleported,\n      t: t,\n      togglePopperVisible: togglePopperVisible,\n      hideSuggestionPanel: hideSuggestionPanel,\n      deleteTag: deleteTag,\n      focusFirstNode: focusFirstNode,\n      getCheckedNodes: getCheckedNodes,\n      handleExpandChange: handleExpandChange,\n      handleKeyDown: handleKeyDown,\n      handleComposition: handleComposition,\n      handleClear: handleClear,\n      handleSuggestionClick: handleSuggestionClick,\n      handleSuggestionKeyDown: handleSuggestionKeyDown,\n      handleDelete: handleDelete,\n      handleInput: handleInput\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  key: 0,\n  ref: \"tagWrapper\",\n  class: \"el-cascader__tags\"\n};\nvar _hoisted_2 = [\"placeholder\"];\nvar _hoisted_3 = [\"onClick\"];\nvar _hoisted_4 = {\n  class: \"el-cascader__empty-text\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_circle_close = resolveComponent(\"circle-close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tag = resolveComponent(\"el-tag\");\n\n  var _component_el_cascader_panel = resolveComponent(\"el-cascader-panel\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.popperVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = function ($event) {\n      return _ctx.popperVisible = $event;\n    }),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": \"el-cascader__dropdown \".concat(_ctx.popperClass),\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"bottom\", \"top-start\", \"top\", \"right\", \"left\"],\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    placement: \"bottom-start\",\n    transition: \"el-zoom-in-top\",\n    effect: \"light\",\n    pure: \"\",\n    persistent: \"\",\n    onHide: _ctx.hideSuggestionPanel\n  }, {\n    default: withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([\"el-cascader\", _ctx.realSize && \"el-cascader--\".concat(_ctx.realSize), {\n          \"is-disabled\": _ctx.isDisabled\n        }, _ctx.$attrs.class]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        onClick: _cache[11] || (_cache[11] = function () {\n          return _ctx.togglePopperVisible(_ctx.readonly ? void 0 : true);\n        }),\n        onKeydown: _cache[12] || (_cache[12] = function () {\n          return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[13] || (_cache[13] = function ($event) {\n          return _ctx.inputHover = true;\n        }),\n        onMouseleave: _cache[14] || (_cache[14] = function ($event) {\n          return _ctx.inputHover = false;\n        })\n      }, [createVNode(_component_el_input, {\n        ref: \"input\",\n        modelValue: _ctx.inputValue,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.inputValue = $event;\n        }),\n        placeholder: _ctx.inputPlaceholder,\n        readonly: _ctx.readonly,\n        disabled: _ctx.isDisabled,\n        \"validate-event\": false,\n        size: _ctx.realSize,\n        class: normalizeClass({\n          \"is-focus\": _ctx.popperVisible\n        }),\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onFocus: _cache[2] || (_cache[2] = function (e) {\n          return _ctx.$emit(\"focus\", e);\n        }),\n        onBlur: _cache[3] || (_cache[3] = function (e) {\n          return _ctx.$emit(\"blur\", e);\n        }),\n        onInput: _ctx.handleInput\n      }, {\n        suffix: withCtx(function () {\n          return [_ctx.clearBtnVisible ? (openBlock(), createBlock(_component_el_icon, {\n            key: \"clear\",\n            class: \"el-input__icon icon-circle-close\",\n            onClick: withModifiers(_ctx.handleClear, [\"stop\"])\n          }, {\n            default: withCtx(function () {\n              return [createVNode(_component_circle_close)];\n            }),\n            _: 1\n          }, 8, [\"onClick\"])) : (openBlock(), createBlock(_component_el_icon, {\n            key: \"arrow-down\",\n            class: normalizeClass([\"el-input__icon\", \"icon-arrow-down\", _ctx.popperVisible && \"is-reverse\"]),\n            onClick: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n              return _ctx.togglePopperVisible();\n            }, [\"stop\"]))\n          }, {\n            default: withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"]))];\n        }),\n        _: 1\n      }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\"]), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.presentTags, function (tag) {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: tag.key,\n          type: \"info\",\n          size: _ctx.tagSize,\n          hit: tag.hitState,\n          closable: tag.closable,\n          \"disable-transitions\": \"\",\n          onClose: function onClose($event) {\n            return _ctx.deleteTag(tag);\n          }\n        }, {\n          default: withCtx(function () {\n            return [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)];\n          }),\n          _: 2\n        }, 1032, [\"size\", \"hit\", \"closable\", \"onClose\"]);\n      }), 128)), _ctx.filterable && !_ctx.isDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return _ctx.searchInputValue = $event;\n        }),\n        type: \"text\",\n        class: \"el-cascader__search-input\",\n        placeholder: _ctx.presentText ? \"\" : _ctx.inputPlaceholder,\n        onInput: _cache[5] || (_cache[5] = function (e) {\n          return _ctx.handleInput(_ctx.searchInputValue, e);\n        }),\n        onClick: _cache[6] || (_cache[6] = withModifiers(function ($event) {\n          return _ctx.togglePopperVisible(true);\n        }, [\"stop\"])),\n        onKeydown: _cache[7] || (_cache[7] = withKeys(function () {\n          return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);\n        }, [\"delete\"])),\n        onCompositionstart: _cache[8] || (_cache[8] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionupdate: _cache[9] || (_cache[9] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionend: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        })\n      }, null, 40, _hoisted_2)), [[vModelText, _ctx.searchInputValue]]) : createCommentVNode(\"v-if\", true)], 512)) : createCommentVNode(\"v-if\", true)], 38)), [[_directive_clickoutside, function () {\n        return _ctx.togglePopperVisible(false);\n      }, _ctx.popperPaneRef]])];\n    }),\n    content: withCtx(function () {\n      return [withDirectives(createVNode(_component_el_cascader_panel, {\n        ref: \"panel\",\n        modelValue: _ctx.checkedValue,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = function ($event) {\n          return _ctx.checkedValue = $event;\n        }),\n        options: _ctx.options,\n        props: _ctx.props,\n        border: false,\n        \"render-label\": _ctx.$slots.default,\n        onExpandChange: _ctx.handleExpandChange,\n        onClose: _cache[16] || (_cache[16] = function ($event) {\n          return _ctx.$nextTick(function () {\n            return _ctx.togglePopperVisible(false);\n          });\n        })\n      }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\", \"onExpandChange\"]), [[vShow, !_ctx.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_el_scrollbar, {\n        key: 0,\n        ref: \"suggestionPanel\",\n        tag: \"ul\",\n        class: \"el-cascader__suggestion-panel\",\n        \"view-class\": \"el-cascader__suggestion-list\",\n        onKeydown: _ctx.handleSuggestionKeyDown\n      }, {\n        default: withCtx(function () {\n          return [_ctx.suggestions.length ? (openBlock(true), createElementBlock(Fragment, {\n            key: 0\n          }, renderList(_ctx.suggestions, function (item) {\n            return openBlock(), createElementBlock(\"li\", {\n              key: item.uid,\n              class: normalizeClass([\"el-cascader__suggestion-item\", item.checked && \"is-checked\"]),\n              tabindex: -1,\n              onClick: function onClick($event) {\n                return _ctx.handleSuggestionClick(item);\n              }\n            }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(_component_el_icon, {\n              key: 0\n            }, {\n              default: withCtx(function () {\n                return [createVNode(_component_check)];\n              }),\n              _: 1\n            })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_3);\n          }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n            key: 1\n          }, function () {\n            return [createElementVNode(\"li\", _hoisted_4, toDisplayString(_ctx.t(\"el.cascader.noMatch\")), 1)];\n          })];\n        }),\n        _: 3\n      }, 8, [\"onKeydown\"])), [[vShow, _ctx.filtering]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"onHide\"]);\n}\n\nvar Cascader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Cascader as default };","map":{"version":3,"mappings":"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","names":["DEFAULT_INPUT_HEIGHT","INPUT_HEIGHT_MAP","large","default","small","popperOptions","modifiers","name","enabled","phase","fn","state","modifiersData","placement","includes","arrow","x","requires","COMPONENT_NAME","_sfc_main","defineComponent","components","ElCascaderPanel","ElInput","ElTooltip","ElScrollbar","ElTag","ElIcon","CircleClose","Check","ArrowDown","directives","Clickoutside","props","CommonProps","size","type","String","validator","isValidComponentSize","placeholder","disabled","Boolean","clearable","filterable","filterMethod","Function","node","keyword","text","separator","showAllLevels","collapseTags","debounce","Number","beforeFilter","popperClass","popperAppendToBody","teleported","useTooltipContentProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","inputInitialHeight","pressDeleteCount","useDeprecateAppendToBody","compatTeleported","useLocale","t","elForm","inject","elFormKey","elFormItem","elFormItemKey","tooltipRef","ref","input","tagWrapper","panel","suggestionPanel","popperVisible","inputHover","filtering","inputValue","searchInputValue","presentTags","suggestions","isOnComposition","isDisabled","computed","inputPlaceholder","realSize","useSize","tagSize","value","multiple","readonly","searchKeyword","checkedNodes","_a","get","set","val","popperPaneRef","_b","_c","visible","updatePopperPosition","nextTick","genTag","key","calcText","hitState","closable","deleteTag","nodes","first","rest","tags","calculateSuggestions","tag","firstNode","updateStyle","suggestionPanelEl","suggestionList","tagWrapperEl","inputInner","height","togglePopperVisible","e","preventDefault","EVENT_CODE","handleClear","code","focusNode","target","lastTag","isPromise","passed","hideSuggestionPanel","handleInput","watch","immediate","onMounted","addResizeListener","onBeforeUnmount","removeResizeListener","presentText","checkedValue","clearBtnVisible","focusFirstNode","getCheckedNodes","class","transition","effect","pure","onHide","withDirectives","_openBlock","_ctx","style","onClick","onKeydown","_cache","onMouseenter","$event","onMouseleave","modelValue","onCompositionupdate","onCompositionend","onFocus","suffix","_withCtx","createVNode","_","openBlock","hit","onClose","createElementVNode","onInput","onCompositionstart","_hoisted_2","createCommentVNode","content","onExpandChange"],"sources":["../../../../../../packages/components/cascader/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-model:visible=\"popperVisible\"\n    :teleported=\"compatTeleported\"\n    :popper-class=\"`el-cascader__dropdown ${popperClass}`\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    transition=\"el-zoom-in-top\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[popperPaneRef]=\"() => togglePopperVisible(false)\"\n        :class=\"[\n          'el-cascader',\n          realSize && `el-cascader--${realSize}`,\n          { 'is-disabled': isDisabled },\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"inputPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"{ 'is-focus': popperVisible }\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"(e) => $emit('focus', e)\"\n          @blur=\"(e) => $emit('blur', e)\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              class=\"el-input__icon icon-circle-close\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"[\n                'el-input__icon',\n                'icon-arrow-down',\n                popperVisible && 'is-reverse',\n              ]\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" class=\"el-cascader__tags\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            type=\"info\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <span>{{ tag.text }}</span>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            class=\"el-cascader__search-input\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"panel\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        class=\"el-cascader__suggestion-panel\"\n        view-class=\"el-cascader__suggestion-list\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              'el-cascader__suggestion-item',\n              item.checked && 'is-checked',\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\"><check /></el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li class=\"el-cascader__empty-text\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  onBeforeUnmount,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\n\nimport { isClient } from '@vueuse/core'\nimport ElCascaderPanel, {\n  CommonProps,\n} from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\n\nimport { elFormKey, elFormItemKey } from '@element-plus/tokens'\nimport { ClickOutside as Clickoutside } from '@element-plus/directives'\nimport { useLocale, useSize } from '@element-plus/hooks'\n\nimport {\n  focusNode,\n  getSibling,\n  addResizeListener,\n  removeResizeListener,\n  isValidComponentSize,\n  isKorean,\n} from '@element-plus/utils'\nimport {\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n} from '@element-plus/constants'\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { ElFormContext, ElFormItemContext } from '@element-plus/tokens'\nimport type {\n  CascaderValue,\n  CascaderNode,\n  Tag,\n} from '@element-plus/components/cascader-panel'\nimport type { ComponentSize } from '@element-plus/constants'\n\ntype cascaderPanelType = InstanceType<typeof ElCascaderPanel>\ntype tooltipType = InstanceType<typeof ElTooltip>\ntype inputType = InstanceType<typeof ElInput>\ntype suggestionPanelType = InstanceType<typeof ElScrollbar>\n\nconst DEFAULT_INPUT_HEIGHT = 40\n\nconst INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28,\n}\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    ElCascaderPanel,\n    ElInput,\n    ElTooltip,\n    ElScrollbar,\n    ElTag,\n    ElIcon,\n    CircleClose,\n    Check,\n    ArrowDown,\n  },\n\n  directives: {\n    Clickoutside,\n  },\n\n  props: {\n    ...CommonProps,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    placeholder: {\n      type: String,\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function as PropType<\n        (node: CascaderNode, keyword: string) => boolean\n      >,\n      default: (node: CascaderNode, keyword: string) =>\n        node.text.includes(keyword),\n    },\n    separator: {\n      type: String,\n      default: ' / ',\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true,\n    },\n    collapseTags: Boolean,\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    beforeFilter: {\n      type: Function as PropType<(value: string) => boolean | Promise<any>>,\n      default: () => true,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n  },\n\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'focus',\n    'blur',\n    'visible-change',\n    'expand-change',\n    'remove-tag',\n  ],\n\n  setup(props, { emit }) {\n    let inputInitialHeight = 0\n    let pressDeleteCount = 0\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n    const { t } = useLocale()\n    const elForm = inject(elFormKey, {} as ElFormContext)\n    const elFormItem = inject(elFormItemKey, {} as ElFormItemContext)\n\n    const tooltipRef: Ref<tooltipType | null> = ref(null)\n    const input: Ref<inputType | null> = ref(null)\n    const tagWrapper = ref(null)\n    const panel: Ref<cascaderPanelType | null> = ref(null)\n    const suggestionPanel: Ref<suggestionPanelType | null> = ref(null)\n    const popperVisible = ref(false)\n    const inputHover = ref(false)\n    const filtering = ref(false)\n    const inputValue = ref('')\n    const searchInputValue = ref('')\n    const presentTags: Ref<Tag[]> = ref([])\n    const suggestions: Ref<CascaderNode[]> = ref([])\n    const isOnComposition = ref(false)\n\n    const isDisabled = computed(() => props.disabled || elForm.disabled)\n    const inputPlaceholder = computed(\n      () => props.placeholder || t('el.cascader.placeholder')\n    )\n    const realSize = useSize()\n    const tagSize = computed(() =>\n      ['small'].includes(realSize.value) ? 'small' : 'default'\n    )\n    const multiple = computed(() => !!props.props.multiple)\n    const readonly = computed(() => !props.filterable || multiple.value)\n    const searchKeyword = computed(() =>\n      multiple.value ? searchInputValue.value : inputValue.value\n    )\n    const checkedNodes: ComputedRef<CascaderNode[]> = computed(\n      () => panel.value?.checkedNodes || []\n    )\n    const clearBtnVisible = computed(() => {\n      if (\n        !props.clearable ||\n        isDisabled.value ||\n        filtering.value ||\n        !inputHover.value\n      )\n        return false\n\n      return !!checkedNodes.value.length\n    })\n    const presentText = computed(() => {\n      const { showAllLevels, separator } = props\n      const nodes = checkedNodes.value\n      return nodes.length\n        ? multiple.value\n          ? ' '\n          : nodes[0].calcText(showAllLevels, separator)\n        : ''\n    })\n\n    const checkedValue = computed<CascaderValue>({\n      get() {\n        return props.modelValue\n      },\n      set(val) {\n        emit(UPDATE_MODEL_EVENT, val)\n        emit(CHANGE_EVENT, val)\n        elFormItem.validate?.('change')\n      },\n    })\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const togglePopperVisible = (visible?: boolean) => {\n      if (isDisabled.value) return\n\n      visible = visible ?? !popperVisible.value\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible\n        input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n        if (visible) {\n          updatePopperPosition()\n          nextTick(panel.value?.scrollToExpandingNode)\n        } else if (props.filterable) {\n          const { value } = presentText\n          inputValue.value = value\n          searchInputValue.value = value\n        }\n\n        emit('visible-change', visible)\n      }\n    }\n\n    const updatePopperPosition = () => {\n      nextTick(() => {\n        tooltipRef.value?.updatePopper()\n      })\n    }\n\n    const hideSuggestionPanel = () => {\n      filtering.value = false\n    }\n\n    const genTag = (node: CascaderNode): Tag => {\n      const { showAllLevels, separator } = props\n      return {\n        node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n      }\n    }\n\n    const deleteTag = (tag: Tag) => {\n      const node = tag.node as CascaderNode\n      node.doCheck(false)\n      panel.value?.calculateCheckedValue()\n      emit('remove-tag', node.valueByOption)\n    }\n\n    const calculatePresentTags = () => {\n      if (!multiple.value) return\n\n      const nodes = checkedNodes.value\n      const tags: Tag[] = []\n\n      if (nodes.length) {\n        const [first, ...rest] = nodes\n        const restCount = rest.length\n\n        tags.push(genTag(first))\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: `+ ${restCount}`,\n              closable: false,\n            })\n          } else {\n            rest.forEach((node) => tags.push(genTag(node)))\n          }\n        }\n      }\n\n      presentTags.value = tags\n    }\n\n    const calculateSuggestions = () => {\n      const { filterMethod, showAllLevels, separator } = props\n      const res = panel.value\n        ?.getFlattedNodes(!props.props.checkStrictly)\n        ?.filter((node) => {\n          if (node.isDisabled) return false\n          node.calcText(showAllLevels, separator)\n          return filterMethod(node, searchKeyword.value)\n        })\n\n      if (multiple.value) {\n        presentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n      }\n\n      filtering.value = true\n      suggestions.value = res!\n      updatePopperPosition()\n    }\n\n    const focusFirstNode = () => {\n      let firstNode!: HTMLElement\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\n          '.el-cascader__suggestion-item'\n        )\n      } else {\n        firstNode = panel.value?.$el.querySelector(\n          '.el-cascader-node[tabindex=\"-1\"]'\n        )\n      }\n\n      if (firstNode) {\n        firstNode.focus()\n        !filtering.value && firstNode.click()\n      }\n    }\n\n    const updateStyle = () => {\n      const inputInner = input.value?.input\n      const tagWrapperEl = tagWrapper.value\n      const suggestionPanelEl = suggestionPanel.value?.$el\n\n      if (!isClient || !inputInner) return\n\n      if (suggestionPanelEl) {\n        const suggestionList = suggestionPanelEl.querySelector(\n          '.el-cascader__suggestion-list'\n        )\n        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n      }\n\n      if (tagWrapperEl) {\n        const { offsetHeight } = tagWrapperEl\n        const height =\n          presentTags.value.length > 0\n            ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n            : `${inputInitialHeight}px`\n        inputInner.style.height = height\n        updatePopperPosition()\n      }\n    }\n\n    const getCheckedNodes = (leafOnly: boolean) => {\n      return panel.value?.getCheckedNodes(leafOnly)\n    }\n\n    const handleExpandChange = (value: CascaderValue) => {\n      updatePopperPosition()\n      emit('expand-change', value)\n    }\n\n    const handleComposition = (event: CompositionEvent) => {\n      const text = (event.target as HTMLInputElement)?.value\n      if (event.type === 'compositionend') {\n        isOnComposition.value = false\n        nextTick(() => handleInput(text))\n      } else {\n        const lastCharacter = text[text.length - 1] || ''\n        isOnComposition.value = !isKorean(lastCharacter)\n      }\n    }\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isOnComposition.value) return\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible()\n          break\n        case EVENT_CODE.down:\n          togglePopperVisible(true)\n          nextTick(focusFirstNode)\n          e.preventDefault()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleClear = () => {\n      panel.value?.clearCheckedNodes()\n      togglePopperVisible(false)\n    }\n\n    const handleSuggestionClick = (node: CascaderNode) => {\n      const { checked } = node\n\n      if (multiple.value) {\n        panel.value?.handleCheckChange(node, !checked, false)\n      } else {\n        !checked && panel.value?.handleCheckChange(node, true, false)\n        togglePopperVisible(false)\n      }\n    }\n\n    const handleSuggestionKeyDown = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement\n      const { code } = e\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down: {\n          const distance = code === EVENT_CODE.up ? -1 : 1\n          focusNode(\n            getSibling(\n              target,\n              distance,\n              '.el-cascader__suggestion-item[tabindex=\"-1\"]'\n            )\n          )\n          break\n        }\n        case EVENT_CODE.enter:\n          target.click()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleDelete = () => {\n      const tags = presentTags.value\n      const lastTag = tags[tags.length - 1]\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n      if (!lastTag || !pressDeleteCount) return\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag)\n      } else {\n        lastTag.hitState = true\n      }\n    }\n\n    const handleFilter = debounce(() => {\n      const { value } = searchKeyword\n\n      if (!value) return\n\n      const passed = props.beforeFilter(value)\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(() => {\n          /* prevent log error */\n        })\n      } else if (passed !== false) {\n        calculateSuggestions()\n      } else {\n        hideSuggestionPanel()\n      }\n    }, props.debounce)\n\n    const handleInput = (val: string, e?: KeyboardEvent) => {\n      !popperVisible.value && togglePopperVisible(true)\n\n      if (e?.isComposing) return\n\n      val ? handleFilter() : hideSuggestionPanel()\n    }\n\n    watch(filtering, updatePopperPosition)\n\n    watch([checkedNodes, isDisabled], calculatePresentTags)\n\n    watch(presentTags, () => {\n      nextTick(() => updateStyle())\n    })\n\n    watch(presentText, (val) => (inputValue.value = val), { immediate: true })\n\n    onMounted(() => {\n      const inputEl = input.value?.$el\n      inputInitialHeight =\n        inputEl?.offsetHeight ||\n        INPUT_HEIGHT_MAP[realSize.value] ||\n        DEFAULT_INPUT_HEIGHT\n      addResizeListener(inputEl, updateStyle)\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(input.value?.$el, updateStyle)\n    })\n\n    return {\n      popperOptions,\n      tooltipRef,\n      popperPaneRef,\n      input,\n      tagWrapper,\n      panel,\n      suggestionPanel,\n      popperVisible,\n      inputHover,\n      inputPlaceholder,\n      filtering,\n      presentText,\n      checkedValue,\n      inputValue,\n      searchInputValue,\n      presentTags,\n      suggestions,\n      isDisabled,\n      isOnComposition,\n      realSize,\n      tagSize,\n      multiple,\n      readonly,\n      clearBtnVisible,\n      // deprecation in ver 2.1.0\n      compatTeleported,\n\n      t,\n      togglePopperVisible,\n      hideSuggestionPanel,\n      deleteTag,\n      focusFirstNode,\n      getCheckedNodes,\n      handleExpandChange,\n      handleKeyDown,\n      handleComposition,\n      handleClear,\n      handleSuggestionClick,\n      handleSuggestionKeyDown,\n      handleDelete,\n      handleInput,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}