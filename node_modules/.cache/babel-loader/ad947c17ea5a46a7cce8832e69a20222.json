{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElMarker\",\n  props: {\n    mark: {\n      type: [String, Object],\n      default: function _default() {\n        return void 0;\n      }\n    }\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"slider\");\n    var label = computed(function () {\n      return typeof props.mark === \"string\" ? props.mark : props.mark.label;\n    });\n    return {\n      ns: ns,\n      label: label\n    };\n  },\n  render: function render() {\n    var _a;\n\n    return h(\"div\", {\n      class: this.ns.e(\"marks-text\"),\n      style: (_a = this.mark) == null ? void 0 : _a.style\n    }, this.label);\n  }\n});\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;IAMKA,YAAaC,gBAAa;AAC7BC,QAAM,UADuB;AAE7BC,SAAO;AACLC,UAAM;AACJC,YAAM,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,eAAS;AAAA,eAAM,MAAN;AAAA;AAFL;AADD,GAFsB;AAQ7BC,OAR6B,iBAQvBN,KARuB,EAQhB;AACX,QAAMO,KAAKC,aAAa,QAAb,CAAX;AACA,QAAMC,QAAQC,SAAS,YAAM;AAC3B,aAAO,OAAOV,MAAMC,IAAb,KAAsB,QAAtB,GAAiCD,MAAMC,IAAvC,GAA8CD,MAAMC,IAAN,CAAWQ,KAAhE;AAAgE,KADpD,CAAd;AAIA,WAAO;AACLF,YADK;AAELE;AAFK,KAAP;AAEE,GAhByB;AAmB7BE,QAnB6B,oBAmBpB;AACP;;AAEE,aACS,KADT,EACc;AACZC,aAAO,KAAKL,EAAL,CAAKM,CAAL,CAAK,YAAL,CADK;AACMC;AADN,KADd,EAIK,UAJL;AAIK;AA1BoB,CAAb","names":["_sfc_main","defineComponent","name","props","mark","type","String","Object","default","setup","ns","useNamespace","label","computed","render","class","e","style"],"sources":["../../../../../../packages/components/slider/src/marker.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { computed, defineComponent, h } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMarker',\n  props: {\n    mark: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      default: () => undefined,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('slider')\n    const label = computed(() => {\n      return typeof props.mark === 'string' ? props.mark : props.mark.label\n    })\n\n    return {\n      ns,\n      label,\n    }\n  },\n  render() {\n    return h(\n      'div',\n      {\n        class: this.ns.e('marks-text'),\n        style: this.mark?.style,\n      },\n      this.label\n    )\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}