{"ast":null,"code":"import { defineComponent, ref, inject, watch, onMounted, unref, onBeforeUnmount, openBlock, createElementBlock, normalizeClass } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { usePopperArrowProps } from './popper.mjs';\nimport { POPPER_CONTENT_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElPopperArrow\",\n  props: usePopperArrowProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"popper\");\n    var arrowRef = ref(null);\n    var popperContentInjection = inject(POPPER_CONTENT_INJECTION_KEY, void 0);\n    watch(function () {\n      return props.arrowOffset;\n    }, function (val) {\n      popperContentInjection.arrowOffset.value = val;\n    });\n    onMounted(function () {\n      popperContentInjection.arrowRef.value = unref(arrowRef);\n    });\n    onBeforeUnmount(function () {\n      popperContentInjection.arrowRef.value = null;\n    });\n    return {\n      ns: ns,\n      arrowRef: arrowRef\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", {\n    ref: \"arrowRef\",\n    class: normalizeClass(_ctx.ns.e(\"arrow\")),\n    \"data-popper-arrow\": \"\"\n  }, null, 2);\n}\n\nvar ElPopperArrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { ElPopperArrow as default };","map":{"version":3,"mappings":";;;;;;;AAkBA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,eADuB;AAE7BC,SAAOC,mBAFsB;AAG7BC,OAH6B,iBAGvBF,KAHuB,EAGhB;AACX,QAAMG,KAAKC,aAAa,QAAb,CAAX;AACA,QAAMC,WAAWC,IAA4B,IAA5B,CAAjB;AACA,QAAMC,yBAAyBC,OAC7BC,4BAD6B,EAE7B,MAF6B,CAA/B;AAKAC,UACE;AAAA,aAAMV,MAAMW,WAAZ;AAAA,KADF,EAEE,UAACC,GAAD,EAAS;AACPL,6BAAuBI,WAAvB,CAAmCE,KAAnC,GAA2CD,GAA3C;AAA2C,KAH/C;AAOAE,cAAU,YAAM;AACdP,6BAAuBF,QAAvB,CAAgCQ,KAAhC,GAAwCE,MAAMV,QAAN,CAAxC;AAA8C,KADhD;AAIAW,oBAAgB,YAAM;AACpBT,6BAAuBF,QAAvB,CAAgCQ,KAAhC,GAAwC,IAAxC;AAAwC,KAD1C;AAIA,WAAO;AACLV,YADK;AAELE;AAFK,KAAP;AAEE;AA5ByB,CAAb,CAAlB;;;sBAjBEY,mBAAmE,MAAnEA,EAAmE;AAA7DX,SAAI,UAAyD;AAA7CY,WAAKC,eAAEC,QAAGC,CAAH,CAAI,OAAJ,CAAFF,CAAwC;AAAvB,yBAAkB;AAAK,GAAnEF,EAA8D,IAA9DA,EAA8D,CAA9DA","names":["_sfc_main","defineComponent","name","props","usePopperArrowProps","setup","ns","useNamespace","arrowRef","ref","popperContentInjection","inject","POPPER_CONTENT_INJECTION_KEY","watch","arrowOffset","val","value","onMounted","unref","onBeforeUnmount","_createElementBlock","class","_normalizeClass","_ctx","e"],"sources":["../../../../../../packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :class=\"ns.e('arrow')\" data-popper-arrow=\"\" />\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  inject,\n  ref,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  unref,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { usePopperArrowProps } from './popper'\nimport { POPPER_CONTENT_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElPopperArrow',\n  props: usePopperArrowProps,\n  setup(props) {\n    const ns = useNamespace('popper')\n    const arrowRef = ref<HTMLSpanElement | null>(null)\n    const popperContentInjection = inject(\n      POPPER_CONTENT_INJECTION_KEY,\n      undefined\n    )!\n\n    watch(\n      () => props.arrowOffset,\n      (val) => {\n        popperContentInjection.arrowOffset.value = val\n      }\n    )\n\n    onMounted(() => {\n      popperContentInjection.arrowRef.value = unref(arrowRef)\n    })\n\n    onBeforeUnmount(() => {\n      popperContentInjection.arrowRef.value = null\n    })\n\n    return {\n      ns,\n      arrowRef,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}