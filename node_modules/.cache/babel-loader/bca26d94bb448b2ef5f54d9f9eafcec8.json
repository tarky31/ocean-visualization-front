{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, inject, ref, watch, nextTick, computed, unref, provide, resolveComponent, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, createElementBlock, createElementVNode, renderSlot, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../../hooks/index.mjs';\nimport '../../../../tokens/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { timePickerDefaultProps } from './props.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isEmpty } from '../../../../utils/types.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { elFormKey, elFormItemKey } from '../../../../tokens/form.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nvar dateEquals = function dateEquals(a, b) {\n  var aIsDate = a instanceof Date;\n  var bIsDate = b instanceof Date;\n\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n\n  return false;\n};\n\nvar valueEquals = function valueEquals(a, b) {\n  var aIsArray = a instanceof Array;\n  var bIsArray = b instanceof Array;\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every(function (item, index) {\n      return dateEquals(item, b[index]);\n    });\n  }\n\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n\n  return false;\n};\n\nvar parser = function parser(date, format, lang) {\n  var day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\n\nvar formatter = function formatter(date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\n\nvar _sfc_main = defineComponent({\n  name: \"Picker\",\n  components: {\n    ElInput: ElInput,\n    ElTooltip: ElTooltip,\n    ElIcon: ElIcon\n  },\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\"],\n  setup: function setup(props, ctx) {\n    var _useLocale = useLocale(),\n        lang = _useLocale.lang;\n\n    var elForm = inject(elFormKey, {});\n    var elFormItem = inject(elFormItemKey, {});\n    var elPopperOptions = inject(\"ElPopperOptions\", {});\n    var refPopper = ref();\n    var inputRef = ref();\n    var pickerVisible = ref(false);\n    var pickerActualVisible = ref(false);\n    var valueOnOpen = ref(null);\n    watch(pickerVisible, function (val) {\n      var _a;\n\n      if (!val) {\n        userInput.value = null;\n        nextTick(function () {\n          emitChange(props.modelValue);\n        });\n        ctx.emit(\"blur\");\n        blurInput();\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"blur\"));\n      } else {\n        valueOnOpen.value = props.modelValue;\n      }\n    });\n\n    var emitChange = function emitChange(val, isClear) {\n      var _a;\n\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit(\"change\", val);\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\"));\n      }\n    };\n\n    var emitInput = function emitInput(val) {\n      if (!valueEquals(props.modelValue, val)) {\n        var formatValue;\n\n        if (Array.isArray(val)) {\n          formatValue = val.map(function (_) {\n            return formatter(_, props.valueFormat, lang.value);\n          });\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value);\n        }\n\n        ctx.emit(\"update:modelValue\", val ? formatValue : val, lang.value);\n      }\n    };\n\n    var refInput = computed(function () {\n      if (inputRef.value) {\n        var _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n\n      return [];\n    });\n    var refStartInput = computed(function () {\n      return refInput == null ? void 0 : refInput.value[0];\n    });\n    var refEndInput = computed(function () {\n      return refInput == null ? void 0 : refInput.value[1];\n    });\n\n    var setSelectionRange = function setSelectionRange(start, end, pos) {\n      var _inputs = refInput.value;\n      if (!_inputs.length) return;\n\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n\n        _inputs[1].focus();\n      }\n    };\n\n    var onPick = function onPick() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      pickerVisible.value = visible;\n      var result;\n\n      if (Array.isArray(date)) {\n        result = date.map(function (_) {\n          return _.toDate();\n        });\n      } else {\n        result = date ? date.toDate() : date;\n      }\n\n      userInput.value = null;\n      emitInput(result);\n    };\n\n    var onBeforeShow = function onBeforeShow() {\n      pickerActualVisible.value = true;\n    };\n\n    var onShow = function onShow() {\n      ctx.emit(\"visible-change\", true);\n    };\n\n    var onHide = function onHide() {\n      pickerActualVisible.value = false;\n      ctx.emit(\"visible-change\", false);\n    };\n\n    var focus = function focus() {\n      var focusStartInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var input = refStartInput.value;\n\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value;\n      }\n\n      if (input) {\n        input.focus();\n      }\n    };\n\n    var handleFocus = function handleFocus(e) {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return;\n      pickerVisible.value = true;\n      ctx.emit(\"focus\", e);\n    };\n\n    var handleBlur = function handleBlur() {\n      var _a;\n\n      (_a = refPopper.value) == null ? void 0 : _a.onClose();\n      blurInput();\n    };\n\n    var pickerDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var parsedValue = computed(function () {\n      var result;\n\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map(function (_) {\n            return parser(_, props.valueFormat, lang.value);\n          });\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        var availableResult = pickerOptions.value.getRangeAvailableTime(result);\n\n        if (!isEqual(availableResult, result)) {\n          result = availableResult;\n          emitInput(Array.isArray(result) ? result.map(function (_) {\n            return _.toDate();\n          }) : result.toDate());\n        }\n      }\n\n      if (Array.isArray(result) && result.some(function (_) {\n        return !_;\n      })) {\n        result = [];\n      }\n\n      return result;\n    });\n    var displayValue = computed(function () {\n      if (!pickerOptions.value.panelReady) return;\n      var formattedValue = formatDayjsToString(parsedValue.value);\n\n      if (Array.isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n\n      if (!isTimePicker.value && valueIsEmpty.value) return;\n      if (!pickerVisible.value && valueIsEmpty.value) return;\n\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n\n      return \"\";\n    });\n    var isTimeLikePicker = computed(function () {\n      return props.type.includes(\"time\");\n    });\n    var isTimePicker = computed(function () {\n      return props.type.startsWith(\"time\");\n    });\n    var isDatesPicker = computed(function () {\n      return props.type === \"dates\";\n    });\n    var triggerIcon = computed(function () {\n      return props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar);\n    });\n    var showClose = ref(false);\n\n    var onClearIconClick = function onClearIconClick(event) {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (showClose.value) {\n        event.stopPropagation();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n\n    var valueIsEmpty = computed(function () {\n      return !props.modelValue || Array.isArray(props.modelValue) && !props.modelValue.length;\n    });\n\n    var onMouseEnter = function onMouseEnter() {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n\n    var onMouseLeave = function onMouseLeave() {\n      showClose.value = false;\n    };\n\n    var isRangeInput = computed(function () {\n      return props.type.indexOf(\"range\") > -1;\n    });\n    var pickerSize = useSize();\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = refPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var popperEl = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var actualInputRef = computed(function () {\n      var _a;\n\n      if (unref(isRangeInput)) {\n        return unref(inputRef);\n      }\n\n      return (_a = unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    onClickOutside(actualInputRef, function (e) {\n      var unrefedPopperEl = unref(popperEl);\n      var inputEl = unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    var userInput = ref(null);\n\n    var handleChange = function handleChange() {\n      if (userInput.value) {\n        var value = parseUserInputToDayjs(displayValue.value);\n\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(Array.isArray(value) ? value.map(function (_) {\n              return _.toDate();\n            }) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n\n    var blurInput = function blurInput() {\n      refInput.value.forEach(function (input) {\n        return input.blur();\n      });\n    };\n\n    var parseUserInputToDayjs = function parseUserInputToDayjs(value) {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n\n    var formatDayjsToString = function formatDayjsToString(value) {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n\n    var isValidValue = function isValidValue(value) {\n      return pickerOptions.value.isValidValue(value);\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false;\n        event.stopPropagation();\n        return;\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange();\n          pickerVisible.value = false;\n          event.stopPropagation();\n        } else {\n          setTimeout(function () {\n            if (refInput.value.indexOf(document.activeElement) === -1) {\n              pickerVisible.value = false;\n              blurInput();\n            }\n          }, 0);\n        }\n\n        return;\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n\n        event.stopPropagation();\n        return;\n      }\n\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event);\n      }\n    };\n\n    var onUserInput = function onUserInput(e) {\n      userInput.value = e;\n    };\n\n    var handleStartInput = function handleStartInput(event) {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]];\n      } else {\n        userInput.value = [event.target.value, null];\n      }\n    };\n\n    var handleEndInput = function handleEndInput(event) {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value];\n      } else {\n        userInput.value = [null, event.target.value];\n      }\n    };\n\n    var handleStartChange = function handleStartChange() {\n      var value = parseUserInputToDayjs(userInput.value && userInput.value[0]);\n\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]];\n        var newValue = [value, parsedValue.value && parsedValue.value[1]];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var handleEndChange = function handleEndChange() {\n      var value = parseUserInputToDayjs(userInput.value && userInput.value[1]);\n\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)];\n        var newValue = [parsedValue.value && parsedValue.value[0], value];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var pickerOptions = ref({});\n\n    var onSetPickerOption = function onSetPickerOption(e) {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n\n    var onCalendarChange = function onCalendarChange(e) {\n      ctx.emit(\"calendar-change\", e);\n    };\n\n    var onPanelChange = function onPanelChange(value, mode, view) {\n      ctx.emit(\"panel-change\", value, mode, view);\n    };\n\n    provide(\"EP_PICKER_BASE\", {\n      props: props\n    });\n    return {\n      elPopperOptions: elPopperOptions,\n      isDatesPicker: isDatesPicker,\n      handleEndChange: handleEndChange,\n      handleStartChange: handleStartChange,\n      handleStartInput: handleStartInput,\n      handleEndInput: handleEndInput,\n      onUserInput: onUserInput,\n      handleChange: handleChange,\n      handleKeydown: handleKeydown,\n      popperPaneRef: popperPaneRef,\n      onClickOutside: onClickOutside,\n      pickerSize: pickerSize,\n      isRangeInput: isRangeInput,\n      onMouseLeave: onMouseLeave,\n      onMouseEnter: onMouseEnter,\n      onClearIconClick: onClearIconClick,\n      showClose: showClose,\n      triggerIcon: triggerIcon,\n      onPick: onPick,\n      handleFocus: handleFocus,\n      handleBlur: handleBlur,\n      pickerVisible: pickerVisible,\n      pickerActualVisible: pickerActualVisible,\n      displayValue: displayValue,\n      parsedValue: parsedValue,\n      setSelectionRange: setSelectionRange,\n      refPopper: refPopper,\n      inputRef: inputRef,\n      pickerDisabled: pickerDisabled,\n      onSetPickerOption: onSetPickerOption,\n      onCalendarChange: onCalendarChange,\n      onPanelChange: onPanelChange,\n      focus: focus,\n      onShow: onShow,\n      onBeforeShow: onBeforeShow,\n      onHide: onHide\n    };\n  }\n});\n\nvar _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nvar _hoisted_2 = {\n  class: \"el-range-separator\"\n};\nvar _hoisted_3 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"refPopper\",\n    visible: _ctx.pickerVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = function ($event) {\n      return _ctx.pickerVisible = $event;\n    }),\n    effect: \"light\",\n    pure: \"\",\n    trigger: \"click\"\n  }, _ctx.$attrs, {\n    \"append-to-body\": \"\",\n    transition: \"el-zoom-in-top\",\n    \"popper-class\": \"el-picker__popper \".concat(_ctx.popperClass),\n    \"popper-options\": _ctx.elPopperOptions,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"hide-after\": 0,\n    persistent: \"\",\n    onBeforeShow: _ctx.onBeforeShow,\n    onShow: _ctx.onShow,\n    onHide: _ctx.onHide\n  }), {\n    default: withCtx(function () {\n      return [!_ctx.isRangeInput ? (openBlock(), createBlock(_component_el_input, {\n        key: 0,\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"model-value\": _ctx.displayValue,\n        name: _ctx.name,\n        size: _ctx.pickerSize,\n        disabled: _ctx.pickerDisabled,\n        placeholder: _ctx.placeholder,\n        class: normalizeClass([\"el-date-editor\", [\"el-date-editor--\" + _ctx.type, _ctx.$attrs.class || void 0]]),\n        style: normalizeStyle(_ctx.$attrs.style || void 0),\n        readonly: !_ctx.editable || _ctx.readonly || _ctx.isDatesPicker || _ctx.type === \"week\",\n        onInput: _ctx.onUserInput,\n        onFocus: _ctx.handleFocus,\n        onKeydown: _ctx.handleKeydown,\n        onChange: _ctx.handleChange,\n        onMouseenter: _ctx.onMouseEnter,\n        onMouseleave: _ctx.onMouseLeave,\n        onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"]))\n      }, {\n        prefix: withCtx(function () {\n          return [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n            key: 0,\n            class: \"el-input__icon\",\n            onClick: _ctx.handleFocus\n          }, {\n            default: withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))];\n            }),\n            _: 1\n          }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        suffix: withCtx(function () {\n          return [_ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n            key: 0,\n            class: \"el-input__icon clear-icon\",\n            onClick: _ctx.onClearIconClick\n          }, {\n            default: withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n            }),\n            _: 1\n          }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1\n      }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"onInput\", \"onFocus\", \"onKeydown\", \"onChange\", \"onMouseenter\", \"onMouseleave\"])) : (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        ref: \"inputRef\",\n        class: normalizeClass([\"el-date-editor el-range-editor el-input__inner\", [\"el-date-editor--\" + _ctx.type, _ctx.pickerSize ? \"el-range-editor--\".concat(_ctx.pickerSize) : \"\", _ctx.pickerDisabled ? \"is-disabled\" : \"\", _ctx.pickerVisible ? \"is-active\" : \"\", _ctx.$attrs.class || void 0]]),\n        style: normalizeStyle(_ctx.$attrs.style || void 0),\n        onClick: _cache[7] || (_cache[7] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[8] || (_cache[8] = function () {\n          return _ctx.onMouseEnter && _ctx.onMouseEnter.apply(_ctx, arguments);\n        }),\n        onMouseleave: _cache[9] || (_cache[9] = function () {\n          return _ctx.onMouseLeave && _ctx.onMouseLeave.apply(_ctx, arguments);\n        }),\n        onKeydown: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleKeydown && _ctx.handleKeydown.apply(_ctx, arguments);\n        })\n      }, [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: \"el-input__icon el-range__icon\",\n        onClick: _ctx.handleFocus\n      }, {\n        default: withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))];\n        }),\n        _: 1\n      }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"input\", {\n        id: _ctx.id && _ctx.id[0],\n        autocomplete: \"off\",\n        name: _ctx.name && _ctx.name[0],\n        placeholder: _ctx.startPlaceholder,\n        value: _ctx.displayValue && _ctx.displayValue[0],\n        disabled: _ctx.pickerDisabled,\n        readonly: !_ctx.editable || _ctx.readonly,\n        class: \"el-range-input\",\n        onInput: _cache[1] || (_cache[1] = function () {\n          return _ctx.handleStartInput && _ctx.handleStartInput.apply(_ctx, arguments);\n        }),\n        onChange: _cache[2] || (_cache[2] = function () {\n          return _ctx.handleStartChange && _ctx.handleStartChange.apply(_ctx, arguments);\n        }),\n        onFocus: _cache[3] || (_cache[3] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        })\n      }, null, 40, _hoisted_1), renderSlot(_ctx.$slots, \"range-separator\", {}, function () {\n        return [createElementVNode(\"span\", _hoisted_2, toDisplayString(_ctx.rangeSeparator), 1)];\n      }), createElementVNode(\"input\", {\n        id: _ctx.id && _ctx.id[1],\n        autocomplete: \"off\",\n        name: _ctx.name && _ctx.name[1],\n        placeholder: _ctx.endPlaceholder,\n        value: _ctx.displayValue && _ctx.displayValue[1],\n        disabled: _ctx.pickerDisabled,\n        readonly: !_ctx.editable || _ctx.readonly,\n        class: \"el-range-input\",\n        onFocus: _cache[4] || (_cache[4] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        }),\n        onInput: _cache[5] || (_cache[5] = function () {\n          return _ctx.handleEndInput && _ctx.handleEndInput.apply(_ctx, arguments);\n        }),\n        onChange: _cache[6] || (_cache[6] = function () {\n          return _ctx.handleEndChange && _ctx.handleEndChange.apply(_ctx, arguments);\n        })\n      }, null, 40, _hoisted_3), _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([\"el-input__icon el-range__close-icon\", {\n          \"el-range__close-icon--hidden\": !_ctx.showClose\n        }]),\n        onClick: _ctx.onClearIconClick\n      }, {\n        default: withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 38))];\n    }),\n    content: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\", {\n        visible: _ctx.pickerVisible,\n        actualVisible: _ctx.pickerActualVisible,\n        parsedValue: _ctx.parsedValue,\n        format: _ctx.format,\n        unlinkPanels: _ctx.unlinkPanels,\n        type: _ctx.type,\n        defaultValue: _ctx.defaultValue,\n        onPick: _cache[11] || (_cache[11] = function () {\n          return _ctx.onPick && _ctx.onPick.apply(_ctx, arguments);\n        }),\n        onSelectRange: _cache[12] || (_cache[12] = function () {\n          return _ctx.setSelectionRange && _ctx.setSelectionRange.apply(_ctx, arguments);\n        }),\n        onSetPickerOption: _cache[13] || (_cache[13] = function () {\n          return _ctx.onSetPickerOption && _ctx.onSetPickerOption.apply(_ctx, arguments);\n        }),\n        onCalendarChange: _cache[14] || (_cache[14] = function () {\n          return _ctx.onCalendarChange && _ctx.onCalendarChange.apply(_ctx, arguments);\n        }),\n        onPanelChange: _cache[15] || (_cache[15] = function () {\n          return _ctx.onPanelChange && _ctx.onPanelChange.apply(_ctx, arguments);\n        }),\n        onMousedown: _cache[16] || (_cache[16] = withModifiers(function () {}, [\"stop\"]))\n      })];\n    }),\n    _: 3\n  }, 16, [\"visible\", \"popper-class\", \"popper-options\", \"onBeforeShow\", \"onShow\", \"onHide\"]);\n}\n\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { CommonPicker as default };","map":{"version":3,"mappings":"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","names":["dateEquals","a","b","aIsDate","Date","bIsDate","getTime","valueEquals","aIsArray","Array","bIsArray","length","every","item","index","parser","date","format","lang","day","isEmpty","dayjs","locale","isValid","formatter","_sfc_main","defineComponent","name","components","ElInput","ElTooltip","ElIcon","props","timePickerDefaultProps","emits","setup","ctx","useLocale","elForm","inject","elFormKey","elFormItem","elFormItemKey","elPopperOptions","refPopper","ref","inputRef","pickerVisible","pickerActualVisible","valueOnOpen","watch","val","_a","userInput","nextTick","emitChange","blurInput","formatValue","valueFormat","value","refInput","setSelectionRange","_inputs","start","end","focus","onPick","result","emitInput","emit","onHide","input","pickerDisabled","e","getDefaultValue","modelValue","getRangeAvailableTime","panelReady","formattedValue","isTimeLikePicker","isTimePicker","isDatesPicker","triggerIcon","onClearIconClick","event","showClose","pickerOptions","valueIsEmpty","computed","onMouseEnter","onMouseLeave","isRangeInput","popperPaneRef","_b","unref","onClickOutside","parseUserInput","formatDayjsToString","handleKeydown","handleChange","setTimeout","indexOf","document","activeElement","code","handleStartInput","newValue","parsedValue","onSetPickerOption","provide","handleEndChange","handleStartChange","handleEndInput","onUserInput","pickerSize","handleFocus","handleBlur","displayValue","onCalendarChange","class","visible","_cache","effect","pure","trigger","_ctx","transition","onBeforeShow","onShow","default","key","id","size","disabled","placeholder","style","readonly","onInput","onFocus","onKeydown","onChange","onMouseleave","onClick","prefix","_","suffix","createCommentVNode","openBlock","onMouseenter","createElementVNode","autocomplete","_hoisted_1","renderSlot","_createElementVNode","_createBlock","content","actualVisible","unlinkPanels","type","defaultValue","onSelectRange"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    v-model:visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    append-to-body\n    transition=\"el-zoom-in-top\"\n    :popper-class=\"`el-picker__popper ${popperClass}`\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"id\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        class=\"el-date-editor\"\n        :class=\"['el-date-editor--' + type, $attrs.class || undefined]\"\n        :style=\"$attrs.style || undefined\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n        @change=\"handleChange\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            class=\"el-input__icon\"\n            @click=\"handleFocus\"\n          >\n            <component :is=\"triggerIcon\"></component>\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            class=\"el-input__icon clear-icon\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        class=\"el-date-editor el-range-editor el-input__inner\"\n        :class=\"[\n          'el-date-editor--' + type,\n          pickerSize ? `el-range-editor--${pickerSize}` : '',\n          pickerDisabled ? 'is-disabled' : '',\n          pickerVisible ? 'is-active' : '',\n          $attrs.class || undefined,\n        ]\"\n        :style=\"$attrs.style || undefined\"\n        @click=\"handleFocus\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @keydown=\"handleKeydown\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          class=\"el-input__icon el-range__icon\"\n          @click=\"handleFocus\"\n        >\n          <component :is=\"triggerIcon\"></component>\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          class=\"el-range-input\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocus\"\n        />\n        <slot name=\"range-separator\">\n          <span class=\"el-range-separator\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          class=\"el-range-input\"\n          @focus=\"handleFocus\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          class=\"el-input__icon el-range__close-icon\"\n          :class=\"{\n            'el-range__close-icon--hidden': !showClose,\n          }\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      ></slot>\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  computed,\n  nextTick,\n  inject,\n  watch,\n  provide,\n  unref,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useSize } from '@element-plus/hooks'\nimport { elFormKey, elFormItemKey } from '@element-plus/tokens'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { isEmpty } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Clock, Calendar } from '@element-plus/icons-vue'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { ElFormContext, ElFormItemContext } from '@element-plus/tokens'\nimport type { Options } from '@popperjs/core'\n\ninterface PickerOptions {\n  isValidValue: (date: Dayjs) => boolean\n  handleKeydown: (event: KeyboardEvent) => void\n  parseUserInput: (value: Dayjs) => dayjs.Dayjs\n  formatToString: (value: Dayjs) => string | string[]\n  getRangeAvailableTime: (date: Dayjs) => dayjs.Dayjs\n  getDefaultValue: () => Dayjs\n  panelReady: boolean\n  handleClear: () => void\n}\n\n// Date object and string\nconst dateEquals = function (a: Date | any, b: Date | any) {\n  const aIsDate = a instanceof Date\n  const bIsDate = b instanceof Date\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime()\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b\n  }\n  return false\n}\n\nconst valueEquals = function (a: Array<Date> | any, b: Array<Date> | any) {\n  const aIsArray = a instanceof Array\n  const bIsArray = b instanceof Array\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false\n    }\n    return (a as Array<Date>).every((item, index) => dateEquals(item, b[index]))\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b)\n  }\n  return false\n}\n\nconst parser = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n): Dayjs {\n  const day =\n    isEmpty(format) || format === 'x'\n      ? dayjs(date).locale(lang)\n      : dayjs(date, format).locale(lang)\n  return day.isValid() ? day : undefined\n}\n\nconst formatter = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n) {\n  if (isEmpty(format)) return date\n  if (format === 'x') return +date\n  return dayjs(date).locale(lang).format(format)\n}\n\nexport default defineComponent({\n  name: 'Picker',\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon,\n  },\n  props: timePickerDefaultProps,\n  emits: [\n    'update:modelValue',\n    'change',\n    'focus',\n    'blur',\n    'calendar-change',\n    'panel-change',\n    'visible-change',\n  ],\n  setup(props, ctx) {\n    const { lang } = useLocale()\n\n    const elForm = inject(elFormKey, {} as ElFormContext)\n    const elFormItem = inject(elFormItemKey, {} as ElFormItemContext)\n    const elPopperOptions = inject('ElPopperOptions', {} as Options)\n\n    const refPopper = ref<InstanceType<typeof ElTooltip>>()\n    const inputRef = ref<HTMLElement | ComponentPublicInstance>()\n    const pickerVisible = ref(false)\n    const pickerActualVisible = ref(false)\n    const valueOnOpen = ref(null)\n\n    watch(pickerVisible, (val) => {\n      if (!val) {\n        userInput.value = null\n        nextTick(() => {\n          emitChange(props.modelValue)\n        })\n        ctx.emit('blur')\n        blurInput()\n        props.validateEvent && elFormItem.validate?.('blur')\n      } else {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n    const emitChange = (val, isClear?: boolean) => {\n      // determine user real change only\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit('change', val)\n        props.validateEvent && elFormItem.validate?.('change')\n      }\n    }\n    const emitInput = (val) => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue\n        if (Array.isArray(val)) {\n          formatValue = val.map((_) =>\n            formatter(_, props.valueFormat, lang.value)\n          )\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value)\n        }\n        ctx.emit('update:modelValue', val ? formatValue : val, lang.value)\n      }\n    }\n    const refInput = computed<HTMLInputElement[]>(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value\n          ? inputRef.value\n          : (inputRef.value as any as ComponentPublicInstance).$el\n        return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n      }\n      return []\n    })\n    const refStartInput = computed(() => {\n      return refInput?.value[0]\n    })\n    const refEndInput = computed(() => {\n      return refInput?.value[1]\n    })\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value\n      if (!_inputs.length) return\n      if (!pos || pos === 'min') {\n        _inputs[0].setSelectionRange(start, end)\n        _inputs[0].focus()\n      } else if (pos === 'max') {\n        _inputs[1].setSelectionRange(start, end)\n        _inputs[1].focus()\n      }\n    }\n    const onPick = (date: any = '', visible = false) => {\n      pickerVisible.value = visible\n      let result\n      if (Array.isArray(date)) {\n        result = date.map((_) => _.toDate())\n      } else {\n        // clear btn emit null\n        result = date ? date.toDate() : date\n      }\n      userInput.value = null\n      emitInput(result)\n    }\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true\n    }\n\n    const onShow = () => {\n      ctx.emit('visible-change', true)\n    }\n\n    const onHide = () => {\n      pickerActualVisible.value = false\n      ctx.emit('visible-change', false)\n    }\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value\n      }\n      if (input) {\n        input.focus()\n      }\n    }\n\n    const handleFocus = (e) => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return\n      pickerVisible.value = true\n      ctx.emit('focus', e)\n    }\n\n    const handleBlur = () => {\n      refPopper.value?.onClose()\n      blurInput()\n    }\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled\n    })\n\n    const parsedValue = computed(() => {\n      let result\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue()\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map((_) =>\n            parser(_, props.valueFormat, lang.value)\n          )\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value)\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult =\n          pickerOptions.value.getRangeAvailableTime(result)\n        if (!isEqual(availableResult, result)) {\n          result = availableResult\n          emitInput(\n            Array.isArray(result)\n              ? result.map((_) => _.toDate())\n              : result.toDate()\n          )\n        }\n      }\n      if (Array.isArray(result) && result.some((_) => !_)) {\n        result = []\n      }\n      return result\n    })\n\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return\n      const formattedValue = formatDayjsToString(parsedValue.value)\n      if (Array.isArray(userInput.value)) {\n        return [\n          userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n          userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n        ]\n      } else if (userInput.value !== null) {\n        return userInput.value\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return\n      if (!pickerVisible.value && valueIsEmpty.value) return\n      if (formattedValue) {\n        return isDatesPicker.value\n          ? (formattedValue as Array<string>).join(', ')\n          : formattedValue\n      }\n      return ''\n    })\n\n    const isTimeLikePicker = computed(() => props.type.includes('time'))\n\n    const isTimePicker = computed(() => props.type.startsWith('time'))\n\n    const isDatesPicker = computed(() => props.type === 'dates')\n\n    const triggerIcon = computed(\n      () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n    )\n\n    const showClose = ref(false)\n\n    const onClearIconClick = (event) => {\n      if (props.readonly || pickerDisabled.value) return\n      if (showClose.value) {\n        event.stopPropagation()\n        emitInput(null)\n        emitChange(null, true)\n        showClose.value = false\n        pickerVisible.value = false\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n      }\n    }\n    const valueIsEmpty = computed(() => {\n      return (\n        !props.modelValue ||\n        (Array.isArray(props.modelValue) && !props.modelValue.length)\n      )\n    })\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true\n      }\n    }\n    const onMouseLeave = () => {\n      showClose.value = false\n    }\n    const isRangeInput = computed(() => {\n      return props.type.indexOf('range') > -1\n    })\n\n    const pickerSize = useSize()\n\n    const popperPaneRef = computed(() => {\n      return refPopper.value?.popperRef?.contentRef\n    })\n\n    const popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n    const actualInputRef = computed(() => {\n      if (unref(isRangeInput)) {\n        return unref(inputRef)\n      }\n\n      return (unref(inputRef) as ComponentPublicInstance)?.$el\n    })\n\n    onClickOutside(actualInputRef, (e: PointerEvent) => {\n      const unrefedPopperEl = unref(popperEl)\n      const inputEl = unref(actualInputRef)\n      if (\n        (unrefedPopperEl &&\n          (e.target === unrefedPopperEl ||\n            e.composedPath().includes(unrefedPopperEl))) ||\n        e.target === inputEl ||\n        e.composedPath().includes(inputEl)\n      )\n        return\n      pickerVisible.value = false\n    })\n\n    const userInput = ref(null)\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value)\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(\n              Array.isArray(value)\n                ? value.map((_) => _.toDate())\n                : value.toDate()\n            )\n            userInput.value = null\n          }\n        }\n      }\n      if (userInput.value === '') {\n        emitInput(null)\n        emitChange(null)\n        userInput.value = null\n      }\n    }\n\n    const blurInput = () => {\n      refInput.value.forEach((input) => input.blur())\n    }\n\n    const parseUserInputToDayjs = (value) => {\n      if (!value) return null\n      return pickerOptions.value.parseUserInput(value)\n    }\n\n    const formatDayjsToString = (value) => {\n      if (!value) return null\n      return pickerOptions.value.formatToString(value)\n    }\n\n    const isValidValue = (value) => {\n      return pickerOptions.value.isValidValue(value)\n    }\n\n    const handleKeydown = (event) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false\n        event.stopPropagation()\n        return\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange()\n          pickerVisible.value = false\n          event.stopPropagation()\n        } else {\n          // user may change focus between two input\n          setTimeout(() => {\n            if (refInput.value.indexOf(document.activeElement) === -1) {\n              pickerVisible.value = false\n              blurInput()\n            }\n          }, 0)\n        }\n        return\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (\n          userInput.value === null ||\n          userInput.value === '' ||\n          isValidValue(parseUserInputToDayjs(displayValue.value))\n        ) {\n          handleChange()\n          pickerVisible.value = false\n        }\n        event.stopPropagation()\n        return\n      }\n\n      // if user is typing, do not let picker handle key input\n      if (userInput.value) {\n        event.stopPropagation()\n        return\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event)\n      }\n    }\n    const onUserInput = (e) => {\n      userInput.value = e\n    }\n\n    const handleStartInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]]\n      } else {\n        userInput.value = [event.target.value, null]\n      }\n    }\n\n    const handleEndInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value]\n      } else {\n        userInput.value = [null, event.target.value]\n      }\n    }\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0])\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]]\n        const newValue = [value, parsedValue.value && parsedValue.value[1]]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1])\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)]\n        const newValue = [parsedValue.value && parsedValue.value[0], value]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const pickerOptions = ref<Partial<PickerOptions>>({})\n    const onSetPickerOption = <T extends keyof PickerOptions>(\n      e: [T, PickerOptions[T]]\n    ) => {\n      pickerOptions.value[e[0]] = e[1]\n      pickerOptions.value.panelReady = true\n    }\n\n    const onCalendarChange = (e) => {\n      ctx.emit('calendar-change', e)\n    }\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit('panel-change', value, mode, view)\n    }\n\n    provide('EP_PICKER_BASE', {\n      props,\n    })\n\n    return {\n      // injected popper options\n      elPopperOptions,\n\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}