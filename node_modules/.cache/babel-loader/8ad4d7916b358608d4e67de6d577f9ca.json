{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"tree\");\n    var nodeInstance = inject(\"NodeInstance\");\n    var tree = inject(\"RootTree\");\n    return function () {\n      var node = props.node;\n      var data = node.data,\n          store = node.store;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node: node,\n        data: data,\n        store: store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node: node,\n        data: data\n      }) : h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node.label]);\n    };\n  }\n});\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;IAOKA,YAAaC,gBAAa;AAC7BC,QAAM,mBADuB;AAE7BC,SAAO;AACLC,UAAM;AACJC,YAAMC,MADF;AAEJC,gBAAU;AAFN,KADD;AAKLC,mBAAeC;AALV,GAFsB;AAS7BC,OAT6B,iBASvBP,KATuB,EAShB;AACX,QAAMQ,KAAKC,aAAa,MAAb,CAAX;AACA,QAAMC,eAAeC,OAAkC,cAAlC,CAArB;AACA,QAAMC,OAAOD,OAAqB,UAArB,CAAb;AACA,WAAO,YAAM;AACX,UAAMV,OAAOD,MAAMC,IAAnB;AACA,UAAQY,IAAR,GAAwBZ,IAAxB,CAAQY,IAAR;AAAA,UAAcC,KAAd,GAAwBb,IAAxB,CAAca,KAAd;AACA,aAAOd,MAAMK,aAAN,GACHL,MAAMK,aAAN,CAAoBU,CAApB,EAAuB;AAAEC,eAAON,YAAT;AAAuBT,kBAAvB;AAA6BY,kBAA7B;AAAmCC;AAAnC,OAAvB,CADG,GAEHF,KAAKK,GAAL,CAASC,KAAT,CAAeC,OAAf,GACAP,KAAKK,GAAL,CAASC,KAAT,CAAeC,OAAf,CAAuB;AAAElB,kBAAF;AAAQY;AAAR,OAAvB,CADA,GAEAE,EAAE,MAAF,EAAU;AAAEK,eAAOZ,GAAGa,EAAH,CAAM,MAAN,EAAc,OAAd;AAAT,OAAV,EAA6C,CAACpB,KAAKqB,KAAN,CAA7C,CAJJ;AAIuD,KAPzD;AAOyD;AApB9B,CAAb","names":["_sfc_main","defineComponent","name","props","node","type","Object","required","renderContent","Function","setup","ns","useNamespace","nodeInstance","inject","tree","data","store","h","_self","ctx","slots","default","class","be","label"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { h, defineComponent, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}