{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, reactive, toRefs, getCurrentInstance, onBeforeUnmount, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, renderSlot, createElementVNode, toDisplayString, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useOption } from './useOption.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElOption\",\n  componentName: \"ElOption\",\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object]\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"select\");\n    var states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false\n    });\n\n    var _useOption = useOption(props, states),\n        currentLabel = _useOption.currentLabel,\n        itemSelected = _useOption.itemSelected,\n        isDisabled = _useOption.isDisabled,\n        select = _useOption.select,\n        hoverItem = _useOption.hoverItem;\n\n    var _toRefs = toRefs(states),\n        visible = _toRefs.visible,\n        hover = _toRefs.hover;\n\n    var vm = getCurrentInstance().proxy;\n    var key = vm.value;\n    select.onOptionCreate(vm);\n    onBeforeUnmount(function () {\n      var selected = select.selected;\n      var selectedOptions = select.props.multiple ? selected : [selected];\n      var doesExist = select.cachedOptions.has(key);\n      var doesSelected = selectedOptions.some(function (item) {\n        return item.value === vm.value;\n      });\n\n      if (doesExist && !doesSelected) {\n        select.cachedOptions.delete(key);\n      }\n\n      select.onOptionDestroy(key);\n    });\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm, true);\n      }\n    }\n\n    return {\n      ns: ns,\n      currentLabel: currentLabel,\n      itemSelected: itemSelected,\n      isDisabled: isDisabled,\n      select: select,\n      hoverItem: hoverItem,\n      visible: visible,\n      hover: hover,\n      selectOptionClick: selectOptionClick,\n      states: states\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"li\", {\n    class: normalizeClass([_ctx.ns.be(\"dropdown\", \"item\"), _ctx.ns.is(\"disabled\", _ctx.isDisabled), {\n      selected: _ctx.itemSelected,\n      hover: _ctx.hover\n    }]),\n    onMouseenter: _cache[0] || (_cache[0] = function () {\n      return _ctx.hoverItem && _ctx.hoverItem.apply(_ctx, arguments);\n    }),\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.selectOptionClick && _ctx.selectOptionClick.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createElementVNode(\"span\", null, toDisplayString(_ctx.currentLabel), 1)];\n  })], 34)), [[vShow, _ctx.visible]]);\n}\n\nvar Option = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Option as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","componentName","props","value","required","type","String","Number","Boolean","Object","label","created","disabled","default","setup","ns","useNamespace","states","reactive","index","groupDisabled","visible","hitState","hover","useOption","currentLabel","itemSelected","isDisabled","select","hoverItem","toRefs","vm","getCurrentInstance","proxy","key","onOptionCreate","onBeforeUnmount","selected","selectedOptions","multiple","doesExist","cachedOptions","has","doesSelected","some","item","delete","onOptionDestroy","handleOptionSelect","selectOptionClick","_createElementBlock","class","_normalizeClass","_ctx","be","is","onMouseenter","_cache","onClick","_renderSlot","_createElementVNode","toDisplayString"],"sources":["../../../../../../packages/components/select/src/option.vue"],"sourcesContent":["<template>\n  <li\n    v-show=\"visible\"\n    :class=\"[\n      ns.be('dropdown', 'item'),\n      ns.is('disabled', isDisabled),\n      {\n        selected: itemSelected,\n        hover,\n      },\n    ]\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  reactive,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport type { SelectOptionProxy } from './token'\n\nexport default defineComponent({\n  name: 'ElOption',\n  componentName: 'ElOption',\n\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object],\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const ns = useNamespace('select')\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false,\n    })\n\n    const { currentLabel, itemSelected, isDisabled, select, hoverItem } =\n      useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = getCurrentInstance().proxy\n    const key = (vm as unknown as SelectOptionProxy).value\n    select.onOptionCreate(vm as unknown as SelectOptionProxy)\n\n    onBeforeUnmount(() => {\n      const { selected } = select\n      const selectedOptions = select.props.multiple ? selected : [selected]\n      const doesExist = select.cachedOptions.has(key)\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === (vm as unknown as SelectOptionProxy).value\n      })\n      // if option is not selected, remove it from cache\n      if (doesExist && !doesSelected) {\n        select.cachedOptions.delete(key)\n      }\n      select.onOptionDestroy(key)\n    })\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm, true)\n      }\n    }\n\n    return {\n      ns,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}