{"ast":null,"code":"import _toConsumableArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, inject, ref, provide, computed, unref, onMounted, watch, openBlock, createElementBlock, normalizeStyle, normalizeClass, renderSlot } from 'vue';\nimport { createPopper } from '@popperjs/core';\nimport '../../../hooks/index.mjs';\nimport { POPPER_INJECTION_KEY, POPPER_CONTENT_INJECTION_KEY } from './tokens.mjs';\nimport { usePopperContentProps } from './popper.mjs';\nimport { buildPopperOptions, unwrapMeasurableEl } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElPopperContent\",\n  props: usePopperContentProps,\n  emits: [\"mouseenter\", \"mouseleave\"],\n  setup: function setup(props) {\n    var _inject = inject(POPPER_INJECTION_KEY, void 0),\n        triggerRef = _inject.triggerRef,\n        popperInstanceRef = _inject.popperInstanceRef,\n        contentRef = _inject.contentRef;\n\n    var _useZIndex = useZIndex(),\n        nextZIndex = _useZIndex.nextZIndex;\n\n    var ns = useNamespace(\"popper\");\n    var popperContentRef = ref(null);\n    var arrowRef = ref(null);\n    var arrowOffset = ref();\n    provide(POPPER_CONTENT_INJECTION_KEY, {\n      arrowRef: arrowRef,\n      arrowOffset: arrowOffset\n    });\n    var contentZIndex = ref(props.zIndex || nextZIndex());\n    var contentStyle = computed(function () {\n      return [{\n        zIndex: unref(contentZIndex)\n      }, props.popperStyle];\n    });\n    var contentClass = computed(function () {\n      return [ns.b(), ns.is(\"pure\", props.pure), ns.is(props.effect), props.popperClass];\n    });\n\n    var createPopperInstance = function createPopperInstance(_ref) {\n      var referenceEl = _ref.referenceEl,\n          popperContentEl = _ref.popperContentEl,\n          arrowEl = _ref.arrowEl;\n      var options = buildPopperOptions(props, {\n        arrowEl: arrowEl,\n        arrowOffset: unref(arrowOffset)\n      });\n      return createPopper(referenceEl, popperContentEl, options);\n    };\n\n    var updatePopper = function updatePopper() {\n      var _a;\n\n      (_a = unref(popperInstanceRef)) == null ? void 0 : _a.update();\n      contentZIndex.value = props.zIndex || nextZIndex();\n    };\n\n    var togglePopoerAlive = function togglePopoerAlive() {\n      var _a;\n\n      var monitorable = {\n        name: \"eventListeners\",\n        enabled: props.visible\n      };\n      (_a = unref(popperInstanceRef)) == null ? void 0 : _a.setOptions(function (options) {\n        return _objectSpread(_objectSpread({}, options), {}, {\n          modifiers: [].concat(_toConsumableArray(options.modifiers), [monitorable])\n        });\n      });\n    };\n\n    onMounted(function () {\n      var updateHandle;\n      watch(function () {\n        return unwrapMeasurableEl(props.referenceEl) || unref(triggerRef);\n      }, function (val) {\n        var _a;\n\n        updateHandle == null ? void 0 : updateHandle();\n\n        if (val) {\n          (_a = popperInstanceRef.value) == null ? void 0 : _a.destroy();\n          var popperContentEl = unref(popperContentRef);\n          contentRef.value = popperContentEl;\n          var arrowEl = unref(arrowRef);\n          var newInstance = createPopperInstance({\n            referenceEl: val,\n            popperContentEl: unref(popperContentRef),\n            arrowEl: arrowEl\n          });\n          popperInstanceRef.value = newInstance;\n          updateHandle = watch(function () {\n            return val.getBoundingClientRect();\n          }, function () {\n            updatePopper();\n          }, {\n            immediate: true\n          });\n        } else {\n          popperInstanceRef.value = null;\n        }\n      }, {\n        immediate: true\n      });\n      watch(function () {\n        return props.visible;\n      }, togglePopoerAlive, {\n        immediate: true\n      });\n      watch(function () {\n        return buildPopperOptions(props, {\n          arrowEl: unref(arrowRef),\n          arrowOffset: unref(arrowOffset)\n        });\n      }, function (option) {\n        var _a;\n\n        return (_a = popperInstanceRef.value) == null ? void 0 : _a.setOptions(option);\n      });\n    });\n    return {\n      ns: ns,\n      popperContentRef: popperContentRef,\n      popperInstanceRef: popperInstanceRef,\n      contentStyle: contentStyle,\n      contentClass: contentClass,\n      updatePopper: updatePopper\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"popperContentRef\",\n    style: normalizeStyle(_ctx.contentStyle),\n    class: normalizeClass(_ctx.contentClass),\n    role: \"tooltip\",\n    onMouseenter: _cache[0] || (_cache[0] = function (e) {\n      return _ctx.$emit(\"mouseenter\", e);\n    }),\n    onMouseleave: _cache[1] || (_cache[1] = function (e) {\n      return _ctx.$emit(\"mouseleave\", e);\n    })\n  }, [renderSlot(_ctx.$slots, \"default\")], 38);\n}\n\nvar ElPopperContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { ElPopperContent as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AA8BA,IAAKA,YAAaC,gBAAa;AAC7BC,QAAM,iBADuB;AAE7BC,SAAOC,qBAFsB;AAG7BC,SAAO,CAAC,YAAD,EAAe,YAAf,CAHsB;AAI7BC,OAJ6B,iBAIvBH,KAJuB,EAIhB;AACX,kBAAsDI,OACpDC,oBADoD,EAEpD,MAFoD,CAAtD;AAAA,QAAQC,UAAR,WAAQA,UAAR;AAAA,QAAoBC,iBAApB,WAAoBA,iBAApB;AAAA,QAAuCC,UAAvC,WAAuCA,UAAvC;;AAIA,qBAAuBC,WAAvB;AAAA,QAAQC,UAAR,cAAQA,UAAR;;AACA,QAAMC,KAAKC,aAAa,QAAb,CAAX;AACA,QAAMC,mBAAmBC,IAAwB,IAAxB,CAAzB;AACA,QAAMC,WAAWD,IAAwB,IAAxB,CAAjB;AACA,QAAME,cAAcF,KAApB;AACAG,YAAQC,4BAAR,EAAsC;AACpCH,wBADoC;AAEpCC;AAFoC,KAAtC;AAIA,QAAMG,gBAAgBL,IAAId,MAAMoB,MAAN,IAAgBV,YAApB,CAAtB;AAEA,QAAMW,eAAeC,SACnB;AAAA,aAAM,CAAC;AAAEF,gBAAQG,MAAMJ,aAAN;AAAV,OAAD,EAAmCnB,MAAMwB,WAAzC,CAAN;AAAA,KADmB,CAArB;AAIA,QAAMC,eAAeH,SAAS;AAAA,aAAM,CAClCX,GAAGe,CAAH,EADkC,EAElCf,GAAGgB,EAAH,CAAM,MAAN,EAAc3B,MAAM4B,IAApB,CAFkC,EAGlCjB,GAAGgB,EAAH,CAAM3B,MAAM6B,MAAZ,CAHkC,EAIlC7B,MAAM8B,WAJ4B,CAAN;AAAA,KAAT,CAArB;;AAOA,QAAMC,uBAAuB,SAAvBA,oBAAuB,OAIvB;AAAA,UAHJC,WAGI,QAHJA,WAGI;AAAA,UAFJC,eAEI,QAFJA,eAEI;AAAA,UADJC,OACI,QADJA,OACI;AACJ,UAAMC,UAAUC,mBAAmBpC,KAAnB,EAA0B;AACxCkC,wBADwC;AAExClB,qBAAaO,MAAMP,WAAN;AAF2B,OAA1B,CAAhB;AAKA,aAAOqB,aAAaL,WAAb,EAA0BC,eAA1B,EAA2CE,OAA3C,CAAP;AAAkD,KAVpD;;AAaA,QAAMG,eAAe,SAAfA,YAAe,GAAM;AACzB;;AACA;AAAsCnB;AAGxC,KALA;;AAME;AACA;;AAAmD;AAAApB;AAAAwC;AAAA;AAC9C;AAAA,+CAC+BJ,OAD/B;AAC+BK;AAD/B;AAAA;AAML,KARA;;AASAC;AAGI;AACAC,YAAI;AAAA;AAAA,OAAJ,EAAI;AACF;;AACAC,wCAA8BA,cAA9B;;AACA;AACA,gBAAMpC,uBAAN,KAAM,IAAN,GAAM,MAAN,GAAMqC,YAAN;AAEA,cAAMX,yCAAN;AAAyCzB;AAC1B;AACU;AACvBwB,4BADuB;AAGzBC,oDAHyB;AAKzBC;AALyB;AAQrB3B;AAEFoC;AAAA;AAAA;AACaL;AAAA,WADb,EACa;AAIfO;AAJe,WADb;AAQN,SAvBI,MAuBJ;AAAAtC;AACa;AAIf,OA/BI,EA+BJ;AAEAsC;AAFA,OA/BI;AAoCiBH;AAAA;AAAA;AAAAG;AAAA;AACIH,WAEtB;AAAA;AAA+CR,kCAA/C;AAILlB;AAJK;AAAA,SAIE;AACL;;AACA;AACA,OAPG,CAFsB;AAUzB,KAnDA;AAoDA;AACAL,YADA;AACAE,wCADA;AACAN,0CADA;gCAAA;gCAAA;;AAAA;AA3IE;AA4BuB,CAAb,CAAlB;;AAzBS,mDACeuC,KADf,EACeC,QADf,EACe;AAAoB;AACAjC,2BADA;AAGxCkC,4CAHwC;AAGhCC,4CAHgC;mBAAA;;;MAAA;;;;AAAA","names":["_sfc_main","defineComponent","name","props","usePopperContentProps","emits","setup","inject","POPPER_INJECTION_KEY","triggerRef","popperInstanceRef","contentRef","useZIndex","nextZIndex","ns","useNamespace","popperContentRef","ref","arrowRef","arrowOffset","provide","POPPER_CONTENT_INJECTION_KEY","contentZIndex","zIndex","contentStyle","computed","unref","popperStyle","contentClass","b","is","pure","effect","popperClass","createPopperInstance","referenceEl","popperContentEl","arrowEl","options","buildPopperOptions","createPopper","updatePopper","enabled","modifiers","onMounted","watch","updateHandle","_a","immediate","$data","$options","style","class"],"sources":["../../../../../../packages/components/popper/src/content.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"popperContentRef\"\n    :style=\"contentStyle\"\n    :class=\"contentClass\"\n    role=\"tooltip\"\n    @mouseenter=\"(e) => $emit('mouseenter', e)\"\n    @mouseleave=\"(e) => $emit('mouseleave', e)\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  ref,\n  inject,\n  provide,\n  unref,\n  onMounted,\n  watch,\n} from 'vue'\nimport { createPopper } from '@popperjs/core'\nimport { useZIndex, useNamespace } from '@element-plus/hooks'\nimport { POPPER_INJECTION_KEY, POPPER_CONTENT_INJECTION_KEY } from './tokens'\nimport { usePopperContentProps } from './popper'\nimport { buildPopperOptions, unwrapMeasurableEl } from './utils'\n\nexport default defineComponent({\n  name: 'ElPopperContent',\n  props: usePopperContentProps,\n  emits: ['mouseenter', 'mouseleave'],\n  setup(props) {\n    const { triggerRef, popperInstanceRef, contentRef } = inject(\n      POPPER_INJECTION_KEY,\n      undefined\n    )!\n    const { nextZIndex } = useZIndex()\n    const ns = useNamespace('popper')\n    const popperContentRef = ref<HTMLElement | null>(null)\n    const arrowRef = ref<HTMLElement | null>(null)\n    const arrowOffset = ref<number>()\n    provide(POPPER_CONTENT_INJECTION_KEY, {\n      arrowRef,\n      arrowOffset,\n    })\n    const contentZIndex = ref(props.zIndex || nextZIndex())\n\n    const contentStyle = computed(\n      () => [{ zIndex: unref(contentZIndex) }, props.popperStyle] as any\n    )\n\n    const contentClass = computed(() => [\n      ns.b(),\n      ns.is('pure', props.pure),\n      ns.is(props.effect),\n      props.popperClass,\n    ])\n\n    const createPopperInstance = ({\n      referenceEl,\n      popperContentEl,\n      arrowEl,\n    }) => {\n      const options = buildPopperOptions(props, {\n        arrowEl,\n        arrowOffset: unref(arrowOffset),\n      })\n\n      return createPopper(referenceEl, popperContentEl, options)\n    }\n\n    const updatePopper = () => {\n      unref(popperInstanceRef)?.update()\n      contentZIndex.value = props.zIndex || nextZIndex()\n    }\n\n    const togglePopoerAlive = () => {\n      const monitorable = { name: 'eventListeners', enabled: props.visible }\n      unref(popperInstanceRef)?.setOptions((options) => ({\n        ...options,\n        modifiers: [...options.modifiers, monitorable],\n      }))\n    }\n\n    onMounted(() => {\n      let updateHandle: ReturnType<typeof watch>\n      watch(\n        () => unwrapMeasurableEl(props.referenceEl) || unref(triggerRef),\n        (val) => {\n          updateHandle?.()\n          if (val) {\n            popperInstanceRef.value?.destroy()\n            const popperContentEl = unref(popperContentRef)!\n            contentRef.value = popperContentEl\n            const arrowEl = unref(arrowRef)\n\n            const newInstance = createPopperInstance({\n              referenceEl: val,\n              popperContentEl: unref(popperContentRef)!,\n              arrowEl,\n            })\n            popperInstanceRef.value = newInstance\n\n            updateHandle = watch(\n              () => val!.getBoundingClientRect(),\n              () => {\n                updatePopper()\n              },\n              {\n                immediate: true,\n              }\n            )\n          } else {\n            popperInstanceRef.value = null\n          }\n        },\n        {\n          immediate: true,\n        }\n      )\n\n      watch(() => props.visible, togglePopoerAlive, { immediate: true })\n\n      watch(\n        () =>\n          buildPopperOptions(props, {\n            arrowEl: unref(arrowRef),\n            arrowOffset: unref(arrowOffset),\n          }),\n        (option) => popperInstanceRef.value?.setOptions(option)\n      )\n    })\n\n    return {\n      ns,\n      popperContentRef,\n      popperInstanceRef,\n      contentStyle,\n      contentClass,\n      updatePopper,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}