{"ast":null,"code":"import _objectSpread from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, provide, reactive, toRef, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buttonGroupProps } from './button-group.mjs';\nimport { buttonGroupContextKey } from '../../../tokens/button.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = {\n  name: \"ElButtonGroup\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: buttonGroupProps,\n  setup: function setup(__props) {\n    var props = __props;\n    provide(buttonGroupContextKey, reactive({\n      size: toRef(props, \"size\"),\n      type: toRef(props, \"type\")\n    }));\n    var ns = useNamespace(\"button\");\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass(\"\".concat(unref(ns).b(\"group\")))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n}));\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAeAA;gCAAA;;AAAA;AAOA","names":["provide"],"sources":["../../../../../../packages/components/button/src/button-group.vue"],"sourcesContent":["<template>\n  <div :class=\"`${ns.b('group')}`\">\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { provide, reactive, toRef } from 'vue'\nimport { buttonGroupContextKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport { buttonGroupProps } from './button-group'\n\ndefineOptions({\n  name: 'ElButtonGroup',\n})\nconst props = defineProps(buttonGroupProps)\nprovide(\n  buttonGroupContextKey,\n  reactive({\n    size: toRef(props, 'size'),\n    type: toRef(props, 'type'),\n  })\n)\nconst ns = useNamespace('button')\n</script>\n"]},"metadata":{},"sourceType":"module"}