{"ast":null,"code":"import _defineProperty from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/MyFile/WebCode/ocean-vis/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, Fragment, renderList, toDisplayString, createCommentVNode, createElementVNode, renderSlot } from 'vue';\nimport dayjs from 'dayjs';\nimport localeData from 'dayjs/plugin/localeData';\nimport '../../../hooks/index.mjs';\nimport '../../time-picker/index.mjs';\nimport { dateTableProps, dateTableEmits } from './date-table.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { rangeArr } from '../../time-picker/src/common/date-utils.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\ndayjs.extend(localeData);\nvar WEEK_DAYS = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nvar getPrevMonthLastDays = function getPrevMonthLastDays(date, count) {\n  var lastDay = date.subtract(1, \"month\").endOf(\"month\").date();\n  return rangeArr(count).map(function (_, index) {\n    return lastDay - (count - index - 1);\n  });\n};\n\nvar getMonthDays = function getMonthDays(date) {\n  var days = date.daysInMonth();\n  return rangeArr(days).map(function (_, index) {\n    return index + 1;\n  });\n};\n\nvar toNestedArr = function toNestedArr(days) {\n  return rangeArr(days.length / 7).map(function (index) {\n    var start = index * 7;\n    return days.slice(start, start + 7);\n  });\n};\n\nvar _sfc_main = defineComponent({\n  props: dateTableProps,\n  emits: dateTableEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var nsTable = useNamespace(\"calendar-table\");\n    var nsDay = useNamespace(\"calendar-day\");\n    var now = dayjs().locale(lang.value);\n    var firstDayOfWeek = now.$locale().weekStart || 0;\n    var isInRange = computed(function () {\n      return !!props.range && !!props.range.length;\n    });\n    var rows = computed(function () {\n      var days = [];\n\n      if (isInRange.value) {\n        var _props$range = _slicedToArray(props.range, 2),\n            start = _props$range[0],\n            end = _props$range[1];\n\n        var currentMonthRange = rangeArr(end.date() - start.date() + 1).map(function (index) {\n          return {\n            text: start.date() + index,\n            type: \"current\"\n          };\n        });\n        var remaining = currentMonthRange.length % 7;\n        remaining = remaining === 0 ? 0 : 7 - remaining;\n        var nextMonthRange = rangeArr(remaining).map(function (_, index) {\n          return {\n            text: index + 1,\n            type: \"next\"\n          };\n        });\n        days = currentMonthRange.concat(nextMonthRange);\n      } else {\n        var firstDay = props.date.startOf(\"month\").day() || 7;\n        var prevMonthDays = getPrevMonthLastDays(props.date, firstDay - firstDayOfWeek).map(function (day) {\n          return {\n            text: day,\n            type: \"prev\"\n          };\n        });\n        var currentMonthDays = getMonthDays(props.date).map(function (day) {\n          return {\n            text: day,\n            type: \"current\"\n          };\n        });\n        days = [].concat(_toConsumableArray(prevMonthDays), _toConsumableArray(currentMonthDays));\n        var nextMonthDays = rangeArr(42 - days.length).map(function (_, index) {\n          return {\n            text: index + 1,\n            type: \"next\"\n          };\n        });\n        days = days.concat(nextMonthDays);\n      }\n\n      return toNestedArr(days);\n    });\n    var weekDays = computed(function () {\n      var start = firstDayOfWeek;\n\n      if (start === 0) {\n        return WEEK_DAYS.map(function (_) {\n          return t(\"el.datepicker.weeks.\".concat(_));\n        });\n      } else {\n        return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start)).map(function (_) {\n          return t(\"el.datepicker.weeks.\".concat(_));\n        });\n      }\n    });\n\n    var getFormattedDate = function getFormattedDate(day, type) {\n      switch (type) {\n        case \"prev\":\n          return props.date.startOf(\"month\").subtract(1, \"month\").date(day);\n\n        case \"next\":\n          return props.date.startOf(\"month\").add(1, \"month\").date(day);\n\n        case \"current\":\n          return props.date.date(day);\n      }\n    };\n\n    var getCellClass = function getCellClass(_ref2) {\n      var text = _ref2.text,\n          type = _ref2.type;\n      var classes = [type];\n\n      if (type === \"current\") {\n        var date = getFormattedDate(text, type);\n\n        if (date.isSame(props.selectedDay, \"day\")) {\n          classes.push(\"is-selected\");\n        }\n\n        if (date.isSame(now, \"day\")) {\n          classes.push(\"is-today\");\n        }\n      }\n\n      return classes;\n    };\n\n    var handlePickDay = function handlePickDay(_ref3) {\n      var text = _ref3.text,\n          type = _ref3.type;\n      var date = getFormattedDate(text, type);\n      emit(\"pick\", date);\n    };\n\n    var getSlotData = function getSlotData(_ref4) {\n      var text = _ref4.text,\n          type = _ref4.type;\n      var day = getFormattedDate(text, type);\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: \"\".concat(type, \"-month\"),\n        day: day.format(\"YYYY-MM-DD\"),\n        date: day.toDate()\n      };\n    };\n\n    return {\n      isInRange: isInRange,\n      weekDays: weekDays,\n      rows: rows,\n      getCellClass: getCellClass,\n      handlePickDay: handlePickDay,\n      getSlotData: getSlotData,\n      nsTable: nsTable,\n      nsDay: nsDay\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = [\"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"table\", {\n    class: normalizeClass([_ctx.nsTable.b(), _ctx.nsTable.is(\"range\", _ctx.isInRange)]),\n    cellspacing: \"0\",\n    cellpadding: \"0\"\n  }, [!_ctx.hideHeader ? (openBlock(), createElementBlock(\"thead\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.weekDays, function (day) {\n    return openBlock(), createElementBlock(\"th\", {\n      key: day\n    }, toDisplayString(day), 1);\n  }), 128))])) : createCommentVNode(\"v-if\", true), createElementVNode(\"tbody\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rows, function (row, index) {\n    var _normalizeClass;\n\n    return openBlock(), createElementBlock(\"tr\", {\n      key: index,\n      class: normalizeClass((_normalizeClass = {}, _defineProperty(_normalizeClass, _ctx.nsTable.e(\"row\"), true), _defineProperty(_normalizeClass, _ctx.nsTable.em(\"row\", \"hide-border\"), index === 0 && _ctx.hideHeader), _normalizeClass))\n    }, [(openBlock(true), createElementBlock(Fragment, null, renderList(row, function (cell, key) {\n      return openBlock(), createElementBlock(\"td\", {\n        key: key,\n        class: normalizeClass(_ctx.getCellClass(cell)),\n        onClick: function onClick($event) {\n          return _ctx.handlePickDay(cell);\n        }\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsDay.b())\n      }, [renderSlot(_ctx.$slots, \"dateCell\", {\n        data: _ctx.getSlotData(cell)\n      }, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(cell.text), 1)];\n      })], 2)], 10, _hoisted_2);\n    }), 128))], 2);\n  }), 128))])], 2);\n}\n\nvar DateTable = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { DateTable as default, getMonthDays, getPrevMonthLastDays };","map":{"version":3,"mappings":"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","names":["dayjs","extend","localeData","WEEK_DAYS","getPrevMonthLastDays","date","count","lastDay","subtract","endOf","rangeArr","map","_","index","getMonthDays","days","daysInMonth","toNestedArr","length","start","slice","_sfc_main","defineComponent","props","dateTableProps","emits","dateTableEmits","setup","emit","useLocale","t","lang","nsTable","useNamespace","nsDay","now","locale","value","firstDayOfWeek","$locale","weekStart","isInRange","computed","range","rows","end","currentMonthRange","text","type","remaining","nextMonthRange","concat","firstDay","startOf","day","prevMonthDays","currentMonthDays","nextMonthDays","weekDays","getFormattedDate","add","getCellClass","classes","isSame","selectedDay","push","handlePickDay","getSlotData","isSelected","format","toDate","_createElementBlock","class","_normalizeClass","_ctx","b","is","cellspacing","cellpadding","_hoisted_1","_Fragment","key","_toDisplayString","_createElementVNode","row","e","em","cell","onClick","_renderSlot","data","toDisplayString"],"sources":["../../../../../../packages/components/calendar/src/date-table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"[nsTable.b(), nsTable.is('range', isInRange)]\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n  >\n    <thead v-if=\"!hideHeader\">\n      <th v-for=\"day in weekDays\" :key=\"day\">{{ day }}</th>\n    </thead>\n\n    <tbody>\n      <tr\n        v-for=\"(row, index) in rows\"\n        :key=\"index\"\n        :class=\"{\n          [nsTable.e('row')]: true,\n          [nsTable.em('row', 'hide-border')]: index === 0 && hideHeader,\n        }\"\n      >\n        <td\n          v-for=\"(cell, key) in row\"\n          :key=\"key\"\n          :class=\"getCellClass(cell)\"\n          @click=\"handlePickDay(cell)\"\n        >\n          <div :class=\"nsDay.b()\">\n            <slot name=\"dateCell\" :data=\"getSlotData(cell)\">\n              <span>{{ cell.text }}</span>\n            </slot>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { dateTableProps, dateTableEmits } from './date-table'\nimport type { Dayjs } from 'dayjs'\ndayjs.extend(localeData)\n\ntype CellType = 'next' | 'prev' | 'current'\ninterface Cell {\n  text: number\n  type: CellType\n}\n\nconst WEEK_DAYS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'] as const\n\nexport const getPrevMonthLastDays = (date: Dayjs, count: number) => {\n  const lastDay = date.subtract(1, 'month').endOf('month').date()\n  return rangeArr(count).map((_, index) => lastDay - (count - index - 1))\n}\n\nexport const getMonthDays = (date: Dayjs) => {\n  const days = date.daysInMonth()\n  return rangeArr(days).map((_, index) => index + 1)\n}\n\nconst toNestedArr = (days: Cell[]) =>\n  rangeArr(days.length / 7).map((index) => {\n    const start = index * 7\n    return days.slice(start, start + 7)\n  })\n\nexport default defineComponent({\n  props: dateTableProps,\n  emits: dateTableEmits,\n\n  setup(props, { emit }) {\n    const { t, lang } = useLocale()\n    const nsTable = useNamespace('calendar-table')\n    const nsDay = useNamespace('calendar-day')\n\n    const now = dayjs().locale(lang.value)\n    // todo better way to get Day.js locale object\n    const firstDayOfWeek: number = (now as any).$locale().weekStart || 0\n\n    const isInRange = computed(() => !!props.range && !!props.range.length)\n\n    const rows = computed(() => {\n      let days: Cell[] = []\n      if (isInRange.value) {\n        const [start, end] = props.range!\n        const currentMonthRange: Cell[] = rangeArr(\n          end.date() - start.date() + 1\n        ).map((index) => ({\n          text: start.date() + index,\n          type: 'current',\n        }))\n\n        let remaining = currentMonthRange.length % 7\n        remaining = remaining === 0 ? 0 : 7 - remaining\n        const nextMonthRange: Cell[] = rangeArr(remaining).map((_, index) => ({\n          text: index + 1,\n          type: 'next',\n        }))\n        days = currentMonthRange.concat(nextMonthRange)\n      } else {\n        const firstDay = props.date.startOf('month').day() || 7\n        const prevMonthDays: Cell[] = getPrevMonthLastDays(\n          props.date,\n          firstDay - firstDayOfWeek\n        ).map((day) => ({\n          text: day,\n          type: 'prev',\n        }))\n        const currentMonthDays: Cell[] = getMonthDays(props.date).map(\n          (day) => ({\n            text: day,\n            type: 'current',\n          })\n        )\n        days = [...prevMonthDays, ...currentMonthDays]\n        const nextMonthDays: Cell[] = rangeArr(42 - days.length).map(\n          (_, index) => ({\n            text: index + 1,\n            type: 'next',\n          })\n        )\n        days = days.concat(nextMonthDays)\n      }\n      return toNestedArr(days)\n    })\n\n    const weekDays = computed(() => {\n      const start = firstDayOfWeek\n      if (start === 0) {\n        return WEEK_DAYS.map((_) => t(`el.datepicker.weeks.${_}`))\n      } else {\n        return WEEK_DAYS.slice(start)\n          .concat(WEEK_DAYS.slice(0, start))\n          .map((_) => t(`el.datepicker.weeks.${_}`))\n      }\n    })\n\n    const getFormattedDate = (day: number, type: CellType): Dayjs => {\n      switch (type) {\n        case 'prev':\n          return props.date.startOf('month').subtract(1, 'month').date(day)\n        case 'next':\n          return props.date.startOf('month').add(1, 'month').date(day)\n        case 'current':\n          return props.date.date(day)\n      }\n    }\n\n    const getCellClass = ({ text, type }: Cell) => {\n      const classes: string[] = [type]\n      if (type === 'current') {\n        const date = getFormattedDate(text, type)\n        if (date.isSame(props.selectedDay, 'day')) {\n          classes.push('is-selected')\n        }\n        if (date.isSame(now, 'day')) {\n          classes.push('is-today')\n        }\n      }\n      return classes\n    }\n\n    const handlePickDay = ({ text, type }: Cell) => {\n      const date = getFormattedDate(text, type)\n      emit('pick', date)\n    }\n\n    const getSlotData = ({ text, type }: Cell) => {\n      const day = getFormattedDate(text, type)\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: `${type}-month`,\n        day: day.format('YYYY-MM-DD'),\n        date: day.toDate(),\n      }\n    }\n\n    return {\n      isInRange,\n      weekDays,\n      rows,\n      getCellClass,\n      handlePickDay,\n      getSlotData,\n\n      nsTable,\n      nsDay,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}