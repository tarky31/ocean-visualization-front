{"ast":null,"code":"import _asyncToGenerator from \"D:/MyFile/WebCode/ocean-vis2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import func from 'vue-editor-bridge';\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport Feature from \"ol/Feature\";\nimport { OSM, ImageWMS, Vector as VectorSource, XYZ } from \"ol/source\";\nimport { Vector as VectorLayer, Image, Tile as TileLayer } from \"ol/layer\";\nimport { fromLonLat, get as getProjection } from \"ol/proj\";\nimport { Point, MultiLineString, LineString, Polygon, Circle } from \"ol/geom\";\nimport { Fill, Circle as CircleStyle, Style, Stroke, Icon } from \"ol/style\";\nimport { defaults as defaultControls, ScaleLine, OverviewMap } from \"ol/control\";\nimport Overlay from \"ol/Overlay\";\nimport TyphoonInfo from \"../src/components/TyphoonInfo\";\nexport default {\n  data: function data() {\n    return {\n      // value1:'',   //日期\n      // value2:'',   //时刻\n      radio: \"\",\n      //海域\n      wp_value: '',\n      na_value: '',\n      ep_value: '',\n      options1: null,\n      options2: null,\n      options3: null,\n      map: null,\n      vectorMap: null,\n      layer: null,\n      imageLayer: null,\n      routeData: null,\n      lastZoomPoint: null,\n      overlay: null,\n      sequence: null,\n      id: null,\n      pressure: 100,\n      //气压\n      finalData: {\n        \"id\": \"0\",\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"date\": \"1979-01-02\",\n          \"latitude\": 5.2,\n          \"longitude\": 168.7,\n          \"max wind speed(intensity)\": 50,\n          \"min pressure\": 990,\n          \"time\": \"00:00:00\"\n        },\n        \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [168.7, 5.2]\n        }\n      },\n      tfOverlay: null,\n      imgUrl: require(\"../src/assets/typhoon2.png\")\n    };\n  },\n  components: {\n    TyphoonInfo: TyphoonInfo\n  },\n  methods: {\n    fileSubmit: function fileSubmit() {\n      this.$MessageBox.alert('请将数据放置/home/user_typhoon_data/, 格式如下:<ul id=\"myUL\">  <li><span class=\"caret\">WP_solo/</span>   <ul class=\"nested\"> <li><span class=\"caret\">data_seq1/</span> <ul class=\"nested\"> <li>tp_1_pl.nc</li><li>tp_2_pl.nc</li></ul></li><li>tp_seq1.txt</li></ul></li></ul>', '提示', {\n        confirmButtonText: '确定',\n        dangerouslyUseHTMLString: true,\n        callback: function callback(action) {\n          // this.$message({\n          //   type: 'info',\n          //   message: `action: ${ action }`\n          // });\n          if (action === 'confirm') {// this.$http.get(\"http://localhost:8080/ocean/processOceanData\")\n            // .then(function(response){\n            //     console.log(response);\n            // })\n          }\n        }\n      });\n    },\n    initSelect: function initSelect() {\n      //   let _this=this\n      //   let ocean=this.radio;\n      //   this.$http.get(\" http://localhost:8080/typhoon/getMetaInfo/\"+ocean)\n      //             .then(function(response){\n      //                 _this.options1=null;\n      //                 _this.options2=null;\n      //                 _this.options3=null;\n      //                 let data=response.data.data;\n      //                 let typhoonData=data.typhoonMetaData;\n      //                 if(ocean==='wp'){\n      //                      _this.options1=typhoonData;\n      //                 }else if(ocean==='ep'){\n      //                     _this.options2=typhoonData;\n      //                 }else{\n      //                     _this.options3=typhoonData;\n      //                 }\n      //         })\n      var _this = this;\n\n      this.map.removeLayer(_this.layer);\n      this.vectorMap.removeLayer(_this.imageLayer);\n\n      if (this.radio === 'wp') {\n        this.ep_value = \"\";\n        this.$http.get(\"https://run.mocky.io/v3/4aa69cf2-f813-4525-9640-788c16cfcd10\").then(function (response) {\n          _this.options2 = null;\n          _this.options3 = null;\n          var data = response.data.data;\n          var typhoonData = data.typhoonMetaData;\n          _this.options1 = typhoonData;\n        });\n      } else if (this.radio === 'ep') {\n        this.wp_value = \"\";\n        this.$http.get(\"https://run.mocky.io/v3/6d9add90-c929-4eb1-bf0c-882433706fbb\").then(function (response) {\n          _this.options1 = null;\n          _this.options3 = null;\n          var data = response.data.data;\n          var typhoonData = data.typhoonMetaData;\n          _this.options2 = typhoonData;\n        });\n      }\n    },\n    getTyphoonData: function getTyphoonData(http_url) {\n      // let url=http_url\n      var url = \"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\";\n      return fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        response.status; //=> number 100–599\n\n        response.statusText; //=> String\n\n        response.headers; //=> Headers\n\n        response.url; //=> String\n\n        return response.json();\n      }).then(function (data) {\n        return data;\n      }); //  this.$http.get(\"http://localhost:8080/typhoon/getGeojsonData/\"+this.radio+\"/\"+seq)\n      //         .then(function(response){\n      // // })\n      // let _this=this\n      // this.$http.get(\"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\")\n      //         .then((response)=>{\n      //             this.routeData=response.data.data.geoJsonData;\n      //             this.routeData = JSON.parse(this.routeData)\n      //             this.routeData=this.routeData.featureList\n      //             // _this.routeData=response.data.geoJsonData;\n      //             this.addPointInterval(this.routeData,_this);\n      //             this.showInfo(this.routeData,_this);\n      // })\n    },\n    getData: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(seq) {\n        var url, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.sequence = seq;\n                url = \" http://localhost:8080/typhoon/getGeojsonData/\" + this.radio + \"/\" + seq;\n                _context.next = 4;\n                return this.getTyphoonData(url);\n\n              case 4:\n                response = _context.sent;\n                // console.log(response)\n                this.routeData = response.data.geoJsonData;\n                this.routeData = JSON.parse(this.routeData);\n                this.routeData = this.routeData.featureList; // let data=this.routeData;\n\n                this.addPointInterval(this.routeData);\n                this.showInfo(this.routeData);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData(_x) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    addPointInterval: function addPointInterval(data) {\n      var _this2 = this;\n\n      // let _this=this;\n      var points = data;\n      var index = 0;\n      var layer = new VectorLayer();\n      var source = new VectorSource();\n      var lastPoint = null;\n      var lastSpeed;\n      layer.setSource(source);\n      var intervalLogo = setInterval(function () {\n        if (index == points.length) {\n          lastPoint.set(\"endPoint\", true); //给最后一点添加标记\n\n          clearInterval(intervalLogo);\n          return;\n        }\n\n        var curPointData = points[index].properties;\n        var position = [curPointData.longitude, curPointData.latitude];\n\n        if (lastPoint != null) {\n          lastPoint.setStyle(new Style({\n            image: new CircleStyle({\n              radius: 3,\n              fill: new Fill({\n                color: _this2.getColor(lastSpeed)\n              }),\n              stroke: new Stroke({\n                color: _this2.getColor(lastSpeed),\n                width: 1\n              })\n            })\n          }));\n        }\n\n        if (index == 0) {\n          _this2.map.getView().setCenter(fromLonLat(position, 'EPSG:4326'));\n\n          _this2.map.getView().setZoom(3);\n        }\n\n        var speed = curPointData['max wind speed(intensity)'];\n        var anchor = new Feature({\n          geometry: new Point(fromLonLat(position, 'EPSG:4326'))\n        }); // 设置样式，在样式中就可以设置图标\n\n        anchor.setStyle(new Style({\n          image: new Icon({\n            src: _this2.imgUrl,\n            scale: 0.5,\n            rotation: -360 / points.length * index\n          })\n        })); // 添加到之前的创建的layer中去\n\n        layer.getSource().addFeature(anchor);\n        anchor.set(\"typhoonPoint\", true);\n        anchor.set(\"id\", index);\n        lastPoint = anchor;\n        lastSpeed = speed;\n\n        if (index > 0) {\n          var _lastPoint = data[index - 1].properties;\n          var lastPosition = [_lastPoint.longitude, _lastPoint.latitude];\n          var featureLine = new Feature({\n            geometry: new LineString([fromLonLat(position, 'EPSG:4326'), fromLonLat(lastPosition, 'EPSG:4326')])\n          });\n          source.addFeature(featureLine);\n        } // 需要一个出口\n\n\n        index++;\n      }, 80);\n      this.map.addLayer(layer);\n      this.layer = layer;\n    },\n    showInfo: function showInfo(data) {\n      var _this = this;\n\n      this.map.on('pointermove', function (ev) {\n        var feature = _this.map.forEachFeatureAtPixel(ev.pixel, function (feature) {\n          return feature;\n        });\n\n        if (feature) {\n          if (feature.get('typhoonPoint')) {\n            _this.map.getTargetElement().style.cursor = 'pointer';\n\n            if (_this.lastZoomPoint != null && !_this.lastZoomPoint.get('endPoint')) {\n              _this.lastZoomPoint.getStyle().getImage().setRadius(3);\n\n              _this.lastZoomPoint.changed();\n            }\n\n            if (!feature.get('endPoint')) {\n              feature.getStyle().getImage().setRadius(5);\n              feature.changed();\n            }\n\n            _this.lastZoomPoint = feature;\n            var id = feature.get('id');\n            _this.id = id + 1;\n            _this.finalData = data[id]; //showDetails(ev,id,data);\n\n            var coordinate = ev.coordinate; //求得坐标\n\n            _this.tfOverlay.setPosition(coordinate);\n          }\n        } else {\n          if (_this.lastZoomPoint != null) {\n            if (!_this.lastZoomPoint.get('endPoint')) {\n              _this.lastZoomPoint.getStyle().getImage().setRadius(3);\n\n              _this.lastZoomPoint.changed();\n\n              _this.lastZoomPoint = null;\n            }\n          }\n\n          _this.map.getTargetElement().style.cursor = '';\n\n          _this.tfOverlay.setPosition(undefined);\n        }\n      });\n      this.map.on('click', function (ev) {\n        console.log(ev);\n      });\n    },\n    popUp: function popUp() {\n      var overlay = new Overlay({\n        element: this.$refs.typhoonInfo.$el,\n        autoPan: {\n          animation: {\n            duration: 250\n          }\n        }\n      }); //overlay.setPosition(undefined);\n\n      this.tfOverlay = overlay;\n      this.map.addOverlay(this.tfOverlay);\n    },\n    initMap: function initMap() {\n      var tdtLayer = new TileLayer({\n        title: \"谷歌矢量地图服务\",\n        source: new XYZ({\n          // arcgis server\n          // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\n          url: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\n        })\n      });\n      var map = new Map({\n        target: 'route',\n        // 关联到对应的div容器\n        layers: [tdtLayer],\n        view: new View({\n          // 地图视图\n          projection: 'EPSG:4326',\n          center: [0, 0],\n          zoom: 0\n        }),\n        controls: defaultControls().extend([//     new OverviewMap({        // 实例化一个OverviewMap类的对象，并加入到地图中\n          //         layers:[\n          //     new TileLayer({                 // 瓦片图层\n          //         source: new XYZ({\n          //     // arcgis server\n          //     // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\n          //     url: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\n          // })\n          //     })\n          // ],\n          //         view: new View({                     // 地图视图\n          //             projection: 'EPSG:4326',\n          // }),\n          //     })        \n        ])\n      });\n      this.map = map;\n      var map2 = new Map({\n        target: 'vector',\n        // 关联到对应的div容器\n        layers: [],\n        view: new View({\n          // 地图视图\n          projection: 'EPSG:4326',\n          center: [169, 5.6],\n          zoom: 3\n        }),\n        controls: defaultControls().extend([// new ScaleLine()\n        ])\n      });\n      this.vectorMap = map2;\n    },\n    getColor: function getColor(speed) {\n      var color;\n\n      if (speed >= 10.8 && speed <= 17.1) {\n        color = 'rgb(233,218,122)';\n      } else if (speed >= 17.2 && speed <= 24.4) {\n        color = 'rgb(16,29,199)';\n      } else if (speed >= 24.5 && speed <= 32.6) {\n        color = 'green';\n      } else if (speed >= 32.7 && speed <= 41.4) {\n        color = 'rgb(239,171,118)';\n      } else if (speed >= 41.5 && speed <= 50.9) {\n        color = 'rgb(193,89,196)';\n      } else {\n        color = 'red';\n      }\n\n      return color;\n    },\n    showVector: function showVector() {\n      var _this = this;\n\n      this.map.on('click', function (ev) {\n        console.log(\"hello\");\n      });\n    },\n    drawVector: function drawVector() {\n      var _this = this; // this.vectorMap.removeLayer(_this.imageLayer);\n\n\n      var seq = this.sequence.split('_')[1];\n      var layer = \"cite:\" + this.radio.toUpperCase() + \"_data_\" + seq + \"_tp_1_pl\";\n      var imageLayer = new Image({\n        source: new ImageWMS({\n          ratio: 1,\n          url: \"http://localhost:8089/geoserver/cite/wms\",\n          crossOrigin: 'anonynous',\n          params: {\n            'FORMAT': 'image/jpeg',\n            'VERSION': '1.1.1',\n            \"exceptions\": \"application/vnd.ogc.se_inimage\",\n            \"LAYERS\": layer,\n            'CQL_FILTER': 'level == ' + this.pressure\n          }\n        })\n      });\n      this.vectorMap.addLayer(imageLayer);\n      this.imageLayer = imageLayer;\n    }\n  },\n  mounted: function mounted() {\n    this.initMap();\n    this.popUp();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,MADA,kBACA;AACA;AACA;AACA;AACAC,eAHA;AAGA;AACAC,kBAJA;AAKAC,kBALA;AAMAC,kBANA;AAOAC,oBAPA;AAQAC,oBARA;AASAC,oBATA;AAUAC,eAVA;AAWAC,qBAXA;AAYAC,iBAZA;AAaAC,sBAbA;AAcAC,qBAdA;AAeAC,yBAfA;AAgBAC,mBAhBA;AAiBAC,oBAjBA;AAkBAC,cAlBA;AAmBAC,mBAnBA;AAmBA;AACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OApBA;AAqBAC,qBArBA;AAsBAC;AAtBA;AAwBA,GA1BA;AA2BAC;AACAC;AADA,GA3BA;AA8BAC;AACAC,cADA,wBACA;AACA;AACAC,+BADA;AAEAC,sCAFA;AAGAC;AACA;AACA;AACA;AACA;AACA,qCACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA,KAlBA;AAqBAC,cArBA,wBAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;;AACA;AACA;AACA,uFACAC,IADA,CACA;AACAC;AACAA;AAEA;AACA;AACAA;AAEA,SATA;AAUA,OAZA,MAYA;AAEA;AACA,uFACAD,IADA,CACA;AACAC;AACAA;AACA;AACA;AACAA;AAEA,SARA;AASA;AACA,KArEA;AAsEAC,kBAtEA,0BAsEAC,QAtEA,EAsEA;AACA;AACA;AACA;AACAC;AADA,SAEAJ,IAFA,CAEA;AACAK,wBADA,CACA;;AACAA,4BAFA,CAEA;;AACAA,yBAHA,CAGA;;AACAA,qBAJA,CAIA;;AAEA;AACA,OATA,EASAL,IATA,CASA;AACA;AACA,OAXA,EAHA,CAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KApGA;AAqGAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAC,mBAFA,GAEA,yEAFA;AAAA;AAAA,uBAGA,wBAHA;;AAAA;AAGAF,wBAHA;AAIA;AACA;AACA;AACA,4DAPA,CAQA;;AACA;AACA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArGA;AAoHAG,oBApHA,4BAoHArC,IApHA,EAoHA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAU;AACA;AACA;AACA4B,0CADA,CACA;;AACAC;AACA;AACA;;AACA;AACA;;AACA;AACAD;AACAE;AACAC,uBADA;AAEAC;AACAC;AADA,gBAFA;AAKAC;AAAAD;AAAAE;AAAA;AALA;AADA;AASA;;AACA;AACA;;AACA;AACA;;AAEA;AAEA;AACAC;AADA,WA1BA,CA6BA;;AACAC;AACAP;AACAQ,8BADA;AAEAC,sBAFA;AAGAC;AAHA;AADA,YA9BA,CAqCA;;AACAxC;AACAqC;AACAA;AAEAT;AACAa;;AACA;AACA;AACA;AACA;AACAL,sCACAM,iCADA,EAEAA,qCAFA;AADA;AAMAC;AACA,SAtDA,CAuDA;;;AACAC;AACA,OAzDA,EAyDA,EAzDA;AA0DA;AACA;AACA,KAzLA;AA2LAC,YA3LA,oBA2LAvD,IA3LA,EA2LA;AACA;;AACA;AACA;AACA;AACA,SAFA;;AAIA;AACA;AACA8B;;AACA;AACAA;;AACAA;AACA;;AACA;AACA0B;AACAA;AACA;;AACA1B;AACA;AACAA;AACAA,uCAbA,CAcA;;AACA,2CAfA,CAeA;;AACAA;AACA;AACA,SAnBA,MAmBA;AACA;AACA;AACAA;;AACAA;;AACAA;AACA;AAEA;;AACAA;;AACAA;AACA;AAEA,OArCA;AAsCA;AACA2B;AAEA,OAHA;AAKA,KAxOA;AAyOAC;AACA;AACAC,2CADA;AAEAC;AACAC;AACAC;AADA;AADA;AAFA,SADA,CASA;;AACA;AACA;AACA,KArPA;AAsPAC,WAtPA,qBAsPA;AACA;AACAC,yBADA;AAEAX;AACA;AACA;AACAjB;AAHA;AAFA;AAQA;AACA6B,uBADA;AACA;AACAC,iBAEAC,QAFA,CAFA;AAMAC;AAAA;AACAC,iCADA;AAEAC,wBAFA;AAGAC;AAHA,UANA;AAWAC,4CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAfA;AAXA;AA8BA;AAEA;AACAP,wBADA;AACA;AACAC,kBAFA;AAKAE;AAAA;AACAC,iCADA;AAEAC,4BAFA;AAGAC;AAHA,UALA;AAUAC,4CACA;AADA;AAVA;AAcA;AACA,KA9SA;AA+SAC,YA/SA,oBA+SAC,KA/SA,EA+SA;AACA;;AACA;AACA/B;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA,KA/TA;AAiUAgC,cAjUA,wBAiUA;AAEA;;AACA;AACAlB;AAEA,OAHA;AAMA,KA1UA;AA2UAmB,cA3UA,wBA2UA;AACA,uBADA,CAEA;;;AACA;AACA;AAEA;AACAvB;AACAwB,kBADA;AAEAzC,yDAFA;AAGA0C,kCAHA;AAIAC;AACA,kCADA;AAEA,8BAFA;AAGA,0DAHA;AAIA,2BAJA;AAKA;AALA;AAJA;AADA;AAeA;AACA;AACA;AAlWA,GA9BA;AAkYAC,SAlYA,qBAkYA;AACA;AACA;AACA;AArYA","names":["data","radio","wp_value","na_value","ep_value","options1","options2","options3","map","vectorMap","layer","imageLayer","routeData","lastZoomPoint","overlay","sequence","id","pressure","finalData","tfOverlay","imgUrl","components","TyphoonInfo","methods","fileSubmit","confirmButtonText","dangerouslyUseHTMLString","callback","initSelect","then","_this","getTyphoonData","http_url","method","response","getData","url","addPointInterval","lastPoint","clearInterval","image","radius","fill","color","stroke","width","geometry","anchor","src","scale","rotation","lastSpeed","fromLonLat","source","index","showInfo","feature","console","popUp","element","autoPan","animation","duration","initMap","title","target","layers","tdtLayer","view","projection","center","zoom","controls","getColor","speed","showVector","drawVector","ratio","crossOrigin","params","mounted"],"sourceRoot":"views","sources":["Typhoon.vue"],"sourcesContent":["<template>\r\n<div style=\"width:100%;height:100%;background-color: #F3F2F3;\">\r\n     <div class=\"box\" ref=\"vis\">\r\n       <div id=\"dashboard\">\r\n            <div id=\"data_upload\" class=\"part\">  \r\n                <div class=\"title\">\r\n                    <h4>\r\n                       台风强度智能预报结果可视化\r\n                    </h4>\r\n                </div>\r\n                <div class=\"center\">\r\n                    <input type=\"button\" value=\"导入台风数据\" id=\"data_btn\" @click=\"fileSubmit\">\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"part\">\r\n                <div class=\"title\" >\r\n                    <h4>\r\n                        选择日期\r\n                    </h4>   \r\n                </div>\r\n                <div class=\"container\">\r\n                    <el-date-picker\r\n                            v-model=\"value1\"\r\n                            type=\"date\"\r\n                            placeholder=\"选择日期\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            value-format=\"yyyy-MM-dd\">\r\n                    </el-date-picker>\r\n                    <el-time-select\r\n                            v-model=\"value2\"\r\n                            :picker-options=\"{\r\n                                start: '00:00',\r\n                                step: '01:00',\r\n                                end: '23:00'\r\n                            }\"\r\n                            placeholder=\"选择时间\">\r\n                    </el-time-select>\r\n                </div>\r\n                \r\n            </div> -->\r\n            <el-divider></el-divider>\r\n            <div style=\"margin-bottom: 5%;\" class=\"part\">  <!--台风-->\r\n                <div class=\"title\">\r\n                    <h4>\r\n                        请选择对应海域\r\n                    </h4>\r\n                </div>\r\n                 <div style=\"margin-left:8%;\">\r\n                       <el-radio-group clearable=true v-model=\"radio\" @change=\"initSelect\">\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"wp\"'>WP</el-radio>\r\n                           <div class=\"select\">\r\n                                <el-select v-model=\"wp_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                    <el-option\r\n                                    v-for=\"item in options1\"\r\n                                    :key=\"item\"\r\n                                    :label=\"item\"\r\n                                    :value=\"item\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </div>\r\n                           </div>\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"ep\"'>EP</el-radio>\r\n                                <div class=\"select\">\r\n                                    <el-select v-model=\"ep_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                        <el-option\r\n                                        v-for=\"item in options2\"\r\n                                        :key=\"item\"\r\n                                        :label=\"item\"\r\n                                        :value=\"item\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                           </div>\r\n                           <div class=\"type\">\r\n                                <el-radio :label='\"na\"'>NA</el-radio>\r\n                                <div class=\"select\">\r\n                                    <el-select v-model=\"na_value\" placeholder=\"请选择\" @change=\"getData\">\r\n                                        <el-option\r\n                                        v-for=\"item in options3\"\r\n                                        :key=\"item\"\r\n                                        :label=\"item\"\r\n                                        :value=\"item\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                           </div>\r\n                        </el-radio-group>\r\n                </div>\r\n            </div>\r\n            <!-- <div style=\"margin-top: 8%;\">\r\n                <div class=\"center\">\r\n                    <input type=\"button\" value=\"渲染\" id=\"draw_btn\" @click=\"drawTyphoon\">\r\n                </div>\r\n            </div> -->\r\n\r\n       </div>\r\n       <div id=\"vis\">\r\n           <div id=\"route\">\r\n\r\n           </div>\r\n           <div id=\"vector\">\r\n\r\n           </div>\r\n           <div id=\"pressure\">\r\n               <div class=\"title\">\r\n                    <h4>\r\n                       请选择压强\r\n                    </h4>\r\n                </div>\r\n               <div id=\"slider\">\r\n                    <el-slider\r\n                    v-model=\"pressure\"\r\n                    :min=\"100\"\r\n                    :max=\"1000\"\r\n                    show-input>\r\n                    </el-slider>\r\n               </div>\r\n                <div id=\"draw\">\r\n                    \r\n                    <input type=\"button\" value=\"渲染\" id=\"draw_btn\" @click=\"drawVector\">\r\n                \r\n                </div>\r\n              \r\n           </div>\r\n       </div>\r\n    </div>\r\n     <TyphoonInfo ref=\"typhoonInfo\" :typhoonData=\"this.finalData\"/>\r\n</div>\r\n    \r\n</template>\r\n\r\n<style>\r\nbody,html{\r\n    height:100%;\r\n    background-color: #F3F2F3;\r\n    margin: 0;\r\n    /* text-align: center; */\r\n}\r\n\r\n.box{\r\n    /* display: inline-block; */\r\n    width: 80%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.box .title{\r\n    margin-left: 3%;\r\n}\r\n\r\n.box .container{\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-left: -2%;\r\n\r\n}\r\n\r\n.box #dashboard{\r\n    float: left;\r\n    height: calc(100% - 10px);\r\n    width: 30%;\r\n    /* border: 1px solid #D2D2D2; */\r\n    margin-top: 10px;\r\n    background-color: white;\r\n}\r\n\r\n\r\n.box #vis{\r\n    width:65%;\r\n    height: calc(100% - 10px);\r\n    background-color: white;\r\n    margin-top: 10px;\r\n    float: left;\r\n    padding-right: 2%;\r\n    padding-left: 2%;\r\n}\r\n\r\n.box #vis #route,.box #vis #vector{\r\n    width: 100%;\r\n    height: 40%;\r\n}\r\n\r\n.box #vis #route{\r\n    margin-top: 3%;\r\n    margin-bottom: 3%; \r\n}\r\n\r\n.box #vis #pressure{\r\n    width:100%;\r\n    height: 10%;\r\n}\r\n\r\n#pressure #slider{\r\n    padding-left: 5%;\r\n    width: 70%;\r\n    float: left;\r\n}\r\n\r\n#pressure #draw{\r\n    width: 10%;\r\n    float: left;\r\n    margin-left: 10%\r\n}\r\n\r\n/* #dashboard #sub_btn{\r\n    width: 131px;\r\n    height: 33px;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: #4472C4;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n} */\r\n\r\n#dashboard .squ-checkbox{\r\n    margin-right:3%;\r\n}\r\n#dashboard .type{\r\n    display: block;\r\n    margin-bottom:10% ;\r\n}\r\n\r\n#dashboard .select{\r\n    padding-left: 15%;\r\n    /* margin-bottom: 5%; */\r\n    margin:4%;\r\n}\r\n\r\n#dashboard .center{\r\n    /* margin-left: -15%; */\r\n    margin-top: 3%;\r\n    text-align:center\r\n}\r\n\r\n#pressure #draw #draw_btn,#dashboard #data_btn{\r\n    width: 80%;\r\n    height: 33px;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: #4472C4;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.container #date{\r\n    float: left;\r\n    margin-left: 2%;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    margin-right: 1%;\r\n}\r\n\r\n.container .form-horizontal{\r\n    float: left;\r\n}\r\n\r\n.el-input__inner {\r\n    height: 33px;\r\n    line-height: 33px;  \r\n}\r\n.el-input__icon {\r\n    line-height: 33px;\r\n}\r\n\r\n.el-date-editor.el-input{\r\n    width: 150px;\r\n    margin: 0 3px;\r\n}\r\n\r\n.el-radio {\r\n    font-weight: 700;\r\n}\r\n\r\n.el-radio__label,.el-checkbox__label {\r\n    font-size: 15px;\r\n}\r\n\r\n.el-divider--horizontal{\r\n    width: 90%;\r\n    margin: 24px auto\r\n}\r\n</style>\r\n\r\n<script>\r\n// import func from 'vue-editor-bridge';\r\nimport \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport Feature from \"ol/Feature\";\r\nimport {OSM,ImageWMS,Vector as VectorSource,XYZ} from \"ol/source\";\r\nimport { Vector as VectorLayer,Image,Tile as TileLayer } from \"ol/layer\";\r\nimport { fromLonLat, get as getProjection } from \"ol/proj\";\r\nimport { Point, MultiLineString, LineString, Polygon, Circle } from \"ol/geom\";\r\nimport { Fill, Circle as CircleStyle, Style, Stroke,Icon } from \"ol/style\";\r\nimport {defaults as defaultControls,ScaleLine,OverviewMap } from \"ol/control\";\r\nimport Overlay from \"ol/Overlay\";\r\nimport TyphoonInfo from \"../src/components/TyphoonInfo\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        // value1:'',   //日期\r\n        // value2:'',   //时刻\r\n        radio:\"\", //海域\r\n        wp_value: '',\r\n        na_value:'',\r\n        ep_value:'',\r\n        options1: null,\r\n        options2:null,\r\n        options3:null,\r\n        map:null,\r\n        vectorMap:null,\r\n        layer:null,\r\n        imageLayer:null,\r\n        routeData:null,\r\n        lastZoomPoint:null,\r\n        overlay:null,\r\n        sequence:null,\r\n        id:null,\r\n        pressure:100, //气压\r\n        finalData:{\"id\": \"0\", \"type\": \"Feature\", \"properties\": {\"date\": \"1979-01-02\", \"latitude\": 5.2, \"longitude\": 168.7, \"max wind speed(intensity)\": 50, \"min pressure\": 990, \"time\": \"00:00:00\"}, \"geometry\": {\"type\": \"Point\", \"coordinates\": [168.7, 5.2]}},\r\n        tfOverlay:null,\r\n        imgUrl:require(\"../src/assets/typhoon2.png\"),\r\n      };\r\n    },\r\n    components: {\r\n        TyphoonInfo,\r\n    },\r\n     methods: {\r\n      fileSubmit() {\r\n        this.$MessageBox.alert('请将数据放置/home/user_typhoon_data/, 格式如下:<ul id=\"myUL\">  <li><span class=\"caret\">WP_solo/</span>   <ul class=\"nested\"> <li><span class=\"caret\">data_seq1/</span> <ul class=\"nested\"> <li>tp_1_pl.nc</li><li>tp_2_pl.nc</li></ul></li><li>tp_seq1.txt</li></ul></li></ul>','提示', {\r\n          confirmButtonText: '确定',\r\n          dangerouslyUseHTMLString: true,\r\n          callback: action => {\r\n            // this.$message({\r\n            //   type: 'info',\r\n            //   message: `action: ${ action }`\r\n            // });\r\n            if(action=== 'confirm'){\r\n                // this.$http.get(\"http://localhost:8080/ocean/processOceanData\")\r\n                // .then(function(response){\r\n                //     console.log(response);\r\n                // })\r\n            }\r\n          }\r\n        });\r\n      },\r\n     \r\n\r\n        initSelect(){\r\n        //   let _this=this\r\n        //   let ocean=this.radio;\r\n        //   this.$http.get(\" http://localhost:8080/typhoon/getMetaInfo/\"+ocean)\r\n        //             .then(function(response){\r\n        //                 _this.options1=null;\r\n        //                 _this.options2=null;\r\n        //                 _this.options3=null;\r\n        //                 let data=response.data.data;\r\n        //                 let typhoonData=data.typhoonMetaData;\r\n        //                 if(ocean==='wp'){\r\n        //                      _this.options1=typhoonData;\r\n        //                 }else if(ocean==='ep'){\r\n        //                     _this.options2=typhoonData;\r\n        //                 }else{\r\n        //                     _this.options3=typhoonData;\r\n        //                 }\r\n                      \r\n        //         })\r\n            \r\n            let _this=this\r\n            this.map.removeLayer(_this.layer);\r\n            this.vectorMap.removeLayer(_this.imageLayer);\r\n            if(this.radio==='wp'){\r\n                    this.ep_value=\"\"\r\n                    this.$http.get(\"https://run.mocky.io/v3/4aa69cf2-f813-4525-9640-788c16cfcd10\")\r\n                    .then(function(response){\r\n                        _this.options2=null;\r\n                        _this.options3=null;\r\n                        \r\n                        let data=response.data.data;\r\n                        let typhoonData=data.typhoonMetaData;\r\n                        _this.options1=typhoonData;\r\n                       \r\n                })\r\n            }else if(this.radio==='ep'){\r\n                \r\n                 this.wp_value=\"\"\r\n                 this.$http.get(\"https://run.mocky.io/v3/6d9add90-c929-4eb1-bf0c-882433706fbb\")\r\n                    .then(function(response){\r\n                        _this.options1=null;\r\n                        _this.options3=null;\r\n                        let data=response.data.data;\r\n                        let typhoonData=data.typhoonMetaData;\r\n                        _this.options2=typhoonData;\r\n                       \r\n            })\r\n        }\r\n        },\r\n        getTyphoonData(http_url){\r\n            // let url=http_url\r\n            let url=\"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\";\r\n            return fetch(url,{\r\n                method: 'GET',\r\n            }).then(function(response) {\r\n                response.status     //=> number 100–599\r\n                response.statusText //=> String\r\n                response.headers    //=> Headers\r\n                response.url        //=> String\r\n\r\n               return response.json()\r\n                }).then(data=>{\r\n                   return data;\r\n            })\r\n              //  this.$http.get(\"http://localhost:8080/typhoon/getGeojsonData/\"+this.radio+\"/\"+seq)\r\n            //         .then(function(response){\r\n            // // })\r\n            // let _this=this\r\n            // this.$http.get(\"https://run.mocky.io/v3/754bdbca-d693-4738-85a8-db67a468915c\")\r\n            //         .then((response)=>{\r\n                        \r\n            //             this.routeData=response.data.data.geoJsonData;\r\n            //             this.routeData = JSON.parse(this.routeData)\r\n            //             this.routeData=this.routeData.featureList\r\n            //             // _this.routeData=response.data.geoJsonData;\r\n            //             this.addPointInterval(this.routeData,_this);\r\n            //             this.showInfo(this.routeData,_this);\r\n            // })\r\n        \r\n     },\r\n        getData: async function(seq){\r\n            this.sequence=seq;\r\n            let url=\" http://localhost:8080/typhoon/getGeojsonData/\"+this.radio+\"/\"+seq\r\n            let response=await this.getTyphoonData(url);\r\n            // console.log(response)\r\n            this.routeData=response.data.geoJsonData;\r\n            this.routeData = JSON.parse(this.routeData)\r\n            this.routeData=this.routeData.featureList;\r\n            // let data=this.routeData;\r\n            this.addPointInterval(this.routeData);\r\n            this.showInfo(this.routeData);\r\n            \r\n        },\r\n\r\n    \r\n        addPointInterval(data){\r\n            // let _this=this;\r\n            let points = data;\r\n            let index = 0;\r\n            let layer = new VectorLayer();\r\n            let source = new VectorSource();\r\n            let lastPoint=null\r\n            let lastSpeed;\r\n            layer.setSource(source);\r\n        let intervalLogo=setInterval(()=>{\r\n        if (index == points.length) {\r\n            lastPoint.set(\"endPoint\",true);  //给最后一点添加标记\r\n            clearInterval(intervalLogo);\r\n            return;\r\n          }\r\n          let curPointData = points[index].properties\r\n          let position = [curPointData.longitude, curPointData.latitude];\r\n          if(lastPoint!=null){\r\n            lastPoint.setStyle(new Style({\r\n                image:new CircleStyle({\r\n                    radius: 3,\r\n                    fill: new Fill({\r\n                        color:this.getColor(lastSpeed)\r\n                    }),\r\n                    stroke: new Stroke({color: this.getColor(lastSpeed), width: 1}),\r\n                  })\r\n            }))\r\n          }\r\n          if (index == 0) {\r\n            this.map.getView().setCenter(fromLonLat(position,'EPSG:4326'));\r\n            this.map.getView().setZoom(3);\r\n          }\r\n     \r\n          let speed=curPointData['max wind speed(intensity)']\r\n        \r\n          var anchor = new Feature({\r\n            geometry:new Point(fromLonLat(position,'EPSG:4326'))\r\n          });\r\n          // 设置样式，在样式中就可以设置图标\r\n          anchor.setStyle(new Style({\r\n            image: new Icon({\r\n              src: this.imgUrl,\r\n              scale:0.5,\r\n              rotation: -360/points.length*index\r\n            })\r\n          }));\r\n          // 添加到之前的创建的layer中去\r\n          layer.getSource().addFeature(anchor);\r\n          anchor.set(\"typhoonPoint\",true);\r\n          anchor.set(\"id\",index);\r\n      \r\n          lastPoint=anchor;\r\n          lastSpeed=speed;\r\n          if (index > 0) {\r\n            let lastPoint=data[index-1].properties\r\n            let lastPosition = [lastPoint.longitude, lastPoint.latitude];\r\n            let featureLine = new Feature({\r\n              geometry: new LineString([\r\n                  fromLonLat(position,'EPSG:4326'),\r\n                  fromLonLat(lastPosition,'EPSG:4326'),\r\n              ]),\r\n            });\r\n            source.addFeature(featureLine);\r\n          }\r\n          // 需要一个出口\r\n          index++;\r\n    },80)\r\n            this.map.addLayer(layer);\r\n            this.layer=layer;\r\n        },\r\n\r\n        showInfo(data){\r\n            let _this=this\r\n            this.map.on('pointermove',function(ev){\r\n            let feature=_this.map.forEachFeatureAtPixel(ev.pixel,function(feature){\r\n                return feature;\r\n        })\r\n            \r\n            if(feature){\r\n                if(feature.get('typhoonPoint')){\r\n                    _this.map.getTargetElement().style.cursor='pointer';\r\n                    if(_this.lastZoomPoint!=null&&!_this.lastZoomPoint.get('endPoint')){\r\n                        _this.lastZoomPoint.getStyle().getImage().setRadius(3);\r\n                        _this.lastZoomPoint.changed();\r\n                    }\r\n                    if(!feature.get('endPoint')){\r\n                        feature.getStyle().getImage().setRadius(5);\r\n                        feature.changed();\r\n                    }\r\n                    _this.lastZoomPoint=feature;\r\n                    var id=feature.get('id');\r\n                    _this.id=id+1;\r\n                    _this.finalData=data[id];\r\n                    //showDetails(ev,id,data);\r\n                    const coordinate = ev.coordinate;//求得坐标\r\n                    _this.tfOverlay.setPosition(coordinate);\r\n                }\r\n            }else{\r\n                 if(_this.lastZoomPoint!=null){\r\n                     if(!_this.lastZoomPoint.get('endPoint')){\r\n                        _this.lastZoomPoint.getStyle().getImage().setRadius(3);\r\n                        _this.lastZoomPoint.changed();\r\n                        _this.lastZoomPoint=null;\r\n                     }\r\n                    \r\n                 }\r\n                _this.map.getTargetElement().style.cursor='';\r\n                _this.tfOverlay.setPosition(undefined);\r\n            }\r\n      \r\n        }) \r\n           this.map.on('click',function(ev){\r\n                console.log(ev);\r\n            \r\n        })\r\n\r\n        },\r\n        popUp: function(){\r\n\t\t\tconst overlay = new Overlay({\r\n                element: this.$refs.typhoonInfo.$el,\r\n                autoPan: {\r\n                animation: {\r\n                    duration: 250,\r\n                },\r\n                },\r\n            });\r\n            //overlay.setPosition(undefined);\r\n            this.tfOverlay=overlay\r\n            this.map.addOverlay(this.tfOverlay);\r\n        },\r\n        initMap(){\r\n            let tdtLayer = new TileLayer({\r\n                title: \"谷歌矢量地图服务\",\r\n                source: new XYZ({\r\n                    // arcgis server\r\n                    // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\r\n                    url: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                })\r\n        });\r\n             let map = new Map({\r\n                target: 'route',                          // 关联到对应的div容器\r\n                layers: [\r\n                   \r\n                    tdtLayer\r\n                ],\r\n                view: new View({                     // 地图视图\r\n                    projection: 'EPSG:4326',\r\n                    center: [0, 0],\r\n                    zoom: 0\r\n                }),\r\n                controls: defaultControls().extend([\r\n                //     new OverviewMap({        // 实例化一个OverviewMap类的对象，并加入到地图中\r\n                //         layers:[\r\n                //     new TileLayer({                 // 瓦片图层\r\n                //         source: new XYZ({\r\n                //     // arcgis server\r\n                //     // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\r\n                //     url: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                // })\r\n                //     })\r\n                // ],\r\n                //         view: new View({                     // 地图视图\r\n                //             projection: 'EPSG:4326',\r\n                \r\n                // }),\r\n                //     })        \r\n                ])\r\n               \r\n    });\r\n            this.map=map;\r\n\r\n             let map2 = new Map({\r\n                target: 'vector',                          // 关联到对应的div容器\r\n                layers: [\r\n                  \r\n                ],\r\n                view: new View({                     // 地图视图\r\n                    projection: 'EPSG:4326',\r\n                    center: [169, 5.6],\r\n                    zoom: 3\r\n                }),\r\n                controls: defaultControls().extend([\r\n                    // new ScaleLine()\r\n                ])\r\n    });\r\n        this.vectorMap=map2;\r\n        },\r\n        getColor(speed){\r\n            let color;\r\n            if(speed>=10.8&&speed<=17.1){\r\n                color='rgb(233,218,122)'\r\n            }else if(speed>=17.2&&speed<=24.4){\r\n                color='rgb(16,29,199)'\r\n            }else if(speed>=24.5&&speed<=32.6){\r\n                color='green'\r\n            }else if(speed>=32.7&&speed<=41.4){\r\n                color='rgb(239,171,118)'\r\n            }else if(speed>=41.5&&speed<=50.9){\r\n                color='rgb(193,89,196)'\r\n            }else{\r\n                color='red'\r\n            }\r\n            return color\r\n     },\r\n\r\n        showVector(){\r\n\r\n            let _this=this\r\n            this.map.on('click',function(ev){\r\n                console.log(\"hello\");\r\n            \r\n        })\r\n        \r\n       \r\n        },\r\n        drawVector(){\r\n            let _this=this;\r\n            // this.vectorMap.removeLayer(_this.imageLayer);\r\n            let seq=this.sequence.split('_')[1];\r\n            let layer=\"cite:\"+this.radio.toUpperCase()+\"_data_\"+seq+\"_tp_1_pl\";\r\n           \r\n            let imageLayer= new Image({\r\n                      source:new ImageWMS({\r\n                          ratio:1,\r\n                          url:\"http://localhost:8089/geoserver/cite/wms\",\r\n                          crossOrigin: 'anonynous',\r\n                          params:{\r\n                              'FORMAT': 'image/jpeg',\r\n                              'VERSION': '1.1.1',\r\n                              \"exceptions\":\"application/vnd.ogc.se_inimage\",\r\n                              \"LAYERS\": layer,\r\n                              'CQL_FILTER': 'level == '+this.pressure\r\n                          }\r\n                      })\r\n\r\n                  });\r\n           this.vectorMap.addLayer(imageLayer);\r\n           this.imageLayer=imageLayer;\r\n        }\r\n     },\r\n     mounted(){\r\n        this.initMap();\r\n        this.popUp();\r\n     },\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module"}